<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="/2024/04/25/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E%E9%AB%98%E7%BA%A7%E7%AF%87/"/>
      <url>/2024/04/25/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E%E9%AB%98%E7%BA%A7%E7%AF%87/</url>
      
        <content type="html"><![CDATA[<p>一、ElasticSearch-全文检索</p><p>官方文档：<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/index.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/index.html</a></p><p>官方中文：<a href="https://www.elastic.co/guide/cn/elasticsearch/guide/current/foreword_id.html">https://www.elastic.co/guide/cn/elasticsearch/guide/current/foreword_id.html</a></p><h3 id="1-elasticsearch、ELK和Lucene是什么？"><a href="#1-elasticsearch、ELK和Lucene是什么？" class="headerlink" title="1.elasticsearch、ELK和Lucene是什么？"></a>1.elasticsearch、ELK和Lucene是什么？</h3><p>什么是elasticsearch？</p><ul><li>一个开源的分布式搜索引擎，可以用来实现搜索、日志统计、分析、系统监控等功能</li></ul><p>什么是elastic stack（ELK）？</p><ul><li>是以elasticsearch为核心的技术栈，包括beats、Logstash、kibana、elasticsearch</li></ul><p>什么是Lucene？</p><ul><li>是Apache的开源搜索引擎类库，提供了搜索引擎的核心API</li></ul><h3 id="2、安装elastic-search和kibana"><a href="#2、安装elastic-search和kibana" class="headerlink" title="2、安装elastic search和kibana"></a>2、安装elastic search和kibana</h3><p> dokcer中安装elastic search</p><p><strong>（1）下载ealastic search和kibana</strong></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker pull elasticsearch:7.6.2</span><br><span class="line">docker pull kibana:7.6.2</span><br></pre></td></tr></table></figure><p><strong>（2）配置</strong></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mkdir -p /mydata/elasticsearch/config  创建目录</span><br><span class="line">mkdir -p /mydata/elasticsearch/data</span><br><span class="line"></span><br><span class="line">echo &quot;http.host: 0.0.0.0&quot; &gt;/mydata/elasticsearch/config/elasticsearch.yml</span><br><span class="line"></span><br><span class="line">//将mydata/elasticsearch/文件夹中文件都可读可写</span><br><span class="line">chmod -R 777 /mydata/elasticsearch/</span><br></pre></td></tr></table></figure><p><strong>（3）启动Elastic search</strong></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker run --name elasticsearch -p 9200:9200 -p 9300:9300 \</span><br><span class="line">-e  &quot;discovery.type=single-node&quot; \</span><br><span class="line">-e ES_JAVA_OPTS=&quot;-Xms64m -Xmx512m&quot; \</span><br><span class="line">-v /mydata/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml \</span><br><span class="line">-v /mydata/elasticsearch/data:/usr/share/elasticsearch/data \</span><br><span class="line">-v  /mydata/elasticsearch/plugins:/usr/share/elasticsearch/plugins \</span><br><span class="line">-d elasticsearch:7.6.2 </span><br></pre></td></tr></table></figure><p>设置开机启动elasticsearch</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker update elasticsearch --restart=always</span><br></pre></td></tr></table></figure><p><strong>（4）如果用的阿里云的云服务启动记得要增加安全组</strong></p><p><img src="image-20240416163105382.png" alt="image-20240416163105382"></p><p><strong>（5）启动kibana：</strong></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker run --name kibana -e ELASTICSEARCH_HOSTS=http://8.138.99.194:9200 -p 5601:5601 -d kibana:7.6.2</span><br></pre></td></tr></table></figure><p>设置开机启动kibana</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker update kibana  --restart=always</span><br></pre></td></tr></table></figure><p><strong>（6）测试</strong></p><p>查看elasticsearch版本信息： <a href="http://8.138.99.194:9200/">http://8.138.99.194:9200/</a></p><p><img src="image-20240416163239593.png" alt="image-20240416163239593"></p><p>显示elasticsearch 节点信息<a href="http://8.138.99.194:9200/_cat/nodes%EF%BC%8C">http://8.138.99.194:9200/_cat/nodes，</a></p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> <span class="number">15</span> <span class="number">92</span> <span class="number">2</span> <span class="number">0.01</span> <span class="number">0.25</span> <span class="number">0.26</span> dilm * dc4b51ce9fcf</span><br></pre></td></tr></table></figure><p>访问Kibana： <a href="http://8.138.99.194:5601/app/kibana#/home">http://8.138.99.194:5601/app/kibana#/home</a></p><p><img src="image-20240416163924454.png" alt="image-20240416163924454"></p><h3 id="3、elasticSearch入门"><a href="#3、elasticSearch入门" class="headerlink" title="3、elasticSearch入门"></a>3、elasticSearch入门</h3><h4 id="1）-CAT"><a href="#1）-CAT" class="headerlink" title="1）_CAT"></a>1）_CAT</h4><p>（1）GET&#x2F;<em>cat&#x2F;nodes：查看所有节点</em></p><p> 如：<a href="http://8.138.99.194:9200/_cat/nodes">http://8.138.99.194:9200/_cat/nodes</a>:</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> <span class="number">15</span> <span class="number">92</span> <span class="number">2</span> <span class="number">0.01</span> <span class="number">0.25</span> <span class="number">0.26</span> dilm * dc4b51ce9fcf</span><br></pre></td></tr></table></figure><p>注：*表示集群中的主节点</p><p>（2）GET&#x2F;<em>cat&#x2F;health：查看es健康状况</em></p><p>如：<a href="http://8.138.99.194:9200/_cat/health">http://8.138.99.194:9200/_cat/health</a></p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="number">1713256998</span> <span class="number">08</span><span class="punctuation">:</span><span class="number">43</span><span class="punctuation">:</span><span class="number">18</span> elasticsearch green <span class="number">1</span> <span class="number">1</span> <span class="number">3</span> <span class="number">3</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> - <span class="number">100.0</span>%</span><br></pre></td></tr></table></figure><p>注：green表示健康值正常</p><p>（3）GET&#x2F;_cat&#x2F;master：查看主节点_信息</p><p>如： <a href="http://8.138.99.194:9200/_cat/master">http://8.138.99.194:9200/_cat/master</a> </p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">Bkzft80NS1imqnM5Hv7h-g <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> dc4b51ce9fcf</span><br></pre></td></tr></table></figure><p>（4）GET&#x2F;_cat&#x2F;indicies：查看所有索引 ，等价于mysql数据库的show databases;</p><p>如： <a href="http://8.138.99.194:9200/_cat/indices">http://8.138.99.194:9200/_cat/indices</a> </p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">green open .kibana_task_manager_1   QIdIVwseSQOA89j9YCsRwQ <span class="number">1</span> <span class="number">0</span> <span class="number">2</span> <span class="number">0</span> <span class="number">43.5</span>kb <span class="number">43.5</span>kb</span><br><span class="line">green open .apm-agent-configuration <span class="number">7</span>sfl0GqhS6qsFKYPLq_kgg <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span>   <span class="number">283</span>b   <span class="number">283</span>b</span><br><span class="line">green open .kibana_1                g2pECUCxRJKbDR9fW7J9zA <span class="number">1</span> <span class="number">0</span> <span class="number">7</span> <span class="number">1</span>   <span class="number">34</span>kb   <span class="number">34</span>kb</span><br></pre></td></tr></table></figure><h4 id="2）索引一个文档"><a href="#2）索引一个文档" class="headerlink" title="2）索引一个文档"></a>2）索引一个文档</h4><p>保存一个数据，保存在哪个索引的哪个类型下，指定用那个唯一标识<br>PUT customer&#x2F;external&#x2F;1;在customer索引下的external类型下保存1号数据为</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PUT customer/external/1</span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line"> <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span><span class="string">&quot;John Doe&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>PUT和POST都可以<br>POST新增和修改。如果不指定id，会自动生成id。指定id如果之前有数据就会修改这个数据，并修改版本号，如果之前没数据就会新增；<br>PUT可以新增也可以修改。<em>PUT必须指定id</em>；由于PUT需要指定id，我们一般用来做修改操作，不指定id会报错。(发送多次是更新的操作，版本会叠加)</p><p><strong>PUT操作</strong></p><p>下面是在postman中的测试数据：<br><img src="image-20240416164835192.png" alt="image-20240416164835192"></p><p>创建数据成功后，显示201 created表示插入记录成功。</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;_index&quot;</span><span class="punctuation">:</span> <span class="string">&quot;customer&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;_type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;external&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;_version&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;result&quot;</span><span class="punctuation">:</span> <span class="string">&quot;created&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;_shards&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;total&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;successful&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;failed&quot;</span><span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;_seq_no&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;_primary_term&quot;</span><span class="punctuation">:</span> <span class="number">1</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>这些返回的JSON串的含义；</p><p>带有下划线开头的，称为元数据，反映了当前的基本信息。</p><p>“_index”: “customer” 表明该数据在哪个数据库下；</p><p>“_type”: “external”     表明该数据在哪个类型下；</p><p>“_id”: “1”                    表明被保存数据的id；</p><p> “_version”: 1,            被保存数据的版本</p><p>“result”: “created”      这里是创建了一条数据，如果重新put一条数据，则该状态会变为updated，并且版本号也会发生变化。</p><p><strong>POST方式：</strong></p><p>添加数据的时候，不指定ID，会自动的生成id，并且类型是新增：</p><p><img src="image-20240416165420352.png" alt="image-20240416165420352"></p><p>再次使用POST插入数据，仍然是新增的：</p><p><img src="image-20240416165457784.png" alt="image-20240416165457784"></p><p>添加数据的时候，指定ID，会使用该id，并且类型是新增：</p><p><img src="image-20240416165542309.png" alt="image-20240416165542309"></p><p>再次使用POST插入数据，类型为updated</p><p><img src="image-20240416165605155.png" alt="image-20240416165605155"></p><h4 id="3）查询文档"><a href="#3）查询文档" class="headerlink" title="3）查询文档"></a>3）查询文档</h4><p>GET &#x2F;customer&#x2F;external&#x2F;1</p><p> <a href="http://8.138.99.194:9200/customer/external/1">http://8.138.99.194:9200/customer/external/1</a> </p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;_index&quot;</span><span class="punctuation">:</span> <span class="string">&quot;customer&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;_type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;external&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;_version&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;_seq_no&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="comment">//并发控制字段，每次更新就会+1，用来做乐观锁</span></span><br><span class="line">    <span class="attr">&quot;_primary_term&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span><span class="comment">//同上，主分片重新分配，如重启，就会变化</span></span><br><span class="line">    <span class="attr">&quot;found&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;_source&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;John Doe&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>通过“if_seq_no&#x3D;1&amp;if_primary_term&#x3D;1 ”，当序列号匹配的时候，才进行修改，否则不修改。</p><p>实例：将id&#x3D;1的数据更新为name&#x3D;1，然后再次更新为name&#x3D;2，起始_seq_no&#x3D;6，_primary_term&#x3D;1</p><p>（1）将name更新为1</p><p> <a href="http://8.138.99.194:9200/customer/external/1?if_seq_no=1&if_primary_term=1">http://8.138.99.194:9200/customer/external/1?if_seq_no=1&amp;if_primary_term=1</a> </p><p><img src="image-20240416170919861.png" alt="image-20240416170919861"></p><p> （2）将name更新为2，更新过程中使用seq_no&#x3D;6</p><p><a href="http://8.138.99.194:9200/customer/external/1?if_seq_no=6&if_primary_term=1">http://8.138.99.194:9200/customer/external/1?if_seq_no=6&amp;if_primary_term=1</a> </p><p><img src="image-20240416170951827.png" alt="image-20240416170951827"></p><p>出现更新错误。</p><p>（3）查询新的数据</p><p> <a href="http://8.138.99.194:9200/customer/external/1">http://8.138.99.194:9200/customer/external/1</a> </p><p><img src="image-20240416171056860.png" alt="image-20240416171056860"></p><p>能够看到_seq_no变为5。</p><p>（4）再次更新，更新成功，并且_seq_no值变为6</p><p> <a href="http://8.138.99.194:9200/customer/external/1?if_seq_no=5&if_primary_term=1">http://8.138.99.194:9200/customer/external/1?if_seq_no=5&amp;if_primary_term=1</a> </p><p><img src="image-20240416171139927.png" alt="image-20240416171139927"></p><h4 id="4）更新文档"><a href="#4）更新文档" class="headerlink" title="4）更新文档"></a>4）更新文档</h4><p><img src="image-20240416171343468.png" alt="image-20240416171343468"></p><p> <img src="image-20240416171431784.png" alt="image-20240416171431784"></p><p>（1）POST更新文档，带有_update</p><p><a href="http://8.138.99.194:9200/customer/external/1/_update">http://8.138.99.194:9200/customer/external/1/_update</a> </p><p><img src="image-20240416171639983.png" alt="image-20240416171639983"></p><p>如果再次执行更新，则不执行任何操作，序列号也不发生变化</p><p><img src="image-20240416171721008.png" alt="image-20240416171721008"></p><p>POST更新方式，会对比原来的数据，和原来的相同，则不执行任何操作（version和_seq_no）都不变。</p><p> （2）POST更新文档，不带_update和“doc”，不会检查原数据是否相同</p><p><img src="image-20240416172013597.png" alt="image-20240416172013597"></p><p>在更新过程中，重复执行更新操作，数据也能够更新成功，不会和原来的数据进行对比。</p><h4 id="5）删除文档或索引"><a href="#5）删除文档或索引" class="headerlink" title="5）删除文档或索引"></a>5）删除文档或索引</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">DELETE customer/external/1</span><br><span class="line">DELETE customer</span><br></pre></td></tr></table></figure><p>注：elasticsearch并没有提供删除类型的操作，只提供了删除索引和文档的操作。</p><p>实例：删除id&#x3D;1的数据，删除后继续查询</p><p><img src="image-20240416172331128.png" alt="image-20240416172331128"></p><p>实例：删除整个costomer索引数据</p><p>删除前，所有的索引</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">green  open .kibana_task_manager_1   QIdIVwseSQOA89j9YCsRwQ <span class="number">1</span> <span class="number">0</span> <span class="number">2</span> <span class="number">0</span> <span class="number">43.5</span>kb <span class="number">43.5</span>kb</span><br><span class="line">green  open .apm-agent-configuration <span class="number">7</span>sfl0GqhS6qsFKYPLq_kgg <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span>   <span class="number">283</span>b   <span class="number">283</span>b</span><br><span class="line">green  open .kibana_1                g2pECUCxRJKbDR9fW7J9zA <span class="number">1</span> <span class="number">0</span> <span class="number">7</span> <span class="number">0</span> <span class="number">34.6</span>kb <span class="number">34.6</span>kb</span><br><span class="line">yellow open customer                 y0rQmrIqQOeR7OCq_Wusww <span class="number">1</span> <span class="number">1</span> <span class="number">4</span> <span class="number">1</span>   <span class="number">11</span>kb   <span class="number">11</span>kb</span><br></pre></td></tr></table></figure><p>删除“ customer ”索引</p><p><img src="image-20240416172528577.png" alt="image-20240416172528577"></p><p>删除后，所有的索引</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">green open .kibana_task_manager_1   QIdIVwseSQOA89j9YCsRwQ <span class="number">1</span> <span class="number">0</span> <span class="number">2</span> <span class="number">0</span> <span class="number">43.5</span>kb <span class="number">43.5</span>kb</span><br><span class="line">green open .apm-agent-configuration <span class="number">7</span>sfl0GqhS6qsFKYPLq_kgg <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span>   <span class="number">283</span>b   <span class="number">283</span>b</span><br><span class="line">green open .kibana_1                g2pECUCxRJKbDR9fW7J9zA <span class="number">1</span> <span class="number">0</span> <span class="number">7</span> <span class="number">0</span> <span class="number">34.6</span>kb <span class="number">34.6</span>kb</span><br></pre></td></tr></table></figure><h4 id="6）eleasticsearch的批量操作——bulk"><a href="#6）eleasticsearch的批量操作——bulk" class="headerlink" title="6）eleasticsearch的批量操作——bulk"></a>6）eleasticsearch的批量操作——bulk</h4><p>POST customer&#x2F;external&#x2F;_bulk</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;index&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;_id&quot;</span><span class="punctuation">:</span><span class="string">&quot;1&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;John Doe&quot;</span> <span class="punctuation">&#125;</span></span><br><span class="line"><span class="comment">//每两个为一组操作</span></span><br><span class="line"></span><br><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;index&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;_id&quot;</span><span class="punctuation">:</span><span class="string">&quot;2&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Jane Doe&quot;</span> <span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>语法格式：</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span> action<span class="punctuation">:</span> <span class="punctuation">&#123;</span> metadata <span class="punctuation">&#125;</span><span class="punctuation">&#125;</span>\n  <span class="comment">//例如index保存记录，update更新</span></span><br><span class="line"></span><br><span class="line"><span class="punctuation">&#123;</span> request body <span class="punctuation">&#125;</span>\n</span><br><span class="line"></span><br><span class="line"><span class="punctuation">&#123;</span> action<span class="punctuation">:</span> <span class="punctuation">&#123;</span> metadata <span class="punctuation">&#125;</span><span class="punctuation">&#125;</span>\n</span><br><span class="line"></span><br><span class="line"><span class="punctuation">&#123;</span> request body <span class="punctuation">&#125;</span>\n</span><br></pre></td></tr></table></figure><p>复杂实例：</p><p>POST &#x2F;_bulk</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span> <span class="attr">&quot;delete&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;_index&quot;</span><span class="punctuation">:</span> <span class="string">&quot;website&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;_type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;blog&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;123&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="punctuation">&#123;</span> <span class="attr">&quot;create&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;_index&quot;</span><span class="punctuation">:</span> <span class="string">&quot;website&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;_type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;blog&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;123&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">&#125;</span><span class="punctuation">&#123;</span> <span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> </span><br><span class="line"></span><br><span class="line"><span class="string">&quot;My first blog post&quot;</span> <span class="punctuation">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="punctuation">&#123;</span> <span class="attr">&quot;index&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;_index&quot;</span><span class="punctuation">:</span> <span class="string">&quot;website&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;_type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;blog&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="punctuation">&#123;</span> <span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> </span><br><span class="line"></span><br><span class="line"><span class="string">&quot;My second blog post&quot;</span> <span class="punctuation">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="punctuation">&#123;</span> <span class="attr">&quot;update&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;_index&quot;</span><span class="punctuation">:</span> <span class="string">&quot;website&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;_type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;blog&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;123&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;_retry_on_conflict&quot;</span> <span class="punctuation">:</span> <span class="number">3</span><span class="punctuation">&#125;</span> <span class="punctuation">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="punctuation">&#123;</span> <span class="attr">&quot;doc&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="attr">&quot;title&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;My updated blog post&quot;</span><span class="punctuation">&#125;</span> <span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>这里的批量操作，当发生某一条执行发生失败时，其他的数据仍然能够接着执行，也就是说彼此之间是独立的。</p><p>bulk api以此按顺序执行所有的action（动作）。如果一个单个的动作因任何原因失败，它将继续处理它后面剩余的动作。当bulk api返回时，它将提供每个动作的状态（与发送的顺序相同），所以您可以检查是否一个指定的动作是否失败了。</p><p>实例1: 执行多条数据 (postman 报错，在kibana中的Dev_tools中执行)</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">POST /customer/external/_bulk</span><br><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;index&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;_id&quot;</span><span class="punctuation">:</span><span class="string">&quot;1&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span><span class="string">&quot;John Doe&quot;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;index&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;_id&quot;</span><span class="punctuation">:</span><span class="string">&quot;2&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span><span class="string">&quot;John Doe&quot;</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>执行结果，每个结果独立存在，互不影响</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">#! Deprecation<span class="punctuation">:</span> <span class="punctuation">[</span>types removal<span class="punctuation">]</span> Specifying types in bulk requests is deprecated.</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;took&quot;</span> <span class="punctuation">:</span> <span class="number">390</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;errors&quot;</span> <span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;items&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span> </span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;index&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="comment">//第一条数据结果，表示执行保存操作</span></span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;customer&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;external&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_version&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;result&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;created&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_shards&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;successful&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;failed&quot;</span> <span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_seq_no&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_primary_term&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;status&quot;</span> <span class="punctuation">:</span> <span class="number">201</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;index&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="comment">//第二条数据结果，表示执行保存操作</span></span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;customer&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;external&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;2&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_version&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;result&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;created&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_shards&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;successful&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;failed&quot;</span> <span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_seq_no&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_primary_term&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;status&quot;</span> <span class="punctuation">:</span> <span class="number">201</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>实例2：对于整个索引执行批量操作</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">POST /_bulk</span><br><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;delete&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;_index&quot;</span><span class="punctuation">:</span><span class="string">&quot;website&quot;</span><span class="punctuation">,</span><span class="attr">&quot;_type&quot;</span><span class="punctuation">:</span><span class="string">&quot;blog&quot;</span><span class="punctuation">,</span><span class="attr">&quot;_id&quot;</span><span class="punctuation">:</span><span class="string">&quot;123&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;create&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;_index&quot;</span><span class="punctuation">:</span><span class="string">&quot;website&quot;</span><span class="punctuation">,</span><span class="attr">&quot;_type&quot;</span><span class="punctuation">:</span><span class="string">&quot;blog&quot;</span><span class="punctuation">,</span><span class="attr">&quot;_id&quot;</span><span class="punctuation">:</span><span class="string">&quot;123&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;title&quot;</span><span class="punctuation">:</span><span class="string">&quot;my first blog post&quot;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;index&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;_index&quot;</span><span class="punctuation">:</span><span class="string">&quot;website&quot;</span><span class="punctuation">,</span><span class="attr">&quot;_type&quot;</span><span class="punctuation">:</span><span class="string">&quot;blog&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;title&quot;</span><span class="punctuation">:</span><span class="string">&quot;my second blog post&quot;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;update&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;_index&quot;</span><span class="punctuation">:</span><span class="string">&quot;website&quot;</span><span class="punctuation">,</span><span class="attr">&quot;_type&quot;</span><span class="punctuation">:</span><span class="string">&quot;blog&quot;</span><span class="punctuation">,</span><span class="attr">&quot;_id&quot;</span><span class="punctuation">:</span><span class="string">&quot;123&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;doc&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;title&quot;</span><span class="punctuation">:</span><span class="string">&quot;my updated blog post&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>运行结果：（即使删除操作有问题其他操作依旧正常执行）</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">#! Deprecation<span class="punctuation">:</span> <span class="punctuation">[</span>types removal<span class="punctuation">]</span> Specifying types in bulk requests is deprecated.</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;took&quot;</span> <span class="punctuation">:</span> <span class="number">495</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;errors&quot;</span> <span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;items&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;delete&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;website&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;blog&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;123&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_version&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;result&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;not_found&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_shards&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;successful&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;failed&quot;</span> <span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_seq_no&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_primary_term&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;status&quot;</span> <span class="punctuation">:</span> <span class="number">404</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;create&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;website&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;blog&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;123&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_version&quot;</span> <span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;result&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;created&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_shards&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;successful&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;failed&quot;</span> <span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_seq_no&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_primary_term&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;status&quot;</span> <span class="punctuation">:</span> <span class="number">201</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;index&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;website&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;blog&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;7MxF5o4BBQXJqQZuUd8Q&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_version&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;result&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;created&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_shards&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;successful&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;failed&quot;</span> <span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_seq_no&quot;</span> <span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_primary_term&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;status&quot;</span> <span class="punctuation">:</span> <span class="number">201</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;update&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;website&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;blog&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;123&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_version&quot;</span> <span class="punctuation">:</span> <span class="number">3</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;result&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;updated&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_shards&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;successful&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;failed&quot;</span> <span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_seq_no&quot;</span> <span class="punctuation">:</span> <span class="number">3</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_primary_term&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;status&quot;</span> <span class="punctuation">:</span> <span class="number">200</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="7）样本测试数据"><a href="#7）样本测试数据" class="headerlink" title="7）样本测试数据"></a>7）样本测试数据</h4><p>准备了一份顾客银行账户信息的虚构的JSON文档样本。每个文档都有下列的schema（模式）。</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;account_number&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;balance&quot;</span><span class="punctuation">:</span> <span class="number">39225</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;firstname&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Amber&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;lastname&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Duke&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;age&quot;</span><span class="punctuation">:</span> <span class="number">32</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;gender&quot;</span><span class="punctuation">:</span> <span class="string">&quot;M&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;address&quot;</span><span class="punctuation">:</span> <span class="string">&quot;880 Holmes Lane&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;employer&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Pyrami&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;email&quot;</span><span class="punctuation">:</span> <span class="string">&quot;amberduke@pyrami.com&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;city&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Brogan&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;state&quot;</span><span class="punctuation">:</span> <span class="string">&quot;IL&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p><a href="https://github.com/elastic/elasticsearch/blob/7.4/docs/src/test/resources/accounts.json%EF%BC%8C%E5%AF%BC%E5%85%A5%E6%B5%8B%E8%AF%95%E6%95%B0%E6%8D%AE%EF%BC%8C">https://github.com/elastic/elasticsearch/blob/7.4/docs/src/test/resources/accounts.json，导入测试数据，</a></p><p>POST bank&#x2F;account&#x2F;_bulk</p><p>查看索引新增成功</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">yellow open bank                     ngitcn8cS-KYZLCVQGCb9g <span class="number">1</span> <span class="number">1</span> <span class="number">1000</span> <span class="number">0</span> <span class="number">427.5</span>kb <span class="number">427.5</span>kb</span><br><span class="line">yellow open website                  BbOV7BpFSvKTzyRuKg1phQ <span class="number">1</span> <span class="number">1</span>    <span class="number">2</span> <span class="number">2</span>   <span class="number">8.6</span>kb   <span class="number">8.6</span>kb</span><br><span class="line">green  open .kibana_task_manager_1   QIdIVwseSQOA89j9YCsRwQ <span class="number">1</span> <span class="number">0</span>    <span class="number">2</span> <span class="number">0</span>  <span class="number">43.5</span>kb  <span class="number">43.5</span>kb</span><br><span class="line">green  open .apm-agent-configuration <span class="number">7</span>sfl0GqhS6qsFKYPLq_kgg <span class="number">1</span> <span class="number">0</span>    <span class="number">0</span> <span class="number">0</span>    <span class="number">283</span>b    <span class="number">283</span>b</span><br><span class="line">green  open .kibana_1                g2pECUCxRJKbDR9fW7J9zA <span class="number">1</span> <span class="number">0</span>    <span class="number">9</span> <span class="number">0</span>  <span class="number">37.3</span>kb  <span class="number">37.3</span>kb</span><br><span class="line">yellow open customer                 BGQLiYnaR7221GrvY4Sd1A <span class="number">1</span> <span class="number">1</span>    <span class="number">2</span> <span class="number">0</span>   <span class="number">3.5</span>kb   <span class="number">3.5</span>kb</span><br></pre></td></tr></table></figure><h3 id="4、elasticSearch进阶检索"><a href="#4、elasticSearch进阶检索" class="headerlink" title="4、elasticSearch进阶检索"></a>4、elasticSearch进阶检索</h3><p>按照7.6的官方文档进行测试</p><p><a href="https://www.elastic.co/guide/en/elasticsearch/reference/7.6/getting-started-search.html">https://www.elastic.co/guide/en/elasticsearch/reference/7.6/getting-started-search.html</a></p><h4 id="1）search-Api"><a href="#1）search-Api" class="headerlink" title="1）search Api"></a>1）search Api</h4><p>ES支持两种基本方式检索；</p><ul><li><p>通过REST request uri 发送搜索参数 （uri +检索参数）；</p><p>GET bank&#x2F;_search?q&#x3D;*&amp;sort&#x3D;account_number:asc</p></li><li><p>通过REST request body 来发送它们（uri+请求体）；</p><p>GET bank&#x2F;_search</p><p>{</p><p>​请求体</p><p>}</p></li></ul><p>信息检索</p><p><img src="image-20240416175704372.png" alt="image-20240416175704372"></p><p>uri+请求体进行检索</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">GET /bank/_search</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;query&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;match_all&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;sort&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span> <span class="attr">&quot;account_number&quot;</span><span class="punctuation">:</span> <span class="string">&quot;asc&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span><span class="attr">&quot;balance&quot;</span><span class="punctuation">:</span><span class="string">&quot;desc&quot;</span><span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"><span class="comment">//先按账号升序，账号相同再按余额降序</span></span><br></pre></td></tr></table></figure><p>HTTP客户端工具（），get请求不能够携带请求体，</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">GET bank/_search?q=*&amp;sort=account_number:asc</span><br><span class="line"><span class="comment">//q=* 查询所有，sort=account_number:asc 按照account_number进行asc升序排列sort</span></span><br></pre></td></tr></table></figure><p>返回结果：</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;took&quot;</span> <span class="punctuation">:</span> <span class="number">235</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;timed_out&quot;</span> <span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;_shards&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;successful&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;skipped&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;failed&quot;</span> <span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;hits&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">1000</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;relation&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;eq&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;max_score&quot;</span> <span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hits&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;bank&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;account&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> <span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;account_number&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;balance&quot;</span> <span class="punctuation">:</span> <span class="number">16623</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;firstname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Bradshaw&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;lastname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Mckenzie&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;age&quot;</span> <span class="punctuation">:</span> <span class="number">29</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;gender&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;F&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;address&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;244 Columbus Place&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;employer&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Euron&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;email&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;bradshawmckenzie@euron.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;city&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Hobucken&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;state&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;CO&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;sort&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">          <span class="number">0</span></span><br><span class="line">        <span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;bank&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;account&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> <span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;account_number&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;balance&quot;</span> <span class="punctuation">:</span> <span class="number">39225</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;firstname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Amber&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;lastname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Duke&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;age&quot;</span> <span class="punctuation">:</span> <span class="number">32</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;gender&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;M&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;address&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;880 Holmes Lane&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;employer&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Pyrami&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;email&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;amberduke@pyrami.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;city&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Brogan&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;state&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;IL&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;sort&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">          <span class="number">1</span></span><br><span class="line">        <span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;bank&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;account&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;2&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> <span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;account_number&quot;</span> <span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;balance&quot;</span> <span class="punctuation">:</span> <span class="number">28838</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;firstname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Roberta&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;lastname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Bender&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;age&quot;</span> <span class="punctuation">:</span> <span class="number">22</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;gender&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;F&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;address&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;560 Kingsway Place&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;employer&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Chillium&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;email&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;robertabender@chillium.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;city&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Bennett&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;state&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;LA&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;sort&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">          <span class="number">2</span></span><br><span class="line">        <span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;bank&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;account&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;3&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> <span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;account_number&quot;</span> <span class="punctuation">:</span> <span class="number">3</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;balance&quot;</span> <span class="punctuation">:</span> <span class="number">44947</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;firstname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Levine&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;lastname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Burks&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;age&quot;</span> <span class="punctuation">:</span> <span class="number">26</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;gender&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;F&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;address&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;328 Wilson Avenue&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;employer&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Amtap&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;email&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;levineburks@amtap.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;city&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Cochranville&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;state&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;HI&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;sort&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">          <span class="number">3</span></span><br><span class="line">        <span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;bank&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;account&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;4&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> <span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;account_number&quot;</span> <span class="punctuation">:</span> <span class="number">4</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;balance&quot;</span> <span class="punctuation">:</span> <span class="number">27658</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;firstname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Rodriquez&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;lastname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Flores&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;age&quot;</span> <span class="punctuation">:</span> <span class="number">31</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;gender&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;F&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;address&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;986 Wyckoff Avenue&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;employer&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Tourmania&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;email&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;rodriquezflores@tourmania.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;city&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Eastvale&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;state&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;HI&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;sort&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">          <span class="number">4</span></span><br><span class="line">        <span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;bank&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;account&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;5&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> <span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;account_number&quot;</span> <span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;balance&quot;</span> <span class="punctuation">:</span> <span class="number">29342</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;firstname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Leola&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;lastname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Stewart&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;age&quot;</span> <span class="punctuation">:</span> <span class="number">30</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;gender&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;F&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;address&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;311 Elm Place&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;employer&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Diginetic&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;email&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;leolastewart@diginetic.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;city&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Fairview&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;state&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;NJ&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;sort&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">          <span class="number">5</span></span><br><span class="line">        <span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;bank&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;account&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;6&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> <span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;account_number&quot;</span> <span class="punctuation">:</span> <span class="number">6</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;balance&quot;</span> <span class="punctuation">:</span> <span class="number">5686</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;firstname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Hattie&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;lastname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Bond&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;age&quot;</span> <span class="punctuation">:</span> <span class="number">36</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;gender&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;M&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;address&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;671 Bristol Street&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;employer&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Netagy&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;email&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;hattiebond@netagy.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;city&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Dante&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;state&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;TN&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;sort&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">          <span class="number">6</span></span><br><span class="line">        <span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;bank&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;account&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;7&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> <span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;account_number&quot;</span> <span class="punctuation">:</span> <span class="number">7</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;balance&quot;</span> <span class="punctuation">:</span> <span class="number">39121</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;firstname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Levy&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;lastname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Richard&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;age&quot;</span> <span class="punctuation">:</span> <span class="number">22</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;gender&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;M&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;address&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;820 Logan Street&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;employer&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Teraprene&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;email&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;levyrichard@teraprene.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;city&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Shrewsbury&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;state&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;MO&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;sort&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">          <span class="number">7</span></span><br><span class="line">        <span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;bank&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;account&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;8&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> <span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;account_number&quot;</span> <span class="punctuation">:</span> <span class="number">8</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;balance&quot;</span> <span class="punctuation">:</span> <span class="number">48868</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;firstname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Jan&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;lastname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Burns&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;age&quot;</span> <span class="punctuation">:</span> <span class="number">35</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;gender&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;M&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;address&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;699 Visitation Place&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;employer&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Glasstep&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;email&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;janburns@glasstep.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;city&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Wakulla&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;state&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;AZ&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;sort&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">          <span class="number">8</span></span><br><span class="line">        <span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;bank&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;account&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;9&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> <span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;account_number&quot;</span> <span class="punctuation">:</span> <span class="number">9</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;balance&quot;</span> <span class="punctuation">:</span> <span class="number">24776</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;firstname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Opal&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;lastname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Meadows&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;age&quot;</span> <span class="punctuation">:</span> <span class="number">39</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;gender&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;M&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;address&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;963 Neptune Avenue&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;employer&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Cedward&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;email&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;opalmeadows@cedward.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;city&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Olney&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;state&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;OH&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;sort&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">          <span class="number">9</span></span><br><span class="line">        <span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>（1）只有9条数据，这是因为存在分页查询；</p><p>（2）详细的字段信息，参照： <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/getting-started-search.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/getting-started-search.html</a> </p><blockquote><p>The response also provides the following information about the search request:</p><ul><li><code>took</code> – how long it took Elasticsearch to run the query, in milliseconds</li><li><code>timed_out</code> – whether or not the search request timed out</li><li><code>_shards</code> – how many shards were searched and a breakdown of how many shards succeeded, failed, or were skipped.</li><li><code>max_score</code> – the score of the most relevant document found</li><li><code>hits.total.value</code> - how many matching documents were found</li><li><code>hits.sort</code> - the document’s sort position (when not sorting by relevance score)</li><li><code>hits._score</code> - the document’s relevance score (not applicable when using <code>match_all</code>)</li></ul></blockquote><h4 id="2）Query-DSL"><a href="#2）Query-DSL" class="headerlink" title="2）Query DSL"></a>2）Query DSL</h4><h5 id="（1）基本语法格式"><a href="#（1）基本语法格式" class="headerlink" title="（1）基本语法格式"></a>（1）基本语法格式</h5><p>Elasticsearch提供了一个可以执行查询的Json风格的DSL。这个被称为Query DSL，该查询语言非常全面。</p><p>一个查询语句的典型结构</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">QUERY_NAME<span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">   ARGUMENT<span class="punctuation">:</span>VALUE<span class="punctuation">,</span></span><br><span class="line">   ARGUMENT<span class="punctuation">:</span>VALUE<span class="punctuation">,</span>...</span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>如果针对于某个字段，那么它的结构如下：</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  QUERY_NAME<span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">     FIELD_NAME<span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">       ARGUMENT<span class="punctuation">:</span>VALUE<span class="punctuation">,</span></span><br><span class="line">       ARGUMENT<span class="punctuation">:</span>VALUE<span class="punctuation">,</span>...</span><br><span class="line">      <span class="punctuation">&#125;</span>   </span><br><span class="line">   <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">GET bank/_search</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;query&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;match_all&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;from&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;size&quot;</span><span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;sort&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;account_number&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;order&quot;</span><span class="punctuation">:</span> <span class="string">&quot;desc&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"><span class="comment">//match_al查询所有，从第0个数据拿5个数据</span></span><br></pre></td></tr></table></figure><p>query定义如何查询；</p><ul><li>match_all查询类型【代表查询所有的所有】，es中可以在query中组合非常多的查询类型完成复杂查询；</li><li>除了query参数之外，我们可也传递其他的参数以改变查询结果，如sort，size；</li><li>from+size限定，完成分页功能；</li><li>sort排序，多字段排序，会在前序字段相等时后续字段内部排序，否则以前序为准；</li></ul><h5 id="（2）返回部分字段“-source”-“”-””"><a href="#（2）返回部分字段“-source”-“”-””" class="headerlink" title="（2）返回部分字段“_source”:[“”,””]"></a>（2）返回部分字段“_source”:[“”,””]</h5><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">GET bank/_search</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;query&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;match_all&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;from&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;size&quot;</span><span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;sort&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;account_number&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;order&quot;</span><span class="punctuation">:</span> <span class="string">&quot;desc&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;_source&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;balance&quot;</span><span class="punctuation">,</span><span class="string">&quot;firstname&quot;</span><span class="punctuation">]</span></span><br><span class="line">  </span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>查询结果：</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;took&quot;</span> <span class="punctuation">:</span> <span class="number">18</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;timed_out&quot;</span> <span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;_shards&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;successful&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;skipped&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;failed&quot;</span> <span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;hits&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">1000</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;relation&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;eq&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;max_score&quot;</span> <span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hits&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;bank&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;account&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;999&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> <span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;firstname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Dorothy&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;balance&quot;</span> <span class="punctuation">:</span> <span class="number">6087</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;sort&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">          <span class="number">999</span></span><br><span class="line">        <span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;bank&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;account&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;998&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> <span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;firstname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Letha&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;balance&quot;</span> <span class="punctuation">:</span> <span class="number">16869</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;sort&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">          <span class="number">998</span></span><br><span class="line">        <span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;bank&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;account&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;997&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> <span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;firstname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Combs&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;balance&quot;</span> <span class="punctuation">:</span> <span class="number">25311</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;sort&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">          <span class="number">997</span></span><br><span class="line">        <span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;bank&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;account&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;996&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> <span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;firstname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Andrews&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;balance&quot;</span> <span class="punctuation">:</span> <span class="number">17541</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;sort&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">          <span class="number">996</span></span><br><span class="line">        <span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;bank&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;account&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;995&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> <span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;firstname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Phelps&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;balance&quot;</span> <span class="punctuation">:</span> <span class="number">21153</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;sort&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">          <span class="number">995</span></span><br><span class="line">        <span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="（3）match匹配查询"><a href="#（3）match匹配查询" class="headerlink" title="（3）match匹配查询"></a>（3）match匹配查询</h5><ul><li>基本类型（非字符串），”account_number”: 20 可加可不加“ ” 不加就是精确匹配</li></ul><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">GET bank/_search</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;query&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;match&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;account_number&quot;</span><span class="punctuation">:</span> <span class="string">&quot;20&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>match返回account_number&#x3D;20的数据。</p><p>查询结果：</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;took&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;timed_out&quot;</span> <span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;_shards&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;successful&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;skipped&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;failed&quot;</span> <span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;hits&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;relation&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;eq&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;max_score&quot;</span> <span class="punctuation">:</span> <span class="number">1.0</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hits&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;bank&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;account&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;20&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> <span class="punctuation">:</span> <span class="number">1.0</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;account_number&quot;</span> <span class="punctuation">:</span> <span class="number">20</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;balance&quot;</span> <span class="punctuation">:</span> <span class="number">16418</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;firstname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Elinor&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;lastname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Ratliff&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;age&quot;</span> <span class="punctuation">:</span> <span class="number">36</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;gender&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;M&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;address&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;282 Kings Place&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;employer&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Scentric&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;email&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;elinorratliff@scentric.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;city&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Ribera&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;state&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;WA&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>字符串，全文检索“ ” 模糊查询</li></ul><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">GET bank/_search</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;query&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;match&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;address&quot;</span><span class="punctuation">:</span> <span class="string">&quot;kings&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>全文检索，最终会按照评分进行排序，会对检索条件进行分词匹配。</p><p>查询结果：</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;took&quot;</span> <span class="punctuation">:</span> <span class="number">30</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;timed_out&quot;</span> <span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;_shards&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;successful&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;skipped&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;failed&quot;</span> <span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;hits&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;relation&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;eq&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;max_score&quot;</span> <span class="punctuation">:</span> <span class="number">5.990829</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hits&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;bank&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;account&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;20&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> <span class="punctuation">:</span> <span class="number">5.990829</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;account_number&quot;</span> <span class="punctuation">:</span> <span class="number">20</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;balance&quot;</span> <span class="punctuation">:</span> <span class="number">16418</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;firstname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Elinor&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;lastname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Ratliff&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;age&quot;</span> <span class="punctuation">:</span> <span class="number">36</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;gender&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;M&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;address&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;282 Kings Place&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;employer&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Scentric&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;email&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;elinorratliff@scentric.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;city&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Ribera&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;state&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;WA&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;bank&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;account&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;722&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> <span class="punctuation">:</span> <span class="number">5.990829</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;account_number&quot;</span> <span class="punctuation">:</span> <span class="number">722</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;balance&quot;</span> <span class="punctuation">:</span> <span class="number">27256</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;firstname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Roberts&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;lastname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Beasley&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;age&quot;</span> <span class="punctuation">:</span> <span class="number">34</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;gender&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;F&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;address&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;305 Kings Hwy&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;employer&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Quintity&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;email&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;robertsbeasley@quintity.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;city&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Hayden&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;state&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;PA&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="（4）-match-phrase-短句匹配"><a href="#（4）-match-phrase-短句匹配" class="headerlink" title="（4） match_phrase [短句匹配]"></a>（4） match_phrase [短句匹配]</h5><p>将需要匹配的值当成一整个单词（不分词）进行检索</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">GET bank/_search</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;query&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;match_phrase&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;address&quot;</span><span class="punctuation">:</span> <span class="string">&quot;mill road&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>查处address中包含mill_road的所有记录，并给出相关性得分</p><p>查看结果：</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;took&quot;</span> <span class="punctuation">:</span> <span class="number">32</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;timed_out&quot;</span> <span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;_shards&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;successful&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;skipped&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;failed&quot;</span> <span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;hits&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;relation&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;eq&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;max_score&quot;</span> <span class="punctuation">:</span> <span class="number">8.926605</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hits&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;bank&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;account&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;970&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> <span class="punctuation">:</span> <span class="number">8.926605</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;account_number&quot;</span> <span class="punctuation">:</span> <span class="number">970</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;balance&quot;</span> <span class="punctuation">:</span> <span class="number">19648</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;firstname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Forbes&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;lastname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Wallace&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;age&quot;</span> <span class="punctuation">:</span> <span class="number">28</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;gender&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;M&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;address&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;990 Mill Road&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;employer&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Pheast&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;email&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;forbeswallace@pheast.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;city&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Lopezo&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;state&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;AK&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>match_phrase和match的区别，观察如下实例：</p><p>match_phrase是做短语匹配</p><p>match是分词匹配，例如990 Mill匹配含有<strong>990或者Mill</strong>的结果</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">GET bank/_search</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;query&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;match_phrase&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;address&quot;</span><span class="punctuation">:</span> <span class="string">&quot;990 Mill&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>查询结果：</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;took&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;timed_out&quot;</span> <span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;_shards&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;successful&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;skipped&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;failed&quot;</span> <span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;hits&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;relation&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;eq&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;max_score&quot;</span> <span class="punctuation">:</span> <span class="number">10.806405</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hits&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;bank&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;account&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;970&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> <span class="punctuation">:</span> <span class="number">10.806405</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;account_number&quot;</span> <span class="punctuation">:</span> <span class="number">970</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;balance&quot;</span> <span class="punctuation">:</span> <span class="number">19648</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;firstname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Forbes&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;lastname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Wallace&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;age&quot;</span> <span class="punctuation">:</span> <span class="number">28</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;gender&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;M&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;address&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;990 Mill Road&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;employer&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Pheast&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;email&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;forbeswallace@pheast.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;city&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Lopezo&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;state&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;AK&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>使用match的keyword</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">GET bank/_search</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;query&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;match&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;address.keyword&quot;</span><span class="punctuation">:</span> <span class="string">&quot;990 Mill&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>查询结果，一条也未匹配到</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;took&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;timed_out&quot;</span> <span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;_shards&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;successful&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;skipped&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;failed&quot;</span> <span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;hits&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;relation&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;eq&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;max_score&quot;</span> <span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hits&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span> <span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>修改匹配条件为“990 Mill Road”</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">GET bank/_search</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;query&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;match&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;address.keyword&quot;</span><span class="punctuation">:</span> <span class="string">&quot;990 Mill Road&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>查询出一条数据</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;took&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;timed_out&quot;</span> <span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;_shards&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;successful&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;skipped&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;failed&quot;</span> <span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;hits&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;relation&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;eq&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;max_score&quot;</span> <span class="punctuation">:</span> <span class="number">6.5032897</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hits&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;bank&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;account&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;970&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> <span class="punctuation">:</span> <span class="number">6.5032897</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;account_number&quot;</span> <span class="punctuation">:</span> <span class="number">970</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;balance&quot;</span> <span class="punctuation">:</span> <span class="number">19648</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;firstname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Forbes&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;lastname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Wallace&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;age&quot;</span> <span class="punctuation">:</span> <span class="number">28</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;gender&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;M&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;address&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;990 Mill Road&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;employer&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Pheast&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;email&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;forbeswallace@pheast.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;city&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Lopezo&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;state&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;AK&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>文本字段的匹配，使用keyword，匹配的条件就是要显示字段的全部值，要进行精确匹配的。</p><p>match_phrase是做短语匹配，只要文本中包含匹配条件既包含这个短语，就能匹配到。</p><h5 id="（5）multi-math【多字段匹配】会分词"><a href="#（5）multi-math【多字段匹配】会分词" class="headerlink" title="（5）multi_math【多字段匹配】会分词"></a>（5）multi_math【多字段匹配】会分词</h5><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">GET bank/_search</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;query&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;multi_match&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;query&quot;</span><span class="punctuation">:</span> <span class="string">&quot;mill&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;fields&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="string">&quot;state&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;address&quot;</span></span><br><span class="line">      <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>state或者address中包含mill，<strong>并且在查询过程中，会对于查询条件进行分词</strong>。</p><p>查询结果：</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;took&quot;</span> <span class="punctuation">:</span> <span class="number">28</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;timed_out&quot;</span> <span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;_shards&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;successful&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;skipped&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;failed&quot;</span> <span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;hits&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">4</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;relation&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;eq&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;max_score&quot;</span> <span class="punctuation">:</span> <span class="number">5.4032025</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hits&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;bank&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;account&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;970&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> <span class="punctuation">:</span> <span class="number">5.4032025</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;account_number&quot;</span> <span class="punctuation">:</span> <span class="number">970</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;balance&quot;</span> <span class="punctuation">:</span> <span class="number">19648</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;firstname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Forbes&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;lastname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Wallace&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;age&quot;</span> <span class="punctuation">:</span> <span class="number">28</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;gender&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;M&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;address&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;990 Mill Road&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;employer&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Pheast&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;email&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;forbeswallace@pheast.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;city&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Lopezo&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;state&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;AK&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;bank&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;account&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;136&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> <span class="punctuation">:</span> <span class="number">5.4032025</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;account_number&quot;</span> <span class="punctuation">:</span> <span class="number">136</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;balance&quot;</span> <span class="punctuation">:</span> <span class="number">45801</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;firstname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Winnie&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;lastname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Holland&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;age&quot;</span> <span class="punctuation">:</span> <span class="number">38</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;gender&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;M&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;address&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;198 Mill Lane&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;employer&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Neteria&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;email&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;winnieholland@neteria.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;city&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Urie&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;state&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;IL&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;bank&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;account&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;345&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> <span class="punctuation">:</span> <span class="number">5.4032025</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;account_number&quot;</span> <span class="punctuation">:</span> <span class="number">345</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;balance&quot;</span> <span class="punctuation">:</span> <span class="number">9812</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;firstname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Parker&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;lastname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Hines&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;age&quot;</span> <span class="punctuation">:</span> <span class="number">38</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;gender&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;M&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;address&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;715 Mill Avenue&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;employer&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Baluba&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;email&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;parkerhines@baluba.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;city&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Blackgum&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;state&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;KY&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;bank&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;account&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;472&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> <span class="punctuation">:</span> <span class="number">5.4032025</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;account_number&quot;</span> <span class="punctuation">:</span> <span class="number">472</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;balance&quot;</span> <span class="punctuation">:</span> <span class="number">25571</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;firstname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Lee&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;lastname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Long&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;age&quot;</span> <span class="punctuation">:</span> <span class="number">32</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;gender&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;F&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;address&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;288 Mill Street&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;employer&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Comverges&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;email&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;leelong@comverges.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;city&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Movico&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;state&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;MT&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="（6）bool用来做复合查询"><a href="#（6）bool用来做复合查询" class="headerlink" title="（6）bool用来做复合查询"></a>（6）bool用来做复合查询</h5><p>复合语句可以合并，任何其他查询语句，包括符合语句。这也就意味着，复合语句之间<br>可以互相嵌套，可以表达非常复杂的逻辑。</p><p>must：必须达到must所列举的所有条件</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">GET bank/_search</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">   <span class="attr">&quot;query&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;bool&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">             <span class="attr">&quot;must&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span></span><br><span class="line">              <span class="punctuation">&#123;</span><span class="attr">&quot;match&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;address&quot;</span><span class="punctuation">:</span><span class="string">&quot;mill&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="punctuation">&#123;</span><span class="attr">&quot;match&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;gender&quot;</span><span class="punctuation">:</span><span class="string">&quot;M&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span></span><br><span class="line">             <span class="punctuation">]</span></span><br><span class="line">         <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>must_not，必须不匹配must_not所列举的所有条件。</p><p>should，应该满足should所列举的条件。</p><p>实例：查询gender&#x3D;m，并且address&#x3D;mill的数据</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">GET bank/_search</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;query&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;bool&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;must&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;match&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;gender&quot;</span><span class="punctuation">:</span> <span class="string">&quot;M&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;match&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;address&quot;</span><span class="punctuation">:</span> <span class="string">&quot;mill&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>查询结果：</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;took&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;timed_out&quot;</span> <span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;_shards&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;successful&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;skipped&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;failed&quot;</span> <span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;hits&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">3</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;relation&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;eq&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;max_score&quot;</span> <span class="punctuation">:</span> <span class="number">6.0824604</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hits&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;bank&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;account&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;970&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> <span class="punctuation">:</span> <span class="number">6.0824604</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;account_number&quot;</span> <span class="punctuation">:</span> <span class="number">970</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;balance&quot;</span> <span class="punctuation">:</span> <span class="number">19648</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;firstname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Forbes&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;lastname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Wallace&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;age&quot;</span> <span class="punctuation">:</span> <span class="number">28</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;gender&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;M&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;address&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;990 Mill Road&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;employer&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Pheast&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;email&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;forbeswallace@pheast.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;city&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Lopezo&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;state&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;AK&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;bank&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;account&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;136&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> <span class="punctuation">:</span> <span class="number">6.0824604</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;account_number&quot;</span> <span class="punctuation">:</span> <span class="number">136</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;balance&quot;</span> <span class="punctuation">:</span> <span class="number">45801</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;firstname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Winnie&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;lastname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Holland&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;age&quot;</span> <span class="punctuation">:</span> <span class="number">38</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;gender&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;M&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;address&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;198 Mill Lane&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;employer&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Neteria&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;email&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;winnieholland@neteria.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;city&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Urie&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;state&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;IL&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;bank&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;account&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;345&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> <span class="punctuation">:</span> <span class="number">6.0824604</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;account_number&quot;</span> <span class="punctuation">:</span> <span class="number">345</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;balance&quot;</span> <span class="punctuation">:</span> <span class="number">9812</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;firstname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Parker&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;lastname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Hines&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;age&quot;</span> <span class="punctuation">:</span> <span class="number">38</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;gender&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;M&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;address&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;715 Mill Avenue&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;employer&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Baluba&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;email&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;parkerhines@baluba.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;city&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Blackgum&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;state&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;KY&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>must_not：必须不是指定的情况</strong></p><p>实例：查询gender&#x3D;m，并且address&#x3D;mill的数据，但是age不等于38的</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">GET bank/_search</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;query&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;bool&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;must&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;match&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;gender&quot;</span><span class="punctuation">:</span> <span class="string">&quot;M&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;match&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;address&quot;</span><span class="punctuation">:</span> <span class="string">&quot;mill&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;must_not&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;match&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;age&quot;</span><span class="punctuation">:</span> <span class="string">&quot;38&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>查询结果：</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;took&quot;</span> <span class="punctuation">:</span> <span class="number">4</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;timed_out&quot;</span> <span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;_shards&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;successful&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;skipped&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;failed&quot;</span> <span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;hits&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;relation&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;eq&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;max_score&quot;</span> <span class="punctuation">:</span> <span class="number">6.0824604</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hits&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;bank&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;account&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;970&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> <span class="punctuation">:</span> <span class="number">6.0824604</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;account_number&quot;</span> <span class="punctuation">:</span> <span class="number">970</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;balance&quot;</span> <span class="punctuation">:</span> <span class="number">19648</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;firstname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Forbes&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;lastname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Wallace&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;age&quot;</span> <span class="punctuation">:</span> <span class="number">28</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;gender&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;M&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;address&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;990 Mill Road&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;employer&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Pheast&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;email&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;forbeswallace@pheast.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;city&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Lopezo&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;state&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;AK&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>should：应该达到should列举的条件，如果到达会增加相关文档的评分，并不会改变查询的结果。如果query中只有should且只有一种匹配规则，那么should的条件就会被作为默认匹配条件二区改变查询结果。</strong></p><p>实例：匹配lastName应该等于Wallace的数据</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">GET bank/_search</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;query&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;bool&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;must&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;match&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;gender&quot;</span><span class="punctuation">:</span> <span class="string">&quot;M&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;match&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;address&quot;</span><span class="punctuation">:</span> <span class="string">&quot;mill&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;must_not&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;match&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;age&quot;</span><span class="punctuation">:</span> <span class="string">&quot;18&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;should&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;match&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;lastname&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Wallace&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>查询结果：</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;took&quot;</span> <span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;timed_out&quot;</span> <span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;_shards&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;successful&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;skipped&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;failed&quot;</span> <span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;hits&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">3</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;relation&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;eq&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;max_score&quot;</span> <span class="punctuation">:</span> <span class="number">12.585751</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hits&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;bank&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;account&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;970&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> <span class="punctuation">:</span> <span class="number">12.585751</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;account_number&quot;</span> <span class="punctuation">:</span> <span class="number">970</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;balance&quot;</span> <span class="punctuation">:</span> <span class="number">19648</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;firstname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Forbes&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;lastname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Wallace&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;age&quot;</span> <span class="punctuation">:</span> <span class="number">28</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;gender&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;M&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;address&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;990 Mill Road&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;employer&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Pheast&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;email&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;forbeswallace@pheast.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;city&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Lopezo&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;state&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;AK&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;bank&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;account&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;136&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> <span class="punctuation">:</span> <span class="number">6.0824604</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;account_number&quot;</span> <span class="punctuation">:</span> <span class="number">136</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;balance&quot;</span> <span class="punctuation">:</span> <span class="number">45801</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;firstname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Winnie&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;lastname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Holland&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;age&quot;</span> <span class="punctuation">:</span> <span class="number">38</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;gender&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;M&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;address&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;198 Mill Lane&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;employer&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Neteria&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;email&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;winnieholland@neteria.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;city&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Urie&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;state&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;IL&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;bank&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;account&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;345&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> <span class="punctuation">:</span> <span class="number">6.0824604</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;account_number&quot;</span> <span class="punctuation">:</span> <span class="number">345</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;balance&quot;</span> <span class="punctuation">:</span> <span class="number">9812</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;firstname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Parker&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;lastname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Hines&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;age&quot;</span> <span class="punctuation">:</span> <span class="number">38</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;gender&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;M&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;address&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;715 Mill Avenue&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;employer&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Baluba&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;email&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;parkerhines@baluba.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;city&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Blackgum&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;state&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;KY&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>能够看到相关度越高，得分也越高。</p><h5 id="（7）Filter【结果过滤】"><a href="#（7）Filter【结果过滤】" class="headerlink" title="（7）Filter【结果过滤】"></a>（7）Filter【结果过滤】</h5><p>并不是所有的查询都需要产生分数，特别是哪些仅用于filtering过滤的文档。为了不计算分数，elasticsearch会自动检查场景并且优化查询的执行。</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">GET bank/_search</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;query&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;bool&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;must&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;match&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;address&quot;</span><span class="punctuation">:</span> <span class="string">&quot;mill&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;filter&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;range&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;balance&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;gte&quot;</span><span class="punctuation">:</span> <span class="string">&quot;10000&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;lte&quot;</span><span class="punctuation">:</span> <span class="string">&quot;20000&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这里先是查询所有匹配address&#x3D;mill的文档，然后再根据10000&lt;&#x3D;balance&lt;&#x3D;20000进行过滤查询结果</p><p>查询结果：</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;took&quot;</span> <span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;timed_out&quot;</span> <span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;_shards&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;successful&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;skipped&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;failed&quot;</span> <span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;hits&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;relation&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;eq&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;max_score&quot;</span> <span class="punctuation">:</span> <span class="number">5.4032025</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hits&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;bank&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;account&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;970&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> <span class="punctuation">:</span> <span class="number">5.4032025</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;account_number&quot;</span> <span class="punctuation">:</span> <span class="number">970</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;balance&quot;</span> <span class="punctuation">:</span> <span class="number">19648</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;firstname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Forbes&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;lastname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Wallace&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;age&quot;</span> <span class="punctuation">:</span> <span class="number">28</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;gender&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;M&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;address&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;990 Mill Road&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;employer&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Pheast&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;email&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;forbeswallace@pheast.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;city&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Lopezo&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;state&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;AK&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Each <code>must</code>, <code>should</code>, and <code>must_not</code> element in a Boolean query is referred to as a query clause. How well a document meets the criteria in each <code>must</code> or <code>should</code> clause contributes to the document’s <em>relevance score</em>. The higher the score, the better the document matches your search criteria. By default, Elasticsearch returns documents ranked by these relevance scores.</p><p> 在boolean查询中，<code>must</code>, <code>should</code> 和<code>must_not</code> 元素都被称为查询子句 。 文档是否符合每个“must”或“should”子句中的标准，决定了文档的“相关性得分”。  得分越高，文档越符合您的搜索条件。  默认情况下，Elasticsearch返回根据这些相关性得分排序的文档。 </p><p>The criteria in a <code>must_not</code> clause is treated as a <em>filter</em>. It affects whether or not the document is included in the results, but does not contribute to how documents are scored. You can also explicitly specify arbitrary filters to include or exclude documents based on structured data.</p><p><code>“must_not”子句中的条件被视为“过滤器”。</code> 它影响文档是否包含在结果中，  但<strong>不影响文档的评分方式</strong>。  还可以显式地指定任意过滤器来包含或排除基于结构化数据的文档。 </p><p><strong>filter在使用过程中，并不会计算相关性得分_score：</strong></p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">GET bank/_search</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;query&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;bool&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;must&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;match&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;address&quot;</span><span class="punctuation">:</span> <span class="string">&quot;mill&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;filter&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;range&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;balance&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;gte&quot;</span><span class="punctuation">:</span> <span class="string">&quot;10000&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;lte&quot;</span><span class="punctuation">:</span> <span class="string">&quot;20000&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"><span class="comment">//gte:&gt;=  lte:&lt;=</span></span><br></pre></td></tr></table></figure><p>查询结果：</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;took&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;timed_out&quot;</span> <span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;_shards&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;successful&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;skipped&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;failed&quot;</span> <span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;hits&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">213</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;relation&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;eq&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;max_score&quot;</span> <span class="punctuation">:</span> <span class="number">0.0</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hits&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;bank&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;account&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;20&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> <span class="punctuation">:</span> <span class="number">0.0</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;account_number&quot;</span> <span class="punctuation">:</span> <span class="number">20</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;balance&quot;</span> <span class="punctuation">:</span> <span class="number">16418</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;firstname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Elinor&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;lastname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Ratliff&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;age&quot;</span> <span class="punctuation">:</span> <span class="number">36</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;gender&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;M&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;address&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;282 Kings Place&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;employer&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Scentric&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;email&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;elinorratliff@scentric.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;city&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Ribera&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;state&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;WA&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;bank&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;account&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;37&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> <span class="punctuation">:</span> <span class="number">0.0</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;account_number&quot;</span> <span class="punctuation">:</span> <span class="number">37</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;balance&quot;</span> <span class="punctuation">:</span> <span class="number">18612</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;firstname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Mcgee&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;lastname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Mooney&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;age&quot;</span> <span class="punctuation">:</span> <span class="number">39</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;gender&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;M&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;address&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;826 Fillmore Place&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;employer&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Reversus&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;email&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;mcgeemooney@reversus.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;city&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Tooleville&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;state&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;OK&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;bank&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;account&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;51&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> <span class="punctuation">:</span> <span class="number">0.0</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;account_number&quot;</span> <span class="punctuation">:</span> <span class="number">51</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;balance&quot;</span> <span class="punctuation">:</span> <span class="number">14097</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;firstname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Burton&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;lastname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Meyers&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;age&quot;</span> <span class="punctuation">:</span> <span class="number">31</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;gender&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;F&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;address&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;334 River Street&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;employer&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Bezal&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;email&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;burtonmeyers@bezal.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;city&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Jacksonburg&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;state&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;MO&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;bank&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;account&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;56&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> <span class="punctuation">:</span> <span class="number">0.0</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;account_number&quot;</span> <span class="punctuation">:</span> <span class="number">56</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;balance&quot;</span> <span class="punctuation">:</span> <span class="number">14992</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;firstname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Josie&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;lastname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Nelson&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;age&quot;</span> <span class="punctuation">:</span> <span class="number">32</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;gender&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;M&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;address&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;857 Tabor Court&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;employer&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Emtrac&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;email&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;josienelson@emtrac.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;city&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Sunnyside&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;state&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;UT&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;bank&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;account&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;121&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> <span class="punctuation">:</span> <span class="number">0.0</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;account_number&quot;</span> <span class="punctuation">:</span> <span class="number">121</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;balance&quot;</span> <span class="punctuation">:</span> <span class="number">19594</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;firstname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Acevedo&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;lastname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Dorsey&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;age&quot;</span> <span class="punctuation">:</span> <span class="number">32</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;gender&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;M&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;address&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;479 Nova Court&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;employer&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Netropic&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;email&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;acevedodorsey@netropic.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;city&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Islandia&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;state&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;CT&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;bank&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;account&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;176&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> <span class="punctuation">:</span> <span class="number">0.0</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;account_number&quot;</span> <span class="punctuation">:</span> <span class="number">176</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;balance&quot;</span> <span class="punctuation">:</span> <span class="number">18607</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;firstname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Kemp&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;lastname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Walters&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;age&quot;</span> <span class="punctuation">:</span> <span class="number">28</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;gender&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;F&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;address&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;906 Howard Avenue&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;employer&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Eyewax&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;email&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;kempwalters@eyewax.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;city&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Why&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;state&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;KY&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;bank&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;account&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;183&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> <span class="punctuation">:</span> <span class="number">0.0</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;account_number&quot;</span> <span class="punctuation">:</span> <span class="number">183</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;balance&quot;</span> <span class="punctuation">:</span> <span class="number">14223</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;firstname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Hudson&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;lastname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;English&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;age&quot;</span> <span class="punctuation">:</span> <span class="number">26</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;gender&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;F&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;address&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;823 Herkimer Place&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;employer&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Xinware&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;email&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;hudsonenglish@xinware.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;city&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Robbins&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;state&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;ND&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;bank&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;account&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;222&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> <span class="punctuation">:</span> <span class="number">0.0</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;account_number&quot;</span> <span class="punctuation">:</span> <span class="number">222</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;balance&quot;</span> <span class="punctuation">:</span> <span class="number">14764</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;firstname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Rachelle&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;lastname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Rice&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;age&quot;</span> <span class="punctuation">:</span> <span class="number">36</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;gender&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;M&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;address&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;333 Narrows Avenue&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;employer&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Enaut&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;email&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;rachellerice@enaut.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;city&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Wright&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;state&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;AZ&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;bank&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;account&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;227&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> <span class="punctuation">:</span> <span class="number">0.0</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;account_number&quot;</span> <span class="punctuation">:</span> <span class="number">227</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;balance&quot;</span> <span class="punctuation">:</span> <span class="number">19780</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;firstname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Coleman&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;lastname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Berg&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;age&quot;</span> <span class="punctuation">:</span> <span class="number">22</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;gender&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;M&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;address&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;776 Little Street&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;employer&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Exoteric&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;email&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;colemanberg@exoteric.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;city&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Eagleville&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;state&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;WV&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;bank&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;account&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;272&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> <span class="punctuation">:</span> <span class="number">0.0</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;account_number&quot;</span> <span class="punctuation">:</span> <span class="number">272</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;balance&quot;</span> <span class="punctuation">:</span> <span class="number">19253</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;firstname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Lilly&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;lastname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Morgan&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;age&quot;</span> <span class="punctuation">:</span> <span class="number">25</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;gender&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;F&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;address&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;689 Fleet Street&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;employer&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Biolive&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;email&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;lillymorgan@biolive.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;city&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Sunbury&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;state&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;OH&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>能看到所有文档的 “_score” : 0.0。</strong></p><h5 id="（8）term"><a href="#（8）term" class="headerlink" title="（8）term"></a>（8）term</h5><p>和match一样。匹配某个属性的值。全文检索字段用match，其他<strong>非text字段</strong>匹配用term。</p><blockquote><p>Avoid using the <code>term</code> query for <a href="https://www.elastic.co/guide/en/elasticsearch/reference/7.6/text.html"><code>text</code></a> fields.</p><p>避免对文本字段使用“term”查询</p><p>By default, Elasticsearch changes the values of <code>text</code> fields as part of <a href>analysis</a>. This can make finding exact matches for <code>text</code> field values difficult.</p><p>默认情况下，Elasticsearch作为<a href>analysis</a>的一部分更改’ text ‘字段的值。这使得为“text”字段值寻找精确匹配变得困难。 </p><p>To search <code>text</code> field values, use the match.</p><p>要搜索“text”字段值，请使用匹配。</p><p><a href="https://www.elastic.co/guide/en/elasticsearch/reference/7.6/query-dsl-term-query.html">https://www.elastic.co/guide/en/elasticsearch/reference/7.6/query-dsl-term-query.html</a> </p></blockquote><p>使用term匹配查询</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">GET bank/_search</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;query&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;term&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;age&quot;</span><span class="punctuation">:</span> <span class="string">&quot;28&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>如果是text则查不到：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GET bank/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;term&quot;: &#123;</span><br><span class="line">      &quot;gender&quot; : &quot;F&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;took&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;timed_out&quot;</span> <span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;_shards&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;successful&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;skipped&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;failed&quot;</span> <span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;hits&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;relation&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;eq&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;max_score&quot;</span> <span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hits&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span> <span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>一条也没有匹配到</p><p>而更换为match匹配时，能够匹配到32个文档</p><p><img src="image-20200502120921830.png" alt="image-20200502120921830"></p><p>也就是说，<strong>全文检索字段用match，其他非text字段匹配用term</strong>。</p><h5 id="（9）Aggregation（执行聚合）"><a href="#（9）Aggregation（执行聚合）" class="headerlink" title="（9）Aggregation（执行聚合）"></a>（9）Aggregation（执行聚合）</h5><p>聚合提供了从数据中分组和提取数据的能力。最简单的聚合方法大致等于SQL Group by和SQL聚合函数。在elasticsearch中，执行搜索返回this（命中结果），并且同时返回聚合结果，把以响应中的所有hits（命中结果）分隔开的能力。这是非常强大且有效的，你可以执行查询和多个聚合，并且在一次使用中得到各自的（任何一个的）返回结果，使用一次简洁和简化的API啦避免网络往返。</p><p>“size”:0</p><p>size:0不显示搜索数据<br>aggs：执行聚合。聚合语法如下：</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="attr">&quot;aggs&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;aggs_name这次聚合的名字，方便展示在结果集中&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;AGG_TYPE聚合的类型(avg,term,terms)&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line">     <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span>，</span><br></pre></td></tr></table></figure><p><strong>搜索address中包含mill的所有人的年龄分布以及平均年龄，但不显示这些人的详情</strong></p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">GET bank/_search</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;query&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;match&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;address&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Mill&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;aggs&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;ageAgg&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;terms&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;field&quot;</span><span class="punctuation">:</span> <span class="string">&quot;age&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;size&quot;</span><span class="punctuation">:</span> <span class="number">10</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;ageAvg&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;avg&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;field&quot;</span><span class="punctuation">:</span> <span class="string">&quot;age&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;balanceAvg&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;avg&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;field&quot;</span><span class="punctuation">:</span> <span class="string">&quot;balance&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;size&quot;</span><span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"><span class="comment">//ageAgg:聚合名字  terms：聚合类型  &quot;field&quot;: &quot;age&quot;:按照age字段聚合  size:10：取出前十种age</span></span><br><span class="line"><span class="comment">//avg：平均值聚合类型</span></span><br><span class="line"><span class="comment">//不显示这些人的详情，只看聚合结果</span></span><br></pre></td></tr></table></figure><p>查询结果：</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;took&quot;</span> <span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;timed_out&quot;</span> <span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;_shards&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;successful&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;skipped&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;failed&quot;</span> <span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;hits&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">4</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;relation&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;eq&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;max_score&quot;</span> <span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hits&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span> <span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;aggregations&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;ageAgg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;doc_count_error_upper_bound&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;sum_other_doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;buckets&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="number">38</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">2</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="number">28</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">1</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="number">32</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">1</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;ageAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">34.0</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;balanceAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">25208.0</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>复杂：<br>按照年龄聚合，并且求这些年龄段的这些人的平均薪资</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">GET bank/_search</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;query&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;match_all&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;aggs&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;ageAgg&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;terms&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;field&quot;</span><span class="punctuation">:</span> <span class="string">&quot;age&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;size&quot;</span><span class="punctuation">:</span> <span class="number">100</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;aggs&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;ageAvg&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;avg&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;field&quot;</span><span class="punctuation">:</span> <span class="string">&quot;balance&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;size&quot;</span><span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;took&quot;</span> <span class="punctuation">:</span> <span class="number">49</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;timed_out&quot;</span> <span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;_shards&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;successful&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;skipped&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;failed&quot;</span> <span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;hits&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">1000</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;relation&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;eq&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;max_score&quot;</span> <span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hits&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span> <span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;aggregations&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;ageAgg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;doc_count_error_upper_bound&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;sum_other_doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;buckets&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="number">31</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">61</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;ageAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">28312.918032786885</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="number">39</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">60</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;ageAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">25269.583333333332</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="number">26</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">59</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;ageAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">23194.813559322032</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="number">32</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">52</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;ageAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">23951.346153846152</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="number">35</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">52</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;ageAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">22136.69230769231</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="number">36</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">52</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;ageAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">22174.71153846154</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="number">22</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">51</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;ageAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">24731.07843137255</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="number">28</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">51</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;ageAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">28273.882352941175</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="number">33</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">50</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;ageAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">25093.94</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="number">34</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">49</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;ageAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">26809.95918367347</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="number">30</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">47</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;ageAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">22841.106382978724</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="number">21</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">46</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;ageAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">26981.434782608696</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="number">40</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">45</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;ageAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">27183.17777777778</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="number">20</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">44</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;ageAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">27741.227272727272</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="number">23</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">42</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;ageAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">27314.214285714286</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="number">24</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">42</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;ageAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">28519.04761904762</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="number">25</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">42</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;ageAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">27445.214285714286</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="number">37</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">42</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;ageAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">27022.261904761905</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="number">27</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">39</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;ageAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">21471.871794871793</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="number">38</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">39</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;ageAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">26187.17948717949</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="number">29</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">35</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;ageAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">29483.14285714286</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>查出所有年龄分布，并且这些年龄段中M的平均薪资和F的平均薪资以及这个年龄段的总体平均薪资</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">GET bank/_search</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;query&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;match_all&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;aggs&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;ageAgg&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;terms&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;field&quot;</span><span class="punctuation">:</span> <span class="string">&quot;age&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;size&quot;</span><span class="punctuation">:</span> <span class="number">100</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;aggs&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;genderAgg&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;terms&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;field&quot;</span><span class="punctuation">:</span> <span class="string">&quot;gender.keyword&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;aggs&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;balanceAvg&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;avg&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;field&quot;</span><span class="punctuation">:</span> <span class="string">&quot;balance&quot;</span></span><br><span class="line">              <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;ageBalanceAvg&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;avg&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;field&quot;</span><span class="punctuation">:</span> <span class="string">&quot;balance&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;size&quot;</span><span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"><span class="comment">//&quot;field&quot;: &quot;gender.keyword&quot; gender是txt没法聚合 必须加.keyword精确替代</span></span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;took&quot;</span> <span class="punctuation">:</span> <span class="number">119</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;timed_out&quot;</span> <span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;_shards&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;successful&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;skipped&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;failed&quot;</span> <span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;hits&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">1000</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;relation&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;eq&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;max_score&quot;</span> <span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hits&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span> <span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;aggregations&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;ageAgg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;doc_count_error_upper_bound&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;sum_other_doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;buckets&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="number">31</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">61</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;genderAgg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;doc_count_error_upper_bound&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;sum_other_doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;buckets&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;M&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">35</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;balanceAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                  <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">29565.628571428573</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">              <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;F&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">26</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;balanceAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                  <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">26626.576923076922</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">              <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;ageBalanceAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">28312.918032786885</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">]</span></span><br><span class="line">        .......<span class="comment">//省略其他</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="3）Mapping"><a href="#3）Mapping" class="headerlink" title="3）Mapping"></a>3）Mapping</h4><h5 id="（1）字段类型"><a href="#（1）字段类型" class="headerlink" title="（1）字段类型"></a>（1）字段类型</h5><p><img src="image-20200502161339291.png" alt="image-20200502161339291"></p><h5 id="（2）映射"><a href="#（2）映射" class="headerlink" title="（2）映射"></a>（2）映射</h5><p>Mapping(映射)<br>Maping是用来定义一个文档（document），以及它所包含的属性（field）是如何存储和索引的。比如：使用maping来定义：</p><ul><li><p>哪些字符串属性应该被看做全文本属性（full text fields）；</p></li><li><p>哪些属性包含数字，日期或地理位置；</p></li><li><p>文档中的所有属性是否都嫩被索引（all 配置）；</p></li><li><p>日期的格式；</p></li><li><p>自定义映射规则来执行动态添加属性；</p></li><li><p>查看mapping信息<br>GET bank&#x2F;_mapping</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;bank&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;mappings&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;properties&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;account_number&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;long&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;address&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;text&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;fields&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;keyword&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;keyword&quot;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;ignore_above&quot;</span> <span class="punctuation">:</span> <span class="number">256</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;age&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;long&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;balance&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;long&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;city&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;text&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;fields&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;keyword&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;keyword&quot;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;ignore_above&quot;</span> <span class="punctuation">:</span> <span class="number">256</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;email&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;text&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;fields&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;keyword&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;keyword&quot;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;ignore_above&quot;</span> <span class="punctuation">:</span> <span class="number">256</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;employer&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;text&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;fields&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;keyword&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;keyword&quot;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;ignore_above&quot;</span> <span class="punctuation">:</span> <span class="number">256</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;firstname&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;text&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;fields&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;keyword&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;keyword&quot;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;ignore_above&quot;</span> <span class="punctuation">:</span> <span class="number">256</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;gender&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;text&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;fields&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;keyword&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;keyword&quot;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;ignore_above&quot;</span> <span class="punctuation">:</span> <span class="number">256</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;lastname&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;text&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;fields&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;keyword&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;keyword&quot;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;ignore_above&quot;</span> <span class="punctuation">:</span> <span class="number">256</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;state&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;text&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;fields&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;keyword&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;keyword&quot;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;ignore_above&quot;</span> <span class="punctuation">:</span> <span class="number">256</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></li><li><p>修改mapping信息</p></li></ul><p><img src="image-20200502170924399.png" alt="image-20200502170924399"></p><h5 id="（3）新版本改变"><a href="#（3）新版本改变" class="headerlink" title="（3）新版本改变"></a>（3）新版本改变</h5><p>ElasticSearch7-去掉type概念</p><ol><li><p>关系型数据库中两个数据表示是独立的，即使他们里面有相同名称的列也不影响使用，但ES中不是这样的。elasticsearch是基于Lucene开发的搜索引擎，而ES中不同type下名称相同的filed最终在Lucene中的处理方式是一样的。</p><ul><li>两个不同type下的两个user_name，在ES同一个索引下其实被认为是同一个filed，你必须在两个不同的type中定义相同的filed映射。否则，不同type中的相同字段名称就会在处理中出现冲突的情况，导致Lucene处理效率下降。</li><li>去掉type就是为了提高ES处理数据的效率。</li></ul></li><li><p>Elasticsearch 7.x URL中的type参数为可选。比如，索引一个文档不再要求提供文档类型。</p></li><li><p>Elasticsearch 8.x 不再支持URL中的type参数。</p></li><li><p>解决：<br>将索引从多类型迁移到单类型，每种类型文档一个独立索引</p><p>将已存在的索引下的类型数据，全部迁移到指定位置即可。详见数据迁移</p></li></ol><blockquote><p><strong>Elasticsearch 7.x</strong></p><ul><li>Specifying types in requests is deprecated. For instance, indexing a document no longer requires a document <code>type</code>. The new index APIs are <code>PUT &#123;index&#125;/_doc/&#123;id&#125;</code> in case of explicit ids and <code>POST &#123;index&#125;/_doc</code> for auto-generated ids. Note that in 7.0, <code>_doc</code> is a permanent part of the path, and represents the endpoint name rather than the document type.</li><li>The <code>include_type_name</code> parameter in the index creation, index template, and mapping APIs will default to <code>false</code>. Setting the parameter at all will result in a deprecation warning.</li><li>The <code>_default_</code> mapping type is removed.</li></ul><p><strong>Elasticsearch 8.x</strong></p><ul><li>Specifying types in requests is no longer supported.</li><li>The <code>include_type_name</code> parameter is removed.</li></ul></blockquote><h6 id="创建映射"><a href="#创建映射" class="headerlink" title="创建映射"></a>创建映射</h6><p>创建索引并指定属性的映射规则（<strong>相当于新建表并制定字段和字段类型</strong>）</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">PUT /my_index</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;mappings&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;properties&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;age&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;integer&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;email&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;keyword&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;text&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p> 输出：</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;acknowledged&quot;</span> <span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;shards_acknowledged&quot;</span> <span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;my_index&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h6 id="查看映射"><a href="#查看映射" class="headerlink" title="查看映射"></a>查看映射</h6><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">GET /my_index</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="comment">//&quot;index&quot; : false 是否被索引即能被检索到，默认是true</span></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;my_index&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;aliases&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;mappings&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;properties&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;age&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;integer&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;email&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;keyword&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;employee-id&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;keyword&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;index&quot;</span> <span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;text&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;settings&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;index&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;creation_date&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;1588410780774&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;number_of_shards&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;number_of_replicas&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;uuid&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;ua0lXhtkQCOmn7Kh3iUu0w&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;version&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;created&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;7060299&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;provided_name&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;my_index&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h6 id="添加新的字段映射"><a href="#添加新的字段映射" class="headerlink" title="添加新的字段映射"></a>添加新的字段映射</h6><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">PUT /my_index/_mapping</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;properties&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;employee-id&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;keyword&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;index&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>这里的 “index”: false，表明新增的字段不能被检索，只是一个冗余字段。</p><h6 id="更新映射"><a href="#更新映射" class="headerlink" title="更新映射"></a>更新映射</h6><p>对于已经存在的字段映射，我们不能更新。更新必须创建新的索引，进行数据迁移。</p><h6 id="数据迁移"><a href="#数据迁移" class="headerlink" title="数据迁移"></a>数据迁移</h6><p>先创建new_twitter的正确映射。然后使用如下方式进行数据迁移。</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">POST reindex <span class="punctuation">[</span>固定写法<span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;source&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;index&quot;</span><span class="punctuation">:</span><span class="string">&quot;twitter&quot;</span></span><br><span class="line">   <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;dest&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;index&quot;</span><span class="punctuation">:</span><span class="string">&quot;new_twitters&quot;</span></span><br><span class="line">   <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>将旧索引的type下的数据进行迁移</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">POST reindex <span class="punctuation">[</span>固定写法<span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;source&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;index&quot;</span><span class="punctuation">:</span><span class="string">&quot;twitter&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;twitter&quot;</span><span class="punctuation">:</span><span class="string">&quot;twitter&quot;</span></span><br><span class="line">   <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;dest&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;index&quot;</span><span class="punctuation">:</span><span class="string">&quot;new_twitters&quot;</span></span><br><span class="line">   <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>更多详情见： <a href="https://www.elastic.co/guide/en/elasticsearch/reference/7.6/docs-reindex.html">https://www.elastic.co/guide/en/elasticsearch/reference/7.6/docs-reindex.html</a> </p><p>GET &#x2F;bank&#x2F;_search</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;took&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;timed_out&quot;</span> <span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;_shards&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;successful&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;skipped&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;failed&quot;</span> <span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;hits&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">1000</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;relation&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;eq&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;max_score&quot;</span> <span class="punctuation">:</span> <span class="number">1.0</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hits&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;bank&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;account&quot;</span><span class="punctuation">,</span><span class="comment">//类型为account</span></span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> <span class="punctuation">:</span> <span class="number">1.0</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;account_number&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;balance&quot;</span> <span class="punctuation">:</span> <span class="number">39225</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;firstname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Amber&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;lastname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Duke&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;age&quot;</span> <span class="punctuation">:</span> <span class="number">32</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;gender&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;M&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;address&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;880 Holmes Lane&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;employer&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Pyrami&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;email&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;amberduke@pyrami.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;city&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Brogan&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;state&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;IL&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      ...</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GET /bank/_search</span><br></pre></td></tr></table></figure><p><img src="image-20200502174825233.png" alt="image-20200502174825233"></p><p>想要将年龄修改为integer</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">PUT /newbank</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;mappings&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;properties&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;account_number&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;long&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;address&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;text&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;age&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;integer&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;balance&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;long&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;city&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;keyword&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;email&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;keyword&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;employer&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;keyword&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;firstname&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;text&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;gender&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;keyword&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;lastname&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;text&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;fields&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;keyword&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;keyword&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;ignore_above&quot;</span><span class="punctuation">:</span> <span class="number">256</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;state&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;keyword&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>查看“newbank”的映射：</p><p>GET &#x2F;newbank&#x2F;_mapping</p><p><img src="image-20200502175901959.png" alt="image-20200502175901959"></p><p>能够看到age的映射类型被修改为了integer.</p><p>将bank中的数据迁移到newbank中</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">POST _reindex</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;source&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;index&quot;</span><span class="punctuation">:</span> <span class="string">&quot;bank&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;account&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;dest&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;index&quot;</span><span class="punctuation">:</span> <span class="string">&quot;newbank&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>运行输出：</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">#! Deprecation<span class="punctuation">:</span> <span class="punctuation">[</span>types removal<span class="punctuation">]</span> Specifying types in reindex requests is deprecated.</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;took&quot;</span> <span class="punctuation">:</span> <span class="number">768</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;timed_out&quot;</span> <span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="number">1000</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;updated&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;created&quot;</span> <span class="punctuation">:</span> <span class="number">1000</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;deleted&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;batches&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;version_conflicts&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;noops&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;retries&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;bulk&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;search&quot;</span> <span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;throttled_millis&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;requests_per_second&quot;</span> <span class="punctuation">:</span> <span class="number">-1.0</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;throttled_until_millis&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;failures&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span> <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>查看newbank中的数据</p><p><img src="image-20200502181432745.png" alt="image-20200502181432745"></p><h4 id="4）分词"><a href="#4）分词" class="headerlink" title="4）分词"></a>4）分词</h4><p>一个tokenizer（分词器）接收一个字符流，将之分割为独立的tokens（词元，通常是独立的单词），然后输出tokens流。</p><p>例如：whitespace tokenizer遇到空白字符时分割文本。它会将文本“Quick brown fox!”分割为[Quick,brown,fox!]。</p><p>该tokenizer（分词器）还负责记录各个terms(词条)的顺序或position位置（用于phrase短语和word proximity词近邻查询），以及term（词条）所代表的原始word（单词）的start（起始）和end（结束）的character offsets（字符串偏移量）（用于高亮显示搜索的内容）。</p><p>elasticsearch提供了很多内置的分词器，可以用来构建custom analyzers（自定义分词器）。</p><p>关于分词器： <a href="https://www.elastic.co/guide/en/elasticsearch/reference/7.6/analysis.html">https://www.elastic.co/guide/en/elasticsearch/reference/7.6/analysis.html</a> </p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">POST _analyze</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;analyzer&quot;</span><span class="punctuation">:</span> <span class="string">&quot;standard&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;The 2 QUICK Brown-Foxes jumped over the lazy dog&#x27;s bone.&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>执行结果：</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;tokens&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;token&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;the&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> <span class="punctuation">:</span> <span class="number">3</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;&lt;ALPHANUM&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;position&quot;</span> <span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;token&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;2&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> <span class="punctuation">:</span> <span class="number">4</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> <span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;&lt;NUM&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;position&quot;</span> <span class="punctuation">:</span> <span class="number">1</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;token&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;quick&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> <span class="punctuation">:</span> <span class="number">6</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> <span class="punctuation">:</span> <span class="number">11</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;&lt;ALPHANUM&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;position&quot;</span> <span class="punctuation">:</span> <span class="number">2</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;token&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;brown&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> <span class="punctuation">:</span> <span class="number">12</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> <span class="punctuation">:</span> <span class="number">17</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;&lt;ALPHANUM&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;position&quot;</span> <span class="punctuation">:</span> <span class="number">3</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;token&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;foxes&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> <span class="punctuation">:</span> <span class="number">18</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> <span class="punctuation">:</span> <span class="number">23</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;&lt;ALPHANUM&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;position&quot;</span> <span class="punctuation">:</span> <span class="number">4</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;token&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;jumped&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> <span class="punctuation">:</span> <span class="number">24</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> <span class="punctuation">:</span> <span class="number">30</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;&lt;ALPHANUM&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;position&quot;</span> <span class="punctuation">:</span> <span class="number">5</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;token&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;over&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> <span class="punctuation">:</span> <span class="number">31</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> <span class="punctuation">:</span> <span class="number">35</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;&lt;ALPHANUM&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;position&quot;</span> <span class="punctuation">:</span> <span class="number">6</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;token&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;the&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> <span class="punctuation">:</span> <span class="number">36</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> <span class="punctuation">:</span> <span class="number">39</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;&lt;ALPHANUM&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;position&quot;</span> <span class="punctuation">:</span> <span class="number">7</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;token&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;lazy&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> <span class="punctuation">:</span> <span class="number">40</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> <span class="punctuation">:</span> <span class="number">44</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;&lt;ALPHANUM&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;position&quot;</span> <span class="punctuation">:</span> <span class="number">8</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;token&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;dog&#x27;s&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> <span class="punctuation">:</span> <span class="number">45</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> <span class="punctuation">:</span> <span class="number">50</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;&lt;ALPHANUM&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;position&quot;</span> <span class="punctuation">:</span> <span class="number">9</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;token&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;bone&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> <span class="punctuation">:</span> <span class="number">51</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> <span class="punctuation">:</span> <span class="number">55</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;&lt;ALPHANUM&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;position&quot;</span> <span class="punctuation">:</span> <span class="number">10</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="（1）安装ik分词器"><a href="#（1）安装ik分词器" class="headerlink" title="（1）安装ik分词器"></a>（1）安装ik分词器</h5><p><img src="image-20200502182929583.png" alt="image-20200502182929583"></p><p>所有的语言分词，默认使用的都是“Standard Analyzer”，但是这些分词器针对于中文的分词，并不友好。为此需要安装中文的分词器。</p><p>注意：不能用默认elasticsearch-plugin install xxx.zip 进行自动安装<br><a href="https://github.com/medcl/elasticsearch-analysis-ik/releases/download">https://github.com/medcl/elasticsearch-analysis-ik/releases/download</a> 对应es版本安装</p><p>在前面安装的elasticsearch时，我们已经将elasticsearch容器的“&#x2F;usr&#x2F;share&#x2F;elasticsearch&#x2F;plugins”目录，映射到宿主机的“ &#x2F;mydata&#x2F;elasticsearch&#x2F;plugins”目录下，所以比较方便的做法就是下载“&#x2F;elasticsearch-analysis-ik-7.6.2.zip”文件，然后解压到该文件夹下即可。安装完毕后，需要重启elasticsearch容器。</p><p>如果不嫌麻烦，还可以采用如下的方式。</p><h6 id="（1）查看elasticsearch版本号："><a href="#（1）查看elasticsearch版本号：" class="headerlink" title="（1）查看elasticsearch版本号："></a>（1）查看elasticsearch版本号：</h6><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hadoop-104 ~]# curl http://localhost:9200</span><br><span class="line">&#123;</span><br><span class="line">  &quot;name&quot; : &quot;0adeb7852e00&quot;,</span><br><span class="line">  &quot;cluster_name&quot; : &quot;elasticsearch&quot;,</span><br><span class="line">  &quot;cluster_uuid&quot; : &quot;9gglpP0HTfyOTRAaSe2rIg&quot;,</span><br><span class="line">  &quot;version&quot; : &#123;</span><br><span class="line">    &quot;number&quot; : &quot;7.6.2&quot;,      #版本号为7.6.2</span><br><span class="line">    &quot;build_flavor&quot; : &quot;default&quot;,</span><br><span class="line">    &quot;build_type&quot; : &quot;docker&quot;,</span><br><span class="line">    &quot;build_hash&quot; : &quot;ef48eb35cf30adf4db14086e8aabd07ef6fb113f&quot;,</span><br><span class="line">    &quot;build_date&quot; : &quot;2020-03-26T06:34:37.794943Z&quot;,</span><br><span class="line">    &quot;build_snapshot&quot; : false,</span><br><span class="line">    &quot;lucene_version&quot; : &quot;8.4.0&quot;,</span><br><span class="line">    &quot;minimum_wire_compatibility_version&quot; : &quot;6.8.0&quot;,</span><br><span class="line">    &quot;minimum_index_compatibility_version&quot; : &quot;6.0.0-beta1&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;tagline&quot; : &quot;You Know, for Search&quot;</span><br><span class="line">&#125;</span><br><span class="line">[root@hadoop-104 ~]# </span><br></pre></td></tr></table></figure><h6 id="（2）进入es容器内部plugin目录"><a href="#（2）进入es容器内部plugin目录" class="headerlink" title="（2）进入es容器内部plugin目录"></a>（2）进入es容器内部plugin目录</h6><ul><li>docker exec -it 容器id &#x2F;bin&#x2F;bash</li></ul><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@hadoop-104 ~]# docker exec -it elasticsearch /bin/bash</span><br><span class="line">[root@0adeb7852e00 elasticsearch]# </span><br></pre></td></tr></table></figure><ul><li>wget  <a href="https://github.com/medcl/elasticsearch-analysis-ik/releases/download/v7.6.2/elasticsearch-analysis-ik-7.6.2.zip">https://github.com/medcl/elasticsearch-analysis-ik/releases/download/v7.6.2/elasticsearch-analysis-ik-7.6.2.zip</a></li></ul><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@0adeb7852e00 elasticsearch]# pwd</span><br><span class="line">/usr/share/elasticsearch</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">下载ik7.6.2</span></span><br><span class="line">[root@0adeb7852e00 elasticsearch]# wget https://github.com/medcl/elasticsearch-analysis-ik/releases/download/v7.6.2/elasticsearch-analysis-ik-7.6.2.zip</span><br></pre></td></tr></table></figure><ul><li>unzip 下载的文件</li></ul><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@0adeb7852e00 elasticsearch]# unzip elasticsearch-analysis-ik-7.6.2.zip -d ink</span><br><span class="line">Archive:  elasticsearch-analysis-ik-7.6.2.zip</span><br><span class="line">   creating: ik/config/</span><br><span class="line">  inflating: ik/config/main.dic      </span><br><span class="line">  inflating: ik/config/quantifier.dic  </span><br><span class="line">  inflating: ik/config/extra_single_word_full.dic  </span><br><span class="line">  inflating: ik/config/IKAnalyzer.cfg.xml  </span><br><span class="line">  inflating: ik/config/surname.dic   </span><br><span class="line">  inflating: ik/config/suffix.dic    </span><br><span class="line">  inflating: ik/config/stopword.dic  </span><br><span class="line">  inflating: ik/config/extra_main.dic  </span><br><span class="line">  inflating: ik/config/extra_stopword.dic  </span><br><span class="line">  inflating: ik/config/preposition.dic  </span><br><span class="line">  inflating: ik/config/extra_single_word_low_freq.dic  </span><br><span class="line">  inflating: ik/config/extra_single_word.dic  </span><br><span class="line">  inflating: ik/elasticsearch-analysis-ik-7.6.2.jar  </span><br><span class="line">  inflating: ik/httpclient-4.5.2.jar  </span><br><span class="line">  inflating: ik/httpcore-4.4.4.jar   </span><br><span class="line">  inflating: ik/commons-logging-1.2.jar  </span><br><span class="line">  inflating: ik/commons-codec-1.9.jar  </span><br><span class="line">  inflating: ik/plugin-descriptor.properties  </span><br><span class="line">  inflating: ik/plugin-security.policy  </span><br><span class="line">[root@0adeb7852e00 elasticsearch]#</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">移动到plugins目录下</span></span><br><span class="line">[root@0adeb7852e00 elasticsearch]# mv ik plugins/</span><br></pre></td></tr></table></figure><ul><li>rm -rf *.zip</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@0adeb7852e00 elasticsearch]# rm -rf elasticsearch-analysis-ik-7.6.2.zip </span><br></pre></td></tr></table></figure><p>确认是否安装好了分词器</p><h5 id="（2）ik分词器测试"><a href="#（2）ik分词器测试" class="headerlink" title="（2）ik分词器测试"></a>（2）ik分词器测试</h5><p>使用默认</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">GET my_index/_analyze</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">   <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span><span class="string">&quot;我是中国人&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>请观察执行结果：</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;tokens&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;token&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;我&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;&lt;IDEOGRAPHIC&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;position&quot;</span> <span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;token&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;是&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> <span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;&lt;IDEOGRAPHIC&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;position&quot;</span> <span class="punctuation">:</span> <span class="number">1</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;token&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;中&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> <span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> <span class="punctuation">:</span> <span class="number">3</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;&lt;IDEOGRAPHIC&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;position&quot;</span> <span class="punctuation">:</span> <span class="number">2</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;token&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;国&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> <span class="punctuation">:</span> <span class="number">3</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> <span class="punctuation">:</span> <span class="number">4</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;&lt;IDEOGRAPHIC&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;position&quot;</span> <span class="punctuation">:</span> <span class="number">3</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;token&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;人&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> <span class="punctuation">:</span> <span class="number">4</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> <span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;&lt;IDEOGRAPHIC&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;position&quot;</span> <span class="punctuation">:</span> <span class="number">4</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">GET my_index/_analyze</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">   <span class="attr">&quot;analyzer&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ik_smart&quot;</span><span class="punctuation">,</span> </span><br><span class="line">   <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span><span class="string">&quot;我是中国人&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;tokens&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;token&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;我&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;CN_CHAR&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;position&quot;</span> <span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;token&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;是&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> <span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;CN_CHAR&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;position&quot;</span> <span class="punctuation">:</span> <span class="number">1</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;token&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;中国人&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> <span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> <span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;CN_WORD&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;position&quot;</span> <span class="punctuation">:</span> <span class="number">2</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">GET my_index/_analyze</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">   <span class="attr">&quot;analyzer&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ik_max_word&quot;</span><span class="punctuation">,</span> </span><br><span class="line">   <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span><span class="string">&quot;我是中国人&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;tokens&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;token&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;我&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;CN_CHAR&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;position&quot;</span> <span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;token&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;是&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> <span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;CN_CHAR&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;position&quot;</span> <span class="punctuation">:</span> <span class="number">1</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;token&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;中国人&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> <span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> <span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;CN_WORD&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;position&quot;</span> <span class="punctuation">:</span> <span class="number">2</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;token&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;中国&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> <span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> <span class="punctuation">:</span> <span class="number">4</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;CN_WORD&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;position&quot;</span> <span class="punctuation">:</span> <span class="number">3</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;token&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;国人&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> <span class="punctuation">:</span> <span class="number">3</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> <span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;CN_WORD&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;position&quot;</span> <span class="punctuation">:</span> <span class="number">4</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="（3）自定义词库"><a href="#（3）自定义词库" class="headerlink" title="（3）自定义词库"></a>（3）自定义词库</h5><ul><li>修改&#x2F;usr&#x2F;share&#x2F;elasticsearch&#x2F;plugins&#x2F;ik&#x2F;config中的IKAnalyzer.cfg.xml<br>&#x2F;usr&#x2F;share&#x2F;elasticsearch&#x2F;plugins&#x2F;ik&#x2F;config</li></ul><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">properties</span> <span class="keyword">SYSTEM</span> <span class="string">&quot;http://java.sun.com/dtd/properties.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">comment</span>&gt;</span>IK Analyzer 扩展配置<span class="tag">&lt;/<span class="name">comment</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--用户可以在这里配置自己的扩展字典 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">&quot;ext_dict&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">entry</span>&gt;</span></span><br><span class="line"> <span class="comment">&lt;!--用户可以在这里配置自己的扩展停止词字典--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">&quot;ext_stopwords&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">entry</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--用户可以在这里配置远程扩展字典--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">&quot;remote_ext_dict&quot;</span>&gt;</span>http://8.138.99.194/es/fenci.txt<span class="tag">&lt;/<span class="name">entry</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--用户可以在这里配置远程扩展停止词字典--&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- &lt;entry key=&quot;remote_ext_stopwords&quot;&gt;words_location&lt;/entry&gt; --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br></pre></td></tr></table></figure><p>重启elasticsearch容器。</p><p>测试</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">POST _analyze</span><br><span class="line">&#123;</span><br><span class="line">  &quot;analyzer&quot;: &quot;ik_smart&quot;,</span><br><span class="line">  &quot;text&quot;: &quot;乔碧萝&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;tokens&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;token&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;乔碧萝&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> <span class="punctuation">:</span> <span class="number">3</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;CN_WORD&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;position&quot;</span> <span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>更新完成后，es只会对于新增的数据用更新分词。历史数据是不会重新分词的。如果想要历史数据重新分词，需要执行：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">POST my_index/_update_by_query?conflicts=proceed</span><br></pre></td></tr></table></figure><p><a href="http://8.138.99.194:8081/es/fenci.txt%EF%BC%8C%E8%BF%99%E4%B8%AA%E6%98%AFnginx%E4%B8%8A%E8%B5%84%E6%BA%90%E7%9A%84%E8%AE%BF%E9%97%AE%E8%B7%AF%E5%BE%84">http://8.138.99.194:8081/es/fenci.txt，这个是nginx上资源的访问路径</a></p><p>在运行下面实例之前，需要安装nginx（安装方法见安装nginx），然后创建“fenci.txt”文件，内容如下：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">echo &quot;樱桃萨其马，带你甜蜜入夏&quot; &gt; /mydata/nginx/html/fenci.txt </span><br></pre></td></tr></table></figure><p>测试效果：</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">GET my_index/_analyze</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">   <span class="attr">&quot;analyzer&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ik_max_word&quot;</span><span class="punctuation">,</span> </span><br><span class="line">   <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span><span class="string">&quot;樱桃萨其马，带你甜蜜入夏&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;tokens&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;token&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;樱桃&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> <span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;CN_WORD&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;position&quot;</span> <span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;token&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;萨其马&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> <span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> <span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;CN_WORD&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;position&quot;</span> <span class="punctuation">:</span> <span class="number">1</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;token&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;带你&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> <span class="punctuation">:</span> <span class="number">6</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> <span class="punctuation">:</span> <span class="number">8</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;CN_WORD&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;position&quot;</span> <span class="punctuation">:</span> <span class="number">2</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;token&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;甜蜜&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> <span class="punctuation">:</span> <span class="number">8</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> <span class="punctuation">:</span> <span class="number">10</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;CN_WORD&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;position&quot;</span> <span class="punctuation">:</span> <span class="number">3</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;token&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;入夏&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> <span class="punctuation">:</span> <span class="number">10</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> <span class="punctuation">:</span> <span class="number">12</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;CN_WORD&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;position&quot;</span> <span class="punctuation">:</span> <span class="number">4</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="5、elasticsearch-Rest-Client"><a href="#5、elasticsearch-Rest-Client" class="headerlink" title="5、elasticsearch-Rest-Client"></a>5、elasticsearch-Rest-Client</h3><h4 id="1）9300-TCP"><a href="#1）9300-TCP" class="headerlink" title="1）9300: TCP"></a>1）9300: TCP</h4><ul><li>spring-data-elasticsearch:transport-api.jar;<ul><li>springboot版本不同，ransport-api.jar不同，不能适配es版本</li><li>7.x已经不建议使用，8以后就要废弃</li></ul></li></ul><h4 id="2）9200-HTTP"><a href="#2）9200-HTTP" class="headerlink" title="2）9200: HTTP"></a>2）9200: HTTP</h4><ul><li><p>jestClient: 非官方，更新慢；</p></li><li><p>RestTemplate：模拟HTTP请求，ES很多操作需要自己封装，麻烦；</p></li><li><p>HttpClient：同上；</p></li><li><p>Elasticsearch-Rest-Client：官方RestClient，封装了ES操作，API层次分明，上手简单；<br>最终选择Elasticsearch-Rest-Client（elasticsearch-rest-high-level-client）；<br> <a href="https://www.elastic.co/guide/en/elasticsearch/client/java-rest/current/java-rest-high.html">https://www.elastic.co/guide/en/elasticsearch/client/java-rest/current/java-rest-high.html</a></p></li></ul><h3 id="6、安装Nginx"><a href="#6、安装Nginx" class="headerlink" title="6、安装Nginx"></a>6、安装Nginx</h3><ul><li><p>随便启动一个nginx实例，只是为了复制出配置</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker run -p 8081:80 --name nginx -d nginx:1.10   </span><br></pre></td></tr></table></figure></li><li><p>将容器内的配置文件拷贝到&#x2F;mydata&#x2F;nginx&#x2F;conf&#x2F; 下</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mkdir -p /mydata/nginx/html</span><br><span class="line">mkdir -p /mydata/nginx/logs</span><br><span class="line">mkdir -p /mydata/nginx/conf</span><br><span class="line">docker container cp nginx:/etc/nginx .  #拷贝到当前文件夹</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">由于拷贝完成后会在config中存在一个nginx文件夹，所以需要将它的内容移动到conf中</span></span><br><span class="line">mv /mydata/nginx/conf/nginx/* /mydata/nginx/conf/</span><br><span class="line">rm -rf /mydata/nginx/conf/nginx</span><br></pre></td></tr></table></figure></li><li><p>终止原容器：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker stop nginx</span><br></pre></td></tr></table></figure></li><li><p>执行命令删除原容器：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker rm nginx</span><br></pre></td></tr></table></figure></li><li><p>创建新的Nginx，执行以下命令</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker run -p 8081:80 --name nginx \</span><br><span class="line"> -v /mydata/nginx/html:/usr/share/nginx/html \</span><br><span class="line"> -v /mydata/nginx/logs:/var/log/nginx \</span><br><span class="line"> -v /mydata/nginx/conf/:/etc/nginx \</span><br><span class="line"> -d nginx:1.10</span><br></pre></td></tr></table></figure></li><li><p>设置开机启动nginx</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker update nginx --restart=always</span><br></pre></td></tr></table></figure></li></ul><h3 id="7、SpringBoot整合ElasticSearch"><a href="#7、SpringBoot整合ElasticSearch" class="headerlink" title="7、SpringBoot整合ElasticSearch"></a>7、SpringBoot整合ElasticSearch</h3><h3 id="1、导入依赖"><a href="#1、导入依赖" class="headerlink" title="1、导入依赖"></a>1、导入依赖</h3><p>这里的版本要和所按照的ELK版本匹配。</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.elasticsearch.client<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>elasticsearch-rest-high-level-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>7.6.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.atguigu.gulimall<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>gulimall-common<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-loadbalancer<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-bootstrap<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastjson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.79<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在spring-boot-dependencies中所依赖的ELK版本位6.8.7</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">elasticsearch.version</span>&gt;</span>7.15.2<span class="tag">&lt;/<span class="name">elasticsearch.version</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="image-20240418220106871.png" alt="image-20240418220106871"></p><p>需要在项目中将它改为7.6.2</p><p>因为我用的阿里云创建的项目，阿里云创建的项目通过<a href="https://so.csdn.net/so/search?q=dependencyManagement&spm=1001.2101.3001.7020">dependencyManagement</a>管理依赖版本</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring-boot.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br></pre></td></tr></table></figure><p>直接在阿里云springboot-start的pom文件中将7.15.2改为7.6.2</p><p><img src="image-20240418221846568.png" alt="image-20240418221846568"></p><p><img src="image-20240418221720375.png" alt="image-20240418221720375"></p><h3 id="2-编写配置–给容器注入RestHighLevelClient"><a href="#2-编写配置–给容器注入RestHighLevelClient" class="headerlink" title="2.编写配置–给容器注入RestHighLevelClient"></a>2.编写配置–给容器注入RestHighLevelClient</h3><p>因为用的是rest-high-level-client所以要手动配置com.atguigu.gulimall.search.config.GulimallElasticSearchConfig</p><p>es如果是集群，可以有多个httpHost分别对应不同端口。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GulimallElasticSearchConfig</span> &#123;</span><br><span class="line">      <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> RequestOptions COMMON_OPTIONS;</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        RequestOptions.<span class="type">Builder</span> <span class="variable">builder</span> <span class="operator">=</span> RequestOptions.DEFAULT.toBuilder();</span><br><span class="line"><span class="comment">//        builder.addHeader(&quot;Authorization&quot;, &quot;Bearer &quot; + TOKEN);</span></span><br><span class="line"><span class="comment">//        builder.setHttpAsyncResponseConsumerFactory(</span></span><br><span class="line"><span class="comment">//                new HttpAsyncResponseConsumerFactory</span></span><br><span class="line"><span class="comment">//                        .HeapBufferedResponseConsumerFactory(30 * 1024 * 1024 * 1024));</span></span><br><span class="line">        COMMON_OPTIONS = builder.build();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> RestHighLevelClient <span class="title function_">esRestClient</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">RestHighLevelClient</span> <span class="variable">client</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">RestHighLevelClient</span>(</span><br><span class="line">                RestClient.builder(</span><br><span class="line">                        <span class="keyword">new</span> <span class="title class_">HttpHost</span>(<span class="string">&quot;8.138.99.194&quot;</span>,<span class="number">9200</span>,<span class="string">&quot;http&quot;</span>)</span><br><span class="line">                )</span><br><span class="line">        );</span><br><span class="line">        <span class="keyword">return</span> client;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>排除数据源报错</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication(exclude = DataSourceAutoConfiguration.class)</span></span><br></pre></td></tr></table></figure><h3 id="3、编写测试类"><a href="#3、编写测试类" class="headerlink" title="3、编写测试类"></a>3、编写测试类</h3><h4 id="1）测试保存数据"><a href="#1）测试保存数据" class="headerlink" title="1）测试保存数据"></a>1）测试保存数据</h4><p><a href="https://www.elastic.co/guide/en/elasticsearch/client/java-rest/7.6/java-rest-high-document-index.html">https://www.elastic.co/guide/en/elasticsearch/client/java-rest/7.6/java-rest-high-document-index.html</a> </p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">indexData</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">    <span class="type">IndexRequest</span> <span class="variable">indexRequest</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">IndexRequest</span> (<span class="string">&quot;users&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">    user.setUserName(<span class="string">&quot;张三&quot;</span>);</span><br><span class="line">    user.setAge(<span class="number">20</span>);</span><br><span class="line">    user.setGender(<span class="string">&quot;男&quot;</span>);</span><br><span class="line">    <span class="type">String</span> <span class="variable">jsonString</span> <span class="operator">=</span> JSON.toJSONString(user);</span><br><span class="line">    <span class="comment">//设置要保存的内容</span></span><br><span class="line">    indexRequest.source(jsonString, XContentType.JSON);</span><br><span class="line">    <span class="comment">//执行创建索引和保存数据</span></span><br><span class="line">    <span class="type">IndexResponse</span> <span class="variable">index</span> <span class="operator">=</span> client.index(indexRequest, GulimallElasticSearchConfig.COMMON_OPTIONS);</span><br><span class="line"></span><br><span class="line">    System.out.println(index);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试后：</p><p><img src="image-20240418230800989.png" alt="image-20240418230800989"></p><h2 id="二、商城业务"><a href="#二、商城业务" class="headerlink" title="二、商城业务"></a>二、商城业务</h2><h3 id="1-商品上架"><a href="#1-商品上架" class="headerlink" title="1.商品上架"></a>1.商品上架</h3><p>POST</p><p>&#x2F;product&#x2F;spuinfo&#x2F;{spuId}&#x2F;up</p><p><strong>响应数据</strong></p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;msg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;success&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p><strong>1.com.atguigu.gulimall.product.controller.SpuInfoController</strong></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@PostMapping(&quot;/&#123;spuId&#125;/up&quot;)</span></span><br><span class="line"><span class="keyword">public</span> R <span class="title function_">spuUp</span><span class="params">(<span class="meta">@PathVariable</span> Long spuId)</span> &#123;</span><br><span class="line"></span><br><span class="line">    spuInfoService.up(spuId);</span><br><span class="line">    <span class="keyword">return</span> R.ok();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>2.com.atguigu.gulimall.product.service.impl.SpuInfoServiceImpl</strong></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">up</span><span class="params">(Long spuId)</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//1.查询当前spu所有的Sku信息，品牌的名字</span></span><br><span class="line">    List&lt;SkuInfoEntity&gt; skus = skuInfoService.getSkuBySpuId(spuId);</span><br><span class="line">    List&lt;Long&gt; skuIdList = skus.stream().map(SkuInfoEntity::getSkuId).collect(Collectors.toList());</span><br><span class="line">    <span class="comment">//TODO 4.查询当前sku所有可以用来检索的规格属性,</span></span><br><span class="line">    List&lt;ProductAttrValueEntity&gt; baseAttrs = productAttrValueService.baseAttrlistforspu(spuId);</span><br><span class="line">    List&lt;Long&gt; attrIds = baseAttrs.stream().map(attr -&gt; &#123;</span><br><span class="line">        <span class="keyword">return</span> attr.getAttrId();</span><br><span class="line">    &#125;).collect(Collectors.toList());</span><br><span class="line">    List&lt;Long&gt; searchIds = attrService.selectSearchAttrs(attrIds);</span><br><span class="line">    Set&lt;Long&gt; idSet = <span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;&gt;(searchIds);</span><br><span class="line">    List&lt;SkuEsModel.Attrs&gt; attrsList = baseAttrs.stream().filter(item -&gt; &#123;</span><br><span class="line">        <span class="keyword">return</span> idSet.contains(item.getAttrId());</span><br><span class="line">    &#125;).map(item -&gt; &#123;</span><br><span class="line">        SkuEsModel.<span class="type">Attrs</span> <span class="variable">attrs1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SkuEsModel</span>.Attrs();</span><br><span class="line">        BeanUtils.copyProperties(item, attrs1);</span><br><span class="line">        <span class="keyword">return</span> attrs1;</span><br><span class="line">    &#125;).collect(Collectors.toList());</span><br><span class="line">    <span class="comment">//TODO 1.发送远程调用，库存系统查询是否有库存</span></span><br><span class="line">    Map&lt;Long, Boolean&gt; stockMap = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="type">R</span> <span class="variable">r</span> <span class="operator">=</span> wareFeignService.getSkusHasStock(skuIdList);</span><br><span class="line">        <span class="comment">//出入匿名内部类对象</span></span><br><span class="line">        TypeReference&lt;List&lt;SkuHasStockVo&gt;&gt; typeReference = <span class="keyword">new</span> <span class="title class_">TypeReference</span>&lt;List&lt;SkuHasStockVo&gt;&gt;() &#123;</span><br><span class="line">        &#125;;</span><br><span class="line">        stockMap = r.getData(typeReference).stream().collect(Collectors.toMap(SkuHasStockVo::getSkuId, item -&gt; item.getHasStock()));</span><br><span class="line">    &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">        log.error(<span class="string">&quot;库存查询异常：原因&#123;&#125;&quot;</span>,e);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//2.封装信息</span></span><br><span class="line">    Map&lt;Long, Boolean&gt; finalStockMap = stockMap;</span><br><span class="line">    List&lt;SkuEsModel&gt; upProducts = skus.stream().map(sku -&gt; &#123;</span><br><span class="line">        <span class="comment">//组装需要的数据</span></span><br><span class="line">        <span class="type">SkuEsModel</span> <span class="variable">esModel</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SkuEsModel</span>();</span><br><span class="line">        BeanUtils.copyProperties(sku, esModel);</span><br><span class="line">        esModel.setSkuPrice(sku.getPrice());</span><br><span class="line">        esModel.setSkuImg(sku.getSkuDefaultImg());</span><br><span class="line">        <span class="comment">//hasStock,hotScore</span></span><br><span class="line">        <span class="comment">//设置库存信息</span></span><br><span class="line">        <span class="keyword">if</span> (finalStockMap == <span class="literal">null</span>)&#123;</span><br><span class="line">            finalStockMap.get(<span class="literal">true</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            esModel.setHasStock(finalStockMap.get(sku.getSkuId()));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//TODO 2热度评分，默认0</span></span><br><span class="line">        esModel.setHotScore(<span class="number">0L</span>);</span><br><span class="line">        <span class="comment">//TODO 3.品牌和分类名字信息</span></span><br><span class="line">        <span class="type">BrandEntity</span> <span class="variable">brandEntity</span> <span class="operator">=</span> brandService.getById(sku.getBrandId());</span><br><span class="line">        esModel.setBrandName(brandEntity.getName());</span><br><span class="line">        esModel.setBrandImg(brandEntity.getLogo());</span><br><span class="line">        <span class="type">CategoryEntity</span> <span class="variable">categoryEntity</span> <span class="operator">=</span> categoryService.getById(sku.getCatalogId());</span><br><span class="line">        esModel.setCatelogName(categoryEntity.getName());</span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置检索属性</span></span><br><span class="line">        esModel.setAttrs(attrsList);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> esModel;</span><br><span class="line">    &#125;).collect(Collectors.toList());</span><br><span class="line">    <span class="comment">//TODO 5.将数据发送给es保存   gulimall-search</span></span><br><span class="line">    <span class="type">R</span> <span class="variable">r</span> <span class="operator">=</span> searchFeignService.productStatusUp(upProducts);</span><br><span class="line">    <span class="keyword">if</span> (r.getCode() == <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="comment">//远程调用成功</span></span><br><span class="line">        <span class="comment">//TODO 6.修改spu状态</span></span><br><span class="line">        baseMapper.updateSpuStatus(spuId, ProductConstant.StatusEnum.SPU_UP.getCode());</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">//失败</span></span><br><span class="line">        <span class="comment">//TODO 7.重复调用？ 接口幂等性;重试机制？</span></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * feign调用</span></span><br><span class="line"><span class="comment">         * 1.构造请求数据，将对象转为json</span></span><br><span class="line"><span class="comment">         * 2.发送请求进行执行（执行成功会解码响应数据）</span></span><br><span class="line"><span class="comment">         * 3.执行请求会有重试机制</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>3.search服务controller</strong></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//上架商品</span></span><br><span class="line"><span class="meta">@PostMapping(&quot;/product&quot;)</span></span><br><span class="line"><span class="keyword">public</span> R <span class="title function_">productStatusUp</span><span class="params">(<span class="meta">@RequestBody</span> List&lt;SkuEsModel&gt; skuEsModels)</span>&#123;</span><br><span class="line">    <span class="type">boolean</span> <span class="variable">b</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">         b = productSaveService.productStatusUp(skuEsModels);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">        log.error(<span class="string">&quot;ElasticSaveController商品上架错误，&#123;&#125;,&quot;</span>,e);</span><br><span class="line">        <span class="keyword">return</span> R.error(BizCodeEnum.PRODUCT_UP_EXCEP.getCode(), BizCodeEnum.PRODUCT_UP_EXCEP.getMsg());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!b) <span class="keyword">return</span> R.ok();</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> R.error(BizCodeEnum.PRODUCT_UP_EXCEP.getCode(), BizCodeEnum.PRODUCT_UP_EXCEP.getMsg());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>4.使用RestHighLevelClient保存到Es</strong></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">productStatusUp</span><span class="params">(List&lt;SkuEsModel&gt; skuEsModels)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//保存到es</span></span><br><span class="line">    <span class="comment">//1.给es中建立索引，product,建立好映射关系</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//2.批量保存</span></span><br><span class="line">    <span class="type">BulkRequest</span> <span class="variable">bulkRequest</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BulkRequest</span>();</span><br><span class="line">    <span class="keyword">for</span> (SkuEsModel model : skuEsModels) &#123;</span><br><span class="line">        <span class="type">IndexRequest</span> <span class="variable">indexRequest</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">IndexRequest</span>(EsConstant.PRODUCT_INDEX);</span><br><span class="line">        indexRequest.id(model.getSpuId().toString());</span><br><span class="line">        <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> JSON.toJSONString(model);</span><br><span class="line">        indexRequest.source(s, XContentType.JSON);</span><br><span class="line">        bulkRequest.add(indexRequest);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">BulkResponse</span> <span class="variable">bulk</span> <span class="operator">=</span> restHighLevelClient.bulk(bulkRequest, GulimallElasticSearchConfig.COMMON_OPTIONS);</span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="type">boolean</span> <span class="variable">b</span> <span class="operator">=</span> bulk.hasFailures();</span><br><span class="line">    List&lt;String&gt; collect = Arrays.stream(bulk.getItems()).map(item -&gt; &#123;</span><br><span class="line">        <span class="keyword">return</span> item.getId();</span><br><span class="line">    &#125;).collect(Collectors.toList());</span><br><span class="line">    log.info(<span class="string">&quot;商品上架完成：&#123;&#125;，返回数据，&#123;&#125;&quot;</span>,collect,bulk.toString());</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-首页-整合thymeleaf渲染首页"><a href="#2-首页-整合thymeleaf渲染首页" class="headerlink" title="2.首页-整合thymeleaf渲染首页"></a>2.首页-整合thymeleaf渲染首页</h3><ul><li><strong>product引入thymeleaf模板引擎</strong></li></ul><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-thymeleaf<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>导入前端页面</strong></li></ul><p><img src="image-20240420211958726.png" alt="image-20240420211958726"></p><ul><li><strong>进行thymeleaf配置, yml关闭thymeleaf缓存</strong></li></ul><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 关闭thymeleaf缓存，以便修改代码后刷新页面能看出修改</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">thymeleaf:</span></span><br><span class="line">    <span class="attr">cache:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>启动服务：</p><p><img src="image-20240420212430783.png" alt="image-20240420212430783"></p><h3 id="3-开发首页跳转功能"><a href="#3-开发首页跳转功能" class="headerlink" title="3.开发首页跳转功能"></a>3.开发首页跳转功能</h3><ul><li><p>新建gulimall&#x2F;product&#x2F;web&#x2F;IndexController.java</p></li><li><p>创建页面跳转方法</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line">CategoryService categoryService;</span><br><span class="line"></span><br><span class="line"><span class="meta">@GetMapping(&#123;&quot;/&quot;, &quot;index.html&quot;&#125;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">indexPage</span><span class="params">(Model model)</span> &#123;</span><br><span class="line">    List&lt;CategoryEntity&gt; categoryEntities = categoryService.getLevel1Categorys();</span><br><span class="line">    model.addAttribute(<span class="string">&quot;categories&quot;</span>, categoryEntities);</span><br><span class="line">    <span class="comment">//视图解析器会进行拼接，前缀classpath:/templates/返回值.html</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;index&quot;</span>; <span class="comment">//相当于return &quot;classpath:/templates/index.html&quot;;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>getLevel1Categorys()方法具体实现</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> List&lt;CategoryEntity&gt; <span class="title function_">getLevel1Categorys</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> baseMapper.selectList(<span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;CategoryEntity&gt;().eq(<span class="string">&quot;parent_cid&quot;</span>, <span class="number">0</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="3-1thymeleaf渲染商城首页一级分类"><a href="#3-1thymeleaf渲染商城首页一级分类" class="headerlink" title="3.1thymeleaf渲染商城首页一级分类"></a>3.1thymeleaf渲染商城首页一级分类</h4><ul><li><p>首先，html标签加上thymeleaf命名空间xmlns:th&#x3D;”<a href="http://www.thymeleaf.org/">http://www.thymeleaf.org</a>“, 加上命名空间后就行使用thymeleaf的语法</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>页面修改不重启服务器实时更新ctrl+f9，然后刷新页面才可以</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>并通过thymeleaf遍历渲染</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--轮播主体内容--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;header_main&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;header_banner&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;header_main_left&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">th:each</span>=<span class="string">&quot;category : $&#123;categorys&#125;&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;header_main_left_a&quot;</span> <span class="attr">th:attr</span>=<span class="string">&quot;ctg-data=$&#123;category.catId&#125;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">b</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;category.name&#125;&quot;</span>&gt;</span>家用电器<span class="tag">&lt;/<span class="name">b</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="3-2首页渲染三级分类"><a href="#3-2首页渲染三级分类" class="headerlink" title="3.2首页渲染三级分类"></a>3.2首页渲染三级分类</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="meta">@GetMapping(&quot;/index/catalog.json&quot;)</span></span><br><span class="line"><span class="keyword">public</span> Map&lt;String, List&lt;Catelog2Vo&gt;&gt; <span class="title function_">getCatelogJson</span><span class="params">()</span>&#123;</span><br><span class="line">    Map&lt;String, List&lt;Catelog2Vo&gt;&gt; catelogJson = categoryService.getCatelogJson();</span><br><span class="line">    <span class="keyword">return</span> catelogJson;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="comment">//二级分类</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Catelog2Vo</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String catalog1Id;</span><br><span class="line">    <span class="keyword">private</span> List&lt;Catelog3Vo&gt; catalog3List;</span><br><span class="line">    <span class="keyword">private</span> String id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 三级分类</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@NoArgsConstructor</span></span><br><span class="line">    <span class="meta">@AllArgsConstructor</span></span><br><span class="line">    <span class="meta">@Data</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">Catelog3Vo</span>&#123;</span><br><span class="line">        <span class="keyword">private</span> String catalog2Id;</span><br><span class="line">        <span class="keyword">private</span> String id;</span><br><span class="line">        <span class="keyword">private</span> String name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改catalogLoader.js代码</p><p>$.getJSON(“index&#x2F;json&#x2F;catalog.json”,改为$.getJSON(“index&#x2F;catalog.json”,</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> Map&lt;String, List&lt;Catelog2Vo&gt;&gt; <span class="title function_">getCatelogJson</span><span class="params">()</span> &#123;</span><br><span class="line">    List&lt;CategoryEntity&gt; level1Category = getLevel1Category();</span><br><span class="line">    Map&lt;String, List&lt;Catelog2Vo&gt;&gt; parent_cid = level1Category.stream().collect(Collectors.toMap(k -&gt; k.getCatId().toString(), v -&gt; &#123;</span><br><span class="line">        <span class="comment">//查询一级分类的二级分类</span></span><br><span class="line">        List&lt;CategoryEntity&gt; categoryEntities = baseMapper.selectList(<span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;CategoryEntity&gt;().eq(<span class="string">&quot;parent_cid&quot;</span>, v.getCatId()));</span><br><span class="line">        List&lt;Catelog2Vo&gt; catelog2Vos = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">if</span> (categoryEntities != <span class="literal">null</span>) &#123;</span><br><span class="line">            catelog2Vos = categoryEntities.stream().map(item -&gt; &#123;</span><br><span class="line">                <span class="type">Catelog2Vo</span> <span class="variable">catelog2Vo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Catelog2Vo</span>(v.getCatId().toString(), <span class="literal">null</span>, item.getCatId().toString(), item.getName());</span><br><span class="line">                <span class="comment">//着耳机分类的三级分类</span></span><br><span class="line">                List&lt;CategoryEntity&gt; level3Catelog = baseMapper.selectList(<span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;CategoryEntity&gt;().eq(<span class="string">&quot;parent_cid&quot;</span>, item.getCatId()));</span><br><span class="line">                <span class="keyword">if</span> (level3Catelog != <span class="literal">null</span>)&#123;</span><br><span class="line">                    List&lt;Catelog2Vo.Catelog3Vo&gt; collect = level3Catelog.stream().map(l3 -&gt; &#123;</span><br><span class="line">                        Catelog2Vo.<span class="type">Catelog3Vo</span> <span class="variable">catelog3Vo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Catelog2Vo</span>.Catelog3Vo(item.getCatId().toString(),l3.getCatId().toString(),l3.getName());</span><br><span class="line">                        <span class="keyword">return</span> catelog3Vo;</span><br><span class="line">                    &#125;).collect(Collectors.toList());</span><br><span class="line">                    catelog2Vo.setCatalog3List(collect);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> catelog2Vo;</span><br><span class="line">            &#125;).collect(Collectors.toList());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> catelog2Vos;</span><br><span class="line">    &#125;));</span><br><span class="line">    <span class="keyword">return</span> parent_cid;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>优化</strong></p><p>1.将数据库的多次查询变为一次</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Map&lt;String, List&lt;Catelog2Vo&gt;&gt; <span class="title function_">getCatelogJson</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//数据库多次查询变为1次</span></span><br><span class="line">        List&lt;CategoryEntity&gt; selectList = baseMapper.selectList(<span class="literal">null</span>);</span><br><span class="line">        <span class="comment">//查询一级分类</span></span><br><span class="line">        List&lt;CategoryEntity&gt; level1Category = getParent_cid(selectList,<span class="number">0L</span>);</span><br><span class="line">        Map&lt;String, List&lt;Catelog2Vo&gt;&gt; parent_cid = level1Category.stream().collect(Collectors.toMap(k -&gt; k.getCatId().toString(), v -&gt; &#123;</span><br><span class="line">            <span class="comment">//查询一级分类的二级分类</span></span><br><span class="line">            List&lt;CategoryEntity&gt; categoryEntities = getParent_cid(selectList,v.getCatId());</span><br><span class="line">            List&lt;Catelog2Vo&gt; catelog2Vos = <span class="literal">null</span>;</span><br><span class="line">            <span class="keyword">if</span> (categoryEntities != <span class="literal">null</span>) &#123;</span><br><span class="line">                catelog2Vos = categoryEntities.stream().map(l2 -&gt; &#123;</span><br><span class="line">                    <span class="type">Catelog2Vo</span> <span class="variable">catelog2Vo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Catelog2Vo</span>(v.getCatId().toString(), <span class="literal">null</span>, l2.getCatId().toString(), l2.getName());</span><br><span class="line">                    <span class="comment">//着耳机分类的三级分类</span></span><br><span class="line">                    List&lt;CategoryEntity&gt; level3Catelog = getParent_cid(selectList,l2.getCatId());</span><br><span class="line">                    <span class="keyword">if</span> (level3Catelog != <span class="literal">null</span>)&#123;</span><br><span class="line">                        List&lt;Catelog2Vo.Catelog3Vo&gt; collect = level3Catelog.stream().map(l3 -&gt; &#123;</span><br><span class="line">                            Catelog2Vo.<span class="type">Catelog3Vo</span> <span class="variable">catelog3Vo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Catelog2Vo</span>.Catelog3Vo(l3.getCatId().toString(),l3.getCatId().toString(),l3.getName());</span><br><span class="line">                            <span class="keyword">return</span> catelog3Vo;</span><br><span class="line">                        &#125;).collect(Collectors.toList());</span><br><span class="line">                        catelog2Vo.setCatalog3List(collect);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">return</span> catelog2Vo;</span><br><span class="line">                &#125;).collect(Collectors.toList());</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> catelog2Vos;</span><br><span class="line">        &#125;));</span><br><span class="line">        <span class="keyword">return</span> parent_cid;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>压力测试 </p><p>吞吐量 34</p><p><img src="image-20240422212930358.png" alt="image-20240422212930358"></p><h3 id="4-nginx搭建域名访问环境"><a href="#4-nginx搭建域名访问环境" class="headerlink" title="4.nginx搭建域名访问环境"></a>4.nginx搭建域名访问环境</h3><p><strong>1.搭建步骤</strong></p><p><img src="7c5f112bc43c48dca5a94b522451d429.png" alt="img"></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">listen       80;</span><br><span class="line">server_name  gulimall.com;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">charset koi8-r;</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">access_log  /var/log/nginx/log/host.access.log  main;</span></span><br><span class="line"></span><br><span class="line">location / &#123;</span><br><span class="line">proxy_pass http://127.0.0.1:10000;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改hosts文件C:\Windows\System32\drivers\etc</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">127.0.0.1       activate.navicat.com</span><br><span class="line">192.168.188.1    gulimall.com</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>然后命令行输入ipconfig &#x2F;flushdns</p><p>但是如果后期微服务实例增多，需要再进入配置文件进行修改，比较麻烦，所以配置上游服务器配置为网关，将所有匹配请求转发到网关，由网关再进行转发。</p><pre><code># 配置上游服务器#再在gulimall.conf中将proxy_pass转发目的地址改为gulimall#注意 Nginx代理给网关的时候，会丢失请求头的host信息#解决方式 配置 proxy_set_header Host $hostupstream gulimall &#123;    server 192.168.188.1:88; # 网关&#125;location / &#123;        proxy_set_header Host $host; # 添加header Host，内容为原来的host内容        proxy_pass http://gulimall;&#125;</code></pre><p>​    </p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#在网关服务的application.yaml中添加域名转发配置：一定要写到最后不然product服务会被兼容掉，前面找到了，就不会匹配后面的了</span></span><br><span class="line"></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">id:</span> <span class="string">gulimall_host_route</span></span><br><span class="line">      <span class="attr">uri:</span> <span class="string">lb://gulimall-product</span></span><br><span class="line">      <span class="attr">predicates:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">Host=**.gulimall.com,gulimall.com</span></span><br></pre></td></tr></table></figure><p><strong>2.域名映射效果</strong></p><p>请求接口 gulimall.com<br>请求页面 gulimall.com</p><p>nginx直接代理给网关，网关判断<br>如果&#x2F;api&#x2F;****，转交给对应的服务器<br>如果是 满足域名，转交给对应的服务  &#x2F;&#x2F;一定不能颠倒</p><h2 id="三、性能压测-性能与压力测试"><a href="#三、性能压测-性能与压力测试" class="headerlink" title="三、性能压测-性能与压力测试"></a>三、性能压测-性能与压力测试</h2><h3 id="1-基本介绍"><a href="#1-基本介绍" class="headerlink" title="1.基本介绍"></a>1.基本介绍</h3><p><strong>1 性能指标</strong></p><pre><code>响应时间 （Response Time: ST）响应时间指用户从客户端发起一个请求开始，到客户端接收到从服务器端返回的响应结束，整个过程所耗费的时间。HPS（Hits Per Second）：每秒点击次数，单位是次秘。TPS（Transaction per Second）：系统每秒处理交易数，单位是笔/秒。QPS（Query per Second）：系統每秒处理查询次数，单位是次/秒。对于互联网业务中，如果某些业务有且仅有一个请求连接，那么TPS=QPS=HPS，一般情记下用 TPS 来衡量整个业务流程，用 QPS 来衡量接口查询次数，用 HPS 来表示对服务器单击请求。无论TPS、QPS、HPS，此指标是衡量系统处理能力非常重要的指标，越大越好，根据经验，一般情况下：    金融行业：1000TPS~50000TPS，不包括互联网化的活动    保险行业：100TPS~100000TPS，不包括互联网化的活动    制造行业：10TPS~5000TPS    互联网电子商务：10000TPS~1000000TPS    互联网中型网站：1000TPS~5000OTPS    互联网小型网站：500TPS~10000TPS最大响应时间（Max Response Time）：指用户发出请求或者指令到系统做出反应（响应）的最大时间。最少响应时间（Minimum Response Time）：指用户发出请求或者指令到系统作出反应（响应）的最少时间。90%响应时间（90% Response Time）：是指所有用户的响应时间进行排序，第90%的响应时间。从外部看，性能测试主要关注如下三个指标    吞吐量：每秒钟系统能够处理的请求数、任务数    响应时间：服务处理一个请求或一个任务的耗时    错误率：一批请求种结果出错的请求所占比例</code></pre><h3 id="2-JMeter"><a href="#2-JMeter" class="headerlink" title="2.JMeter"></a>2.JMeter</h3><p>我使用了5.4.1版本</p><p>启动点击D:\tool\apache\apache-jmeter-5.4.1\bin\jmeter.bat</p><p>结果分析：</p><p>有错误率同开发确认， 确定是否允许错误的发生或者错误率允许在多大的范围内；</p><p>Throughput 吞吐量每秒请求的数大于并发数， 则可以慢慢的往上面增加； 若在压测的机器性能很好的情况下， 出现吞吐量小于并发数， 说明并发数不能再增加了， 可以慢慢的往下减， 找到最佳的并发数；</p><p>压测结束， 登陆相应的 web 服务器查看 CPU 等性能指标， 进行数据的分析;</p><p>最大的 tps， 不断的增加并发数， 加到 tps 达到一定值开始出现下降， 那么那个值就是<br>最大的 tps。</p><p>最大的并发数： 最大的并发数和最大的 tps 是不同的概率， 一般不断增加并发数， 达到一个值后， 服务器出现请求超时， 则可认为该值为最大的并发数。</p><p>压测过程出现性能瓶颈， 若压力机任务管理器查看到的 cpu、 网络和 cpu 都正常， 未达 到 90%以上， 则可以说明服务器有问题， 压力机没有问题。</p><p>影响性能考虑点包括：数据库、 应用程序、 中间件（tomact、 Nginx） 、 网络和操作系统等方面</p><p>首先考虑自己的应用属于 CPU 密集型还是 IO 密集型</p><h3 id="3-性能监控"><a href="#3-性能监控" class="headerlink" title="3.性能监控"></a>3.性能监控</h3><p><strong>3.1 jvm内存模型</strong></p><p><img src="f0b617038f2eb5c1c6d7db6b939b60c3.png" alt="img"></p><p>程序计数器 Program Counter Register：<br>    记录的是正在执行的虚拟机字节码指令的地址，<br>    此内存区域是唯一一个在JAVA虚拟机规范中没有规定任何OutOfMemoryError的区域<br>虚拟机： VM Stack<br>    描述的是 JAVA 方法执行的内存模型， 每个方法在执行的时候都会创建一个栈帧，用于存储局部变量表， 操作数栈， 动态链接， 方法接口等信息<br>     局部变量表存储了编译期可知的各种基本数据类型、 对象引用<br>     线程请求的栈深度不够会报 StackOverflowError 异常<br>     栈动态扩展的容量不够会报 OutOfMemoryError 异常<br>     虚拟机栈是线程隔离的， 即每个线程都有自己独立的虚拟机栈<br>本地方法： Native Stack<br>    本地方法栈类似于虚拟机栈， 只不过本地方法栈使用的是本地方法<br>堆： Heap<br>    几乎所有的对象实例都在堆上分配内存</p><p>详细模型</p><p><img src="3b1b353261f64753d01b771b9887d321.png" alt="img"><br><strong>3.2 堆</strong></p><p>所有的对象实例以及数组都要在堆上分配。 堆是垃圾收集器管理的主要区域， 也被称为“GC堆” ； 也是我们优化最多考虑的地方。<br>堆可以细分为：</p><p>新生代</p><pre><code>Eden 空间From Survivor 空间To Survivor 空间</code></pre><p>老年代</p><pre><code>永久代/元空间Java8 以前永久代， 受 jvm 管理， java8 以后元空间， 直接使用物理内存。 因此，默认情况下， 元空间的大小仅受本地内存限制。</code></pre><p><strong>3.2.1垃圾回收</strong></p><p><img src="25bf38b26b1dbdb881850add1f2b0101.png" alt="img"></p><p><img src="5eb8df2aab3549893b839da74c97b4ae.png" alt="img"></p><p>详细流程</p><p><img src="eda4b37c49fe94adc76f3560d425dd84.png" alt="img"></p><p>创建对象放到堆内存的流程：<br>1、放到eden区，如果放不下执行MinorGC<br>2、再判断是否放得下不，放判断老年代是否放得下，放不下执行 FullGC，【FullGC会先触发MinorGC】<br>3、如果老年代放不下OOM</p><p>旧对象：<br>1、放到幸存者区survivor，如果放得下放在to区【然后from 和 to转变身份】【超过阈值15放到老年代】<br>2、如果survivor放不下判断老年代是否放得下，放不下执行FullGC<br>3、如果老年代放不下OOM异常</p><p><strong>3.3 jconsole 与 jvisualvm(推荐)</strong><br><strong>3.3.1 jconsole</strong></p><p>Jdk 的两个小工具 jconsole、 jvisualvm（升级版的 jconsole） ;通过命令行启动， 可监控本地和远程应用。 远程应用需要配置</p><p><strong>1）直接cmd输入jconsole</strong></p><p>进入jconsole页面选择需要查看的进程<br><img src="image-20240421214025386.png" alt="image-20240421214025386"></p><p><strong>3.3.2jvisualvm</strong></p><p>cmd输入jvisualvm</p><p><img src="image-20240421214137380.png" alt="image-20240421214137380"></p><p>线程的状态</p><p><img src="image-20240421214240228.png" alt="image-20240421214240228"></p><ul><li>运行： 正在运行的</li><li>休眠： sleep</li><li>等待： wait</li><li>驻留： 线程池里面的空闲线程</li><li>监视： 阻塞的线程， 正在等待锁</li></ul><p> <strong>1）Visual GC插件安装</strong></p><ol><li>cmd 启动jvisualvm</li><li>安装 Visual GC</li></ol><p><img src="image-20240421214756099.png" alt="image-20240421214756099"></p><p><img src="image-20240421214853075.png" alt="image-20240421214853075"></p><p>选择Visyal Gc下载，下完后重启一下</p><p><strong>2）.插件安装失败问题</strong></p><p>原因：</p><p>可能是因为更新链接配置的版本不对<br>自己有代理的话一定要关闭</p><p><img src="image-20240421215212889.png" alt="image-20240421215212889"></p><p>查看自己jdk版本</p><p>181版本</p><p><img src="image-20240421215240855.png" alt="image-20240421215240855"></p><p>打开网址 <a href="https://visualvm.github.io/pluginscenters.html">https://visualvm.github.io/pluginscenters.html</a></p><p>找到对应的版本复制链接</p><p><img src="image-20240421215400144.png" alt="image-20240421215400144"></p><p><a href="https://visualvm.github.io/uc/8u131/updates.xml.gz">https://visualvm.github.io/uc/8u131/updates.xml.gz</a></p><p>修改配置的链接</p><p><img src="image-20240421215606210.png" alt="image-20240421215606210"></p><p>我的一直连接超时，就直接在官网下载到本地了D:\tool\apache\Visual Gc plugins</p><p><img src="image-20240421220719667.png" alt="image-20240421220719667"></p><h3 id="4-监控指标"><a href="#4-监控指标" class="headerlink" title="4.监控指标"></a>4.监控指标</h3><p><strong>1、中间件指标</strong></p><p>当前正在运行的线程数不能超过设定的最大值。一般情况下系统性能较好的情况下，线</p><p>程数最小值设置 50 和最大值设置 200 比较合适。</p><p>当前运行的 JDBC 连接数不能超过设定的最大值。一般情况下系统性能较好的情况下，</p><p>JDBC 最小值设置 50 和最大值设置 200 比较合适。</p><p>ＧＣ频率不能频繁，特别是 FULL GC 更不能频繁，一般情况下系统性能较好的情况下，</p><p>JVM 最小堆大小和最大堆大小分别设置 1024M 比较合适。</p><p><strong>2、数据库指标</strong></p><p>SQL 耗时越小越好，一般情况下微秒级别。</p><p>命中率越高越好，一般情况下不能低于 95%。</p><p>锁等待次数越低越好，等待时间越短越好。</p><h3 id="5-nginx动静分离"><a href="#5-nginx动静分离" class="headerlink" title="5.nginx动静分离"></a>5.nginx动静分离</h3><p>将静态的页面，css，js等放到nginx中，并在nginx中设置路径，实现动静分离。</p><p>每次访问主页时静态的页面由Nginx提供，而数据由本地服务提供。</p><p><img src="image-20240422205141127.png" alt="image-20240422205141127"></p><p><strong>1.放入nginx html文件夹的static文件夹里面</strong></p><p><strong>2.替换静态页面的资源路径</strong></p><p><img src="image-20240422205644315.png" alt="image-20240422205644315"></p><p><strong>3.修改nginx配置文件</strong></p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">location</span> <span class="string">/static/</span> &#123;</span><br><span class="line"><span class="string">root</span> <span class="string">/usr/share/nginx/html;</span></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="string">//所有的请求带static访问静态资源，其余的代理到上游服务</span></span><br><span class="line"></span><br><span class="line">      <span class="string">location</span> <span class="string">/</span> &#123;</span><br><span class="line"><span class="string">proxy_set_header</span> <span class="string">Host</span> <span class="string">$host;</span></span><br><span class="line">          <span class="string">proxy_pass</span>  <span class="string">http://gulimall;</span></span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure><h2 id="四、缓存—-Redis"><a href="#四、缓存—-Redis" class="headerlink" title="四、缓存—-Redis"></a>四、缓存—-Redis</h2><p><img src="image-20240422213256536.png" alt="image-20240422213256536"></p><p><img src="image-20240422213326688.png" alt="image-20240422213326688"></p><p>每个线程都会有各自的缓存</p><p>解决：</p><p><img src="image-20240422213503282.png" alt="image-20240422213503282"></p><p><strong>哪些数据适合放入缓存？</strong></p><ul><li>即时性、数据一致性要求不高的</li><li>访问量大且更新频率不高的数据（读多，写少）</li></ul><h3 id="4-1Redis使用"><a href="#4-1Redis使用" class="headerlink" title="4.1Redis使用"></a>4.1Redis使用</h3><p><strong>1）引入依赖</strong></p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--引入redis--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>2）在配置文件中配置redis的ip地址和端口号（默认端口号是6379）</strong></p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">redis:</span></span><br><span class="line">  <span class="attr">host:</span> <span class="number">8.138</span><span class="number">.99</span><span class="number">.194</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">6379</span></span><br></pre></td></tr></table></figure><p><strong>3）Redis的自动配置类RedisAutoConfiguration已经为我们配置好了两种bean</strong></p><p><strong>RedisTemplate和StringRedisTemplate，直接注入使用</strong></p><h3 id="4-2使用Redis优化三级分类任务"><a href="#4-2使用Redis优化三级分类任务" class="headerlink" title="4.2使用Redis优化三级分类任务"></a>4.2使用Redis优化三级分类任务</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> Map&lt;String, List&lt;Catelog2Vo&gt;&gt; <span class="title function_">getCatelogJson</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="comment">//为什么用json</span></span><br><span class="line">    <span class="comment">//json具有跨语言，跨平台兼容</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">catalogJSON</span> <span class="operator">=</span> stringRedisTemplate.opsForValue().get(<span class="string">&quot;catalogJSON&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (StringUtils.isEmpty(catalogJSON))&#123;</span><br><span class="line">        <span class="comment">//缓存未命中</span></span><br><span class="line">        Map&lt;String, List&lt;Catelog2Vo&gt;&gt; catelogJsonFromDb = getCatelogJsonFromDb();</span><br><span class="line">        <span class="comment">//放入缓存</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">jsonString</span> <span class="operator">=</span> JSON.toJSONString(catelogJsonFromDb);</span><br><span class="line">        stringRedisTemplate.opsForValue().set(<span class="string">&quot;catalogJSON&quot;</span>,jsonString);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//逆转</span></span><br><span class="line">    Map&lt;String, List&lt;Catelog2Vo&gt;&gt; result = JSON.parseObject(catalogJSON, <span class="keyword">new</span> <span class="title class_">TypeReference</span>&lt;Map&lt;String, List&lt;Catelog2Vo&gt;&gt;&gt;() &#123;</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//从数据库查询</span></span><br><span class="line"><span class="keyword">public</span> Map&lt;String, List&lt;Catelog2Vo&gt;&gt; <span class="title function_">getCatelogJsonFromDb</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">//见前面</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>1.成功保存到redis</strong></p><p><img src="image-20240422221244101.png" alt="image-20240422221244101"></p><p><strong>2.压测</strong></p><p><strong>1.结果吞吐量59</strong></p><p><img src="image-20240422221613991.png" alt="image-20240422221613991"></p><p>吞吐量提升了，不知道为什么我的吞吐量比雷神差那么多，可能是因为阿里云服务器部署的redis吧。</p><p><strong>2.压测出的内存泄露和解决</strong></p><p><img src="8b119afbcd574bd28a49d2bfbdd4edfd.png" alt="img"></p><p>但是好像我没有出现这个。</p><h3 id="4-3-高并发下缓存失效问题"><a href="#4-3-高并发下缓存失效问题" class="headerlink" title="4.3 高并发下缓存失效问题"></a>4.3 高并发下缓存失效问题</h3><p><strong>(1) 缓存穿透</strong></p><p>缓存穿透最直白的意思就是，我们的业务系统在接收到请求时在缓存中并没有查到数据，从而穿透到了后端数据库里面查数据的过程。或是指外来大量访问去查询缓存中不存在的值，最终导致需要不断的去查数据库，使数据库压力变大，最终导致程序异常。</p><pre><code>缓存穿透是指查询一个一定不存在的数据，由于缓存是不命中，将去查询数据库，但是数据库也无此记录，我们没有将这次查询的 null 写入缓存，这将导致这个不存在的数据每次 请求都要到存储层去查询，失去了缓存的意义。在流量大时，可能 DB 就挂掉了，要是有人利用不存在的 key 频繁攻击我们的应用，这就是漏洞。</code></pre><p>解决：</p><p>缓存空对象、并且设置短的过期时间，布隆过滤。<br><strong>(2) 缓存雪崩</strong></p><p>简要来讲是指缓存中的key大面积失效，同时有大量的请求过来获取数据，去查看缓存，但是缓存中的数据已经失效，就回去访问数据库，最终导致数据库压力变大。</p><pre><code>缓存雪崩是指在我们设置缓存时采用了相同的过期时间，导致缓存在某一时刻同时失 效，请求全部转发到 DB，DB 瞬时压力过重雪崩。</code></pre><p>解决：</p><p>原有的失效时间基础上增加一个随机值，比如 1-5 分钟随机，这样每一个缓存的过期时间的 重复率就会降低，就很难引发集体失效的事件等等。<br><strong>(3) 缓存击穿</strong></p><p>缓存击穿是指缓存中没有但数据库中有的数据，当一个key非常热点（类似于爆款），在不停的扛着大并发，大并发集中对这一个点进行访问；当这个key在失效的瞬间，持续的大并发就穿破缓存，直接请求数据库，就像在一个屏障上凿开了一个洞。</p><pre><code>对于一些设置了过期时间的 key，如果这些 key 可能会在某些时间点被超高并发地访问， 是一种非常“热点”的数据。这个时候，需要考虑一个问题：如果这个 key 在大量请求同时进来前正好失效，那么所 有对这个 key 的数据查询都落到 db，我们称为缓存击穿</code></pre><p>解决:</p><p><strong>加互斥锁</strong></p><p>1.使用本地锁(sychronized)</p><p>当大量请求全都访问这个数据时，发现缓存中没有，就会访问数据库进行查询，将访问数据库操作的方法使用sychronized加锁，那么这些请求就会排队访问。第一个请求执行完同步操作后会释放锁， 在释放锁之前会将查询到的数据存入缓存中，其他请求进入同步操作会先判断缓存中是否有相应的数据，就避免了多次查库的问题。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"> <span class="keyword">public</span> Map&lt;String, List&lt;Catelog2Vo&gt;&gt; <span class="title function_">getCatelogJson</span><span class="params">()</span>&#123;</span><br><span class="line">     <span class="type">String</span> <span class="variable">catalogJSON</span> <span class="operator">=</span> stringRedisTemplate.opsForValue().get(<span class="string">&quot;catalogJSON&quot;</span>);</span><br><span class="line">     <span class="keyword">if</span> (StringUtils.isEmpty(catalogJSON))&#123;</span><br><span class="line">         <span class="comment">//缓存未命中</span></span><br><span class="line">         System.out.println(<span class="string">&quot;缓存未命中，查询数据库......&quot;</span>);</span><br><span class="line">         Map&lt;String, List&lt;Catelog2Vo&gt;&gt; catelogJsonFromDb = getCatelogJsonFromDb();</span><br><span class="line">     &#125;</span><br><span class="line">     System.out.println(<span class="string">&quot;缓存命中直接返回......&quot;</span>);</span><br><span class="line">     <span class="comment">//逆转</span></span><br><span class="line">     Map&lt;String, List&lt;Catelog2Vo&gt;&gt; result = JSON.parseObject(catalogJSON, <span class="keyword">new</span> <span class="title class_">TypeReference</span>&lt;Map&lt;String, List&lt;Catelog2Vo&gt;&gt;&gt;() &#123;</span><br><span class="line">     &#125;);</span><br><span class="line">     <span class="keyword">return</span> result;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="comment">//从数据库查询</span></span><br><span class="line"> <span class="keyword">public</span> Map&lt;String, List&lt;Catelog2Vo&gt;&gt; <span class="title function_">getCatelogJsonFromDb</span><span class="params">()</span> &#123;</span><br><span class="line">     <span class="keyword">synchronized</span> (<span class="built_in">this</span>)&#123;</span><br><span class="line">         <span class="type">String</span> <span class="variable">catalogJSON</span> <span class="operator">=</span> stringRedisTemplate.opsForValue().get(<span class="string">&quot;catalogJSON&quot;</span>);</span><br><span class="line">         <span class="keyword">if</span> (!StringUtils.isEmpty(catalogJSON))&#123;</span><br><span class="line">             Map&lt;String, List&lt;Catelog2Vo&gt;&gt; result = JSON.parseObject(catalogJSON, <span class="keyword">new</span> <span class="title class_">TypeReference</span>&lt;Map&lt;String, List&lt;Catelog2Vo&gt;&gt;&gt;() &#123;</span><br><span class="line">             &#125;);</span><br><span class="line">             <span class="keyword">return</span> result;</span><br><span class="line">         &#125;</span><br><span class="line">         System.out.println(<span class="string">&quot;查询数据库&quot;</span>);</span><br><span class="line">         <span class="comment">//数据库多次查询变为1次</span></span><br><span class="line">         List&lt;CategoryEntity&gt; selectList = baseMapper.selectList(<span class="literal">null</span>);</span><br><span class="line">         <span class="comment">//查询一级分类</span></span><br><span class="line">         List&lt;CategoryEntity&gt; level1Category = getParent_cid(selectList,<span class="number">0L</span>);</span><br><span class="line">         Map&lt;String, List&lt;Catelog2Vo&gt;&gt; parent_cid = level1Category.stream().collect(Collectors.toMap(k -&gt; k.getCatId().toString(), v -&gt; &#123;</span><br><span class="line">             <span class="comment">//查询一级分类的二级分类</span></span><br><span class="line">             List&lt;CategoryEntity&gt; categoryEntities = getParent_cid(selectList,v.getCatId());</span><br><span class="line">             List&lt;Catelog2Vo&gt; catelog2Vos = <span class="literal">null</span>;</span><br><span class="line">             <span class="keyword">if</span> (categoryEntities != <span class="literal">null</span>) &#123;</span><br><span class="line">                 catelog2Vos = categoryEntities.stream().map(l2 -&gt; &#123;</span><br><span class="line">                     <span class="type">Catelog2Vo</span> <span class="variable">catelog2Vo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Catelog2Vo</span>(v.getCatId().toString(), <span class="literal">null</span>, l2.getCatId().toString(), l2.getName());</span><br><span class="line">                     <span class="comment">//着耳机分类的三级分类</span></span><br><span class="line">                     List&lt;CategoryEntity&gt; level3Catelog = getParent_cid(selectList,l2.getCatId());</span><br><span class="line">                     <span class="keyword">if</span> (level3Catelog != <span class="literal">null</span>)&#123;</span><br><span class="line">                         List&lt;Catelog2Vo.Catelog3Vo&gt; collect = level3Catelog.stream().map(l3 -&gt; &#123;</span><br><span class="line">                             Catelog2Vo.<span class="type">Catelog3Vo</span> <span class="variable">catelog3Vo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Catelog2Vo</span>.Catelog3Vo(l3.getCatId().toString(),l3.getCatId().toString(),l3.getName());</span><br><span class="line">                             <span class="keyword">return</span> catelog3Vo;</span><br><span class="line">                         &#125;).collect(Collectors.toList());</span><br><span class="line">                         catelog2Vo.setCatalog3List(collect);</span><br><span class="line">                     &#125;</span><br><span class="line">                     <span class="keyword">return</span> catelog2Vo;</span><br><span class="line">                 &#125;).collect(Collectors.toList());</span><br><span class="line">             &#125;</span><br><span class="line">             <span class="keyword">return</span> catelog2Vos;</span><br><span class="line">         &#125;));</span><br><span class="line">         <span class="comment">//放入缓存</span></span><br><span class="line">         <span class="type">String</span> <span class="variable">jsonString</span> <span class="operator">=</span> JSON.toJSONString(parent_cid);</span><br><span class="line">         stringRedisTemplate.opsForValue().set(<span class="string">&quot;catalogJSON&quot;</span>,jsonString);</span><br><span class="line">         <span class="keyword">return</span> parent_cid;</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>但是使用本地锁的方式在分布式的情景下就会出现问题：每一个服务都是锁住了当前进程，无法锁住其他进程。</p><p><img src="1502bd1c76094a68bed9cdca554279cd.png" alt="img"></p><h3 id="4-4分布式锁"><a href="#4-4分布式锁" class="headerlink" title="4.4分布式锁"></a>4.4分布式锁</h3><h4 id="4-4-1-setnxex"><a href="#4-4-1-setnxex" class="headerlink" title="4.4.1 setnxex"></a>4.4.1 setnxex</h4><p>原理是使用redis中的setnx命令，根据官方文档 :</p><p>Redis Setnx（ SET if Not eXists ）命令在指定的 key 不存在时，为 key 设置指定的值，这种情况下等同 SET 命令。当 key存在时，什么也不做。</p><p>返回值</p><p>整数:</p><p>1 如果key被设置了<br>0 如果key没有被设置</p><p>而在Java中对应方法是:</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> Boolean <span class="title function_">setIfAbsent</span><span class="params">(K key, V value)</span> &#123;</span><br><span class="line">        <span class="type">byte</span>[] rawKey = <span class="built_in">this</span>.rawKey(key);</span><br><span class="line">        <span class="type">byte</span>[] rawValue = <span class="built_in">this</span>.rawValue(value);</span><br><span class="line">        <span class="keyword">return</span> (Boolean)<span class="built_in">this</span>.execute((connection) -&gt; &#123;</span><br><span class="line">            <span class="keyword">return</span> connection.setNX(rawKey, rawValue);</span><br><span class="line">        &#125;, <span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">// 此方法可以设置key的过期时间以及时间类型</span></span><br><span class="line"><span class="keyword">public</span> Boolean <span class="title function_">setIfAbsent</span><span class="params">(K key, V value, <span class="type">long</span> timeout, TimeUnit unit)</span> &#123;</span><br><span class="line">        <span class="type">byte</span>[] rawKey = <span class="built_in">this</span>.rawKey(key);</span><br><span class="line">        <span class="type">byte</span>[] rawValue = <span class="built_in">this</span>.rawValue(value);</span><br><span class="line">        <span class="type">Expiration</span> <span class="variable">expiration</span> <span class="operator">=</span> Expiration.from(timeout, unit);</span><br><span class="line">        <span class="keyword">return</span> (Boolean)<span class="built_in">this</span>.execute((connection) -&gt; &#123;</span><br><span class="line">            <span class="keyword">return</span> connection.set(rawKey, rawValue, expiration, SetOption.ifAbsent());</span><br><span class="line">        &#125;, <span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><img src="f14673c8683c4bf194a1f7212a2c541a.png" alt="img"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> Map&lt;String, List&lt;Catelog2Vo&gt;&gt; <span class="title function_">getCatelogJson</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">catalogJSON</span> <span class="operator">=</span> stringRedisTemplate.opsForValue().get(<span class="string">&quot;catalogJSON&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (StringUtils.isEmpty(catalogJSON))&#123;</span><br><span class="line">        <span class="comment">//缓存未命中</span></span><br><span class="line">        System.out.println(<span class="string">&quot;缓存未命中，将要查询数据库...&quot;</span>);</span><br><span class="line">        Map&lt;String, List&lt;Catelog2Vo&gt;&gt; catelogJsonFromDb = getCatelogJsonFromDbWithRedisLock();</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println(<span class="string">&quot;缓存命中直接返回......&quot;</span>);</span><br><span class="line">    <span class="comment">//逆转</span></span><br><span class="line">    Map&lt;String, List&lt;Catelog2Vo&gt;&gt; result = JSON.parseObject(catalogJSON, <span class="keyword">new</span> <span class="title class_">TypeReference</span>&lt;Map&lt;String, List&lt;Catelog2Vo&gt;&gt;&gt;() &#123;</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> Map&lt;String, List&lt;Catelog2Vo&gt;&gt; <span class="title function_">getCatelogJsonFromDbWithRedisLock</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">uuid</span> <span class="operator">=</span> UUID.randomUUID().toString();</span><br><span class="line">    <span class="comment">//1.redis锁,设置过期时间，这要确保设置过期时间和加锁的原子性</span></span><br><span class="line">    <span class="type">Boolean</span> <span class="variable">lock</span> <span class="operator">=</span> stringRedisTemplate.opsForValue().setIfAbsent(<span class="string">&quot;catelog-lock&quot;</span>, uuid,<span class="number">300</span>, TimeUnit.SECONDS);</span><br><span class="line">    <span class="keyword">if</span> (lock)&#123;</span><br><span class="line">            <span class="comment">//枷锁成功</span></span><br><span class="line">            Map&lt;String, List&lt;Catelog2Vo&gt;&gt; dataFromDb;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                dataFromDb = getDataFromDb();</span><br><span class="line">            &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">                <span class="comment">//删除自己的锁-----&gt;必须也是原子操作，因为可能线程1在发送获取锁时9.5s传到redis0.3s此时没过期，</span></span><br><span class="line">                <span class="comment">// redis返回相同数据，但是10s后过期时刚好有个线程2向redis放入数据，那么线程1就会误删了线程2的锁</span></span><br><span class="line">                <span class="comment">// if (uuid.equals(stringRedisTemplate.opsForValue().get(&quot;catelog-lock&quot;)))&#123;</span></span><br><span class="line">                <span class="comment">//     stringRedisTemplate.delete(&quot;catelog-lock&quot;);</span></span><br><span class="line">                <span class="comment">// &#125;</span></span><br><span class="line">                <span class="type">String</span> <span class="variable">script</span> <span class="operator">=</span> <span class="string">&quot;if redis.call(&#x27;get&#x27;, KEYS[1]) == ARGV[1] then return  redis.call(&#x27;del&#x27;, KEYS[1]) else return 0 end&quot;</span>;</span><br><span class="line">                stringRedisTemplate.execute(<span class="keyword">new</span> <span class="title class_">DefaultRedisScript</span>&lt;Integer&gt;(script,Integer.class),Arrays.asList(<span class="string">&quot;catelog-lock&quot;</span>),uuid);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> dataFromDb;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//加锁失败，100ms重试---&gt;自旋方式</span></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Thread.sleep(<span class="number">100</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> getCatelogJsonFromDbWithRedissonLock();</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> Map&lt;String, List&lt;Catelog2Vo&gt;&gt; <span class="title function_">getDataFromDb</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">catalogJSON</span> <span class="operator">=</span> stringRedisTemplate.opsForValue().get(<span class="string">&quot;catalogJSON&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (!StringUtils.isEmpty(catalogJSON))&#123;</span><br><span class="line">        Map&lt;String, List&lt;Catelog2Vo&gt;&gt; result = JSON.parseObject(catalogJSON, <span class="keyword">new</span> <span class="title class_">TypeReference</span>&lt;Map&lt;String, List&lt;Catelog2Vo&gt;&gt;&gt;() &#123;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println(<span class="string">&quot;查询数据库&quot;</span>);</span><br><span class="line">    <span class="comment">//数据库多次查询变为1次</span></span><br><span class="line">    List&lt;CategoryEntity&gt; selectList = baseMapper.selectList(<span class="literal">null</span>);</span><br><span class="line">    <span class="comment">//查询一级分类</span></span><br><span class="line">    List&lt;CategoryEntity&gt; level1Category = getParent_cid(selectList,<span class="number">0L</span>);</span><br><span class="line">    Map&lt;String, List&lt;Catelog2Vo&gt;&gt; parent_cid = level1Category.stream().collect(Collectors.toMap(k -&gt; k.getCatId().toString(), v -&gt; &#123;</span><br><span class="line">        <span class="comment">//查询一级分类的二级分类</span></span><br><span class="line">        List&lt;CategoryEntity&gt; categoryEntities = getParent_cid(selectList,v.getCatId());</span><br><span class="line">        List&lt;Catelog2Vo&gt; catelog2Vos = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">if</span> (categoryEntities != <span class="literal">null</span>) &#123;</span><br><span class="line">            catelog2Vos = categoryEntities.stream().map(l2 -&gt; &#123;</span><br><span class="line">                <span class="type">Catelog2Vo</span> <span class="variable">catelog2Vo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Catelog2Vo</span>(v.getCatId().toString(), <span class="literal">null</span>, l2.getCatId().toString(), l2.getName());</span><br><span class="line">                <span class="comment">//着耳机分类的三级分类</span></span><br><span class="line">                List&lt;CategoryEntity&gt; level3Catelog = getParent_cid(selectList,l2.getCatId());</span><br><span class="line">                <span class="keyword">if</span> (level3Catelog != <span class="literal">null</span>)&#123;</span><br><span class="line">                    List&lt;Catelog2Vo.Catelog3Vo&gt; collect = level3Catelog.stream().map(l3 -&gt; &#123;</span><br><span class="line">                        Catelog2Vo.<span class="type">Catelog3Vo</span> <span class="variable">catelog3Vo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Catelog2Vo</span>.Catelog3Vo(l3.getCatId().toString(),l3.getCatId().toString(),l3.getName());</span><br><span class="line">                        <span class="keyword">return</span> catelog3Vo;</span><br><span class="line">                    &#125;).collect(Collectors.toList());</span><br><span class="line">                    catelog2Vo.setCatalog3List(collect);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> catelog2Vo;</span><br><span class="line">            &#125;).collect(Collectors.toList());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> catelog2Vos;</span><br><span class="line">    &#125;));</span><br><span class="line">    <span class="comment">//放入缓存</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">jsonString</span> <span class="operator">=</span> JSON.toJSONString(parent_cid);</span><br><span class="line">    stringRedisTemplate.opsForValue().set(<span class="string">&quot;catalogJSON&quot;</span>,jsonString);</span><br><span class="line">    <span class="keyword">return</span> parent_cid;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>但是以上方案还有缺点，就是锁的自动续期功能没有实现，加入我设置锁的时间小于业务代码执行时间，就会出现在多线程同时获取到锁的情况。</p><h4 id="4-3-2-Redisson"><a href="#4-3-2-Redisson" class="headerlink" title="4.3.2 Redisson"></a>4.3.2 Redisson</h4><p><strong>(1) Redisson使用</strong></p><p>1)Redisson相对于Jedis来讲，是一个功能更加强大的Redis客户端。</p><p>2)使用Redisson进行加锁的操作与JUC包下的API相近，使用也可以参考JUC相关文档。<br><strong>① 引入依赖</strong></p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--使用 redssion 作为分布式锁--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.redisson<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>redisson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.12.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>② 编写Redssion配置类</strong></p><p>更多详情参考官方文档</p><p><a href="https://github.com/redisson/redisson/wiki/14.-Integration-with-frameworks">https://github.com/redisson/redisson/wiki/14.-Integration-with-frameworks</a></p><p>编写配置类</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyRedissonConfig</span> &#123;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 所有对Redisson的使用都是通过RedissonClient对象</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">    <span class="meta">@Bean(destroyMethod=&quot;shutdown&quot;)</span><span class="comment">//配置指定方式销毁</span></span><br><span class="line">    RedissonClient <span class="title function_">redisson</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">Config</span> <span class="variable">config</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Config</span>();</span><br><span class="line">        <span class="comment">//使用单节点模式</span></span><br><span class="line">        config.useSingleServer().setAddress(<span class="string">&quot;redis://8.138.99.194:6379&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> Redisson.create(config);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>③ Redisson-lock锁测试</strong></p><p>在配置了RedissonClient 就可以操作RedissonClient的实例进行各种加锁操作。</p><p>1）测试(看门狗原理)</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"> <span class="meta">@ResponseBody</span></span><br><span class="line"> <span class="meta">@GetMapping(&quot;/hello&quot;)</span></span><br><span class="line"> <span class="keyword">public</span> String <span class="title function_">hello</span><span class="params">()</span>&#123;</span><br><span class="line">     <span class="comment">//1.获取一把锁，只要锁的名字一样，就是同一把锁</span></span><br><span class="line">     <span class="type">RLock</span> <span class="variable">lock</span> <span class="operator">=</span> redissonClient.getLock(<span class="string">&quot;my-lock&quot;</span>);</span><br><span class="line">     <span class="comment">//2.加锁</span></span><br><span class="line">     <span class="comment">//此方法不指定过期时间</span></span><br><span class="line">     lock.lock();<span class="comment">//阻塞式等待，前一个线程不执行完，所锁就不会释放</span></span><br><span class="line">     <span class="comment">//1）锁的自动续期 测试发现如果某一个业务超长，运行期间会自动给锁续上30s，不用担心业务时间长锁因为过期被删掉的问题</span></span><br><span class="line">     <span class="comment">//2）加锁的业务只要运行完成，就不会给锁续期，即使不手动解锁，锁也会在30s后自动删除，所以在测试中将第一个请求获取锁之后没有解锁就将服务关闭，第二个线程依然可以获取锁</span></span><br><span class="line">     <span class="comment">//**********************************************************************************</span></span><br><span class="line">         <span class="comment">//lock.lock(10,TimeUnit.SECONDS);指定锁的超时时间</span></span><br><span class="line">         <span class="comment">//问题:Lock.lock(1,fimeUnit.SECONDS);在锁时间到了以后，不会自动续期。</span></span><br><span class="line">        <span class="comment">//1、如果我们传递了锁的超时时间，就发送给redis执行脚本，进行占锁，默认超时就是我们指定的时间</span></span><br><span class="line">       <span class="comment">//2、如果我们未指定锁的超时时间，就使用30 * 100【LockWatchdogTimeout看门狗的默认时间】;</span></span><br><span class="line"><span class="comment">//只要占锁成功，就会启动一个定时任务【重新给锁设置过期时间，新的过期时间就是看门狗的默认时间】,每隔10s都会自</span></span><br><span class="line"><span class="comment">//internalLockLeaseTime【看门狗时间】/ 3,10s</span></span><br><span class="line"><span class="comment">//最佳实战</span></span><br><span class="line"><span class="comment">// lock.Lock(30, TimeUnit.SECONDS）;省掉了整个续期操作,指定过期时间尽量比业务时间长 </span></span><br><span class="line"><span class="comment">//**********************************************************************************</span></span><br><span class="line">         <span class="keyword">try</span> &#123;</span><br><span class="line">             System.out.println(<span class="string">&quot;加锁成功 执行业务&quot;</span>+Thread.currentThread().getId());</span><br><span class="line">             Thread.sleep(<span class="number">5000</span>);</span><br><span class="line">         &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">         &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">             <span class="comment">//3.解锁</span></span><br><span class="line">             System.out.println(<span class="string">&quot;释放锁&quot;</span>+Thread.currentThread().getId());</span><br><span class="line">             lock.unlock();</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="keyword">return</span> <span class="string">&quot;hello&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>④ 读锁和写锁</strong></p><p>为了保证一定能读取到数据，修改期间，写锁是一个排它锁(互斥锁、独享锁)，而读锁是一个共享锁。</p><p>写锁没有释放就必须等待<br>读写操作效果说明<br>读 + 读相当于无锁，并发读，只会在Redis中记录好，所有当前的读锁，他们都或同时加锁成功。<br>写 + 读等待写锁释放<br>写 + 写阻塞方式<br>读 + 写读操作先上锁，写操作也要等待</p><p>总结：只要有写的存在，都需要等待。</p><p>测试代码:</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/write&quot;)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">writeValue</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">RReadWriteLock</span> <span class="variable">readWriteLock</span> <span class="operator">=</span> redissonClient.getReadWriteLock(<span class="string">&quot;rw-lock&quot;</span>);</span><br><span class="line">        <span class="type">RLock</span> <span class="variable">writeLock</span> <span class="operator">=</span> readWriteLock.writeLock();</span><br><span class="line">        <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            writeLock.lock();</span><br><span class="line">            System.out.println(<span class="string">&quot;写锁加锁成功...&quot;</span>+Thread.currentThread().getId());</span><br><span class="line">            s = UUID.randomUUID().toString();</span><br><span class="line">            Thread.sleep(<span class="number">30000</span>);</span><br><span class="line">            redisTemplate.opsForValue().set(<span class="string">&quot;writeValue&quot;</span>,s);</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            writeLock.unlock();</span><br><span class="line">            System.out.println(<span class="string">&quot;写锁释放...&quot;</span>+Thread.currentThread().getId());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> s;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@GetMapping(&quot;/read&quot;)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">readValue</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">RReadWriteLock</span> <span class="variable">lock</span> <span class="operator">=</span> redissonClient.getReadWriteLock(<span class="string">&quot;rw-lock&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="type">RLock</span> <span class="variable">rLock</span> <span class="operator">=</span> lock.readLock();</span><br><span class="line">        rLock.lock();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;读锁加锁成功...&quot;</span> + Thread.currentThread().getName());</span><br><span class="line">            s = redisTemplate.opsForValue().get(<span class="string">&quot;writeValue&quot;</span>);</span><br><span class="line">            Thread.sleep(<span class="number">30000</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            rLock.unlock();</span><br><span class="line">            System.out.println(<span class="string">&quot;读锁释放...&quot;</span> + Thread.currentThread().getName());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> s;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="4-5-缓存数据一致性"><a href="#4-5-缓存数据一致性" class="headerlink" title="4.5 缓存数据一致性"></a>4.5 缓存数据一致性</h3><p>保证一致性模式<br><strong>1.双写模式</strong></p><p>先将数据写入数据库，然后再修改缓存。</p><p><img src="17db95f29dda48d489523183b716ac68.png" alt="img"><br><strong>2. 失效模式</strong></p><p>只要更新数据库数据，在更新完成后就删除缓存中的数据，使缓存失效。</p><p><img src="53fc354138e94d298372de8270a7e11b.png" alt="img"></p><p>但是两种都会产出数据不一致的问题，那么如果一个数据经常修改我们就可以判断是否要放入缓存中。</p><p><strong>缓存数据一致性 - 解决方案：</strong></p><p>无论是双写模式还是失效模式，都会导致缓存的不一致问题。即多个实例同时更新会出事。怎么办？<br>1、如果是用户纬度数据（订单数据、用户数据），这种并发几率非常小，不用考虑这个问题，缓存数据加 上过期时间，每隔一段时间触发读的主动更新即可<br>2、如果是菜单，商品介绍等基础数据，也可以去使用<strong>alibaba的canal</strong>订阅binlog的方式。cananl会记录数据库的更新，会将变动的信息记录到cananl中，然后对redis进行更新业务对于缓存的要求。</p><p><img src="image-20240425194720641.png" alt="image-20240425194720641"></p><p>3、缓存数据+过期时间也足够解决大部分<br>4、<strong>分布式读写锁</strong>：通过加锁保证并发读写，写写的时候按顺序排好队。读读无所谓。所以适合使用读写锁。（业务不关心 脏数据，允许临时脏数据可忽略）；<br>总结：<br>我们能放入缓存的数据本就不应该是实时性、一致性要求超高的。所以缓存数据的时候加上过期时间，保证每天拿到当前最新数据即可。<br>我们不应该过度设计，增加系统的复杂性<br>遇到实时性、一致性要求高的数据，就应该查数据库，即使慢点。</p><h3 id="4-6-SpringCache"><a href="#4-6-SpringCache" class="headerlink" title="4.6 SpringCache"></a>4.6 SpringCache</h3><p>官网：<a href="https://docs.spring.io/spring-framework/docs/5.2.25.RELEASE/spring-framework-reference/integration.html#cache">https://docs.spring.io/spring-framework/docs/5.2.25.RELEASE/spring-framework-reference/integration.html#cache</a></p><p>为了简化加读写锁操作，引入了SpringCache。</p><p><strong>4.6.1 简介</strong></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"> Spring 从 3.1 开始定义了 org.springframework.cache.Cache和 org.springframework.cache.CacheManager 接口来统一不同的缓存技术；并支持使用 JCache（JSR-107）注解简化我们开发；</span><br><span class="line"> Cache 接口为缓存的组件规范定义，包含缓存的各种操作集合；Cache 接 口 下 Spring 提 供 了 各 种 xxxCache 的 实 现 ； 如 RedisCache ， EhCacheCache , ConcurrentMapCache 等；</span><br><span class="line"> 每次调用需要缓存功能的方法时，Spring 会检查检查指定参数的指定的目标方法是否已经被调用过；如果有就直接从缓存中获取方法调用后的结果，如果没有就调用方法并缓存结果后返回给用户。下次调用直接从缓存中获取。</span><br><span class="line"> 使用 Spring 缓存抽象时我们需要关注以下两点；</span><br><span class="line"> 1、确定方法需要被缓存以及他们的缓存策略</span><br><span class="line"> 2、从缓存中读取之前缓存存储的数据</span><br></pre></td></tr></table></figure><p>注: jsr是Java Specification Requests的缩写，意思是Java 规范提案。</p><p><strong>4.6.2 基础概念</strong></p><p><img src="6899ee2867af49bdb957236384abe348.png" alt="img"><br><strong>4.6.3 引用和配置</strong></p><p><strong>（1）引入依赖:</strong></p><p>spring-boot-starter-cache、spring-boot-starter-data-redis</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-cache<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--引入redis--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--排除lettuce--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.lettuce<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lettuce-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>（2）写配置</strong></p><ul><li><p>自动配置了哪些</p><p>CacheAutoConfiguration会导入RedisCacheConfiguration<br> 自动配好了缓存管理器RedisCacheManager</p></li><li><p>配置使用redis作为缓存</p></li></ul><figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring.cache.type</span>=<span class="string">redis</span></span><br></pre></td></tr></table></figure><p><strong>4.6.4 注解</strong></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">@Cacheable触发缓存填充：触发将数据保存到缓存的操作</span><br><span class="line">@CacheEvict触发逐出缓存：触发将数据从缓存删除的操作</span><br><span class="line">@CachePut更新缓存，而不会影响方法的执行</span><br><span class="line">@Caching重新组合要在一个方法上应用的多个缓存操作（组合以上多个操作）</span><br><span class="line">@CacheConfig在类级别共享缓存相同配置</span><br></pre></td></tr></table></figure><p><strong>4.6.5 使用&amp;细节</strong></p><p><strong>（1）开启缓存功能 @EnableCaching</strong></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Cacheable(&#123;&quot;category&quot;&#125;)</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> List&lt;CategoryEntity&gt; <span class="title function_">getLevel1Categorys</span><span class="params">()</span> &#123;</span><br><span class="line">    List&lt;CategoryEntity&gt; categoryEntities = baseMapper.selectList(<span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;CategoryEntity&gt;().eq(<span class="string">&quot;parent_cid&quot;</span>, <span class="number">0</span>));</span><br><span class="line">    <span class="keyword">return</span> categoryEntities;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>1、每一个需要缓存的数据我们都要来指定要放到那个名字的缓存。value属性指定分区【缓存的分区（按照业务类型分）】</strong><br><strong>2、@Cacheable</strong><br>代表当前方法的结果需要缓存，如果缓存中有，方法不调用。<br>如果缓存中没有，会调用方法，左后将方法的结果放入缓存。<br><strong>3、默认行为</strong><br>1）如果缓存中有数据，方法不会被调用<br>2）key默认自动生成，缓存的名字：category::SimpleKey []<br>3）缓存的value值，默认使用jdk序列化机制，将序列化好的数据存到redis中（不是json的）<br>4）ttl(默认ttl时间):-1 永不过期</p><p><strong>4、自定义</strong></p><p> 1）指定生成的缓存使用的key：key属性的指定，接受一个SpEL表达式</p><p> 2）指定缓存中数据的存活时间：配置文件中修改ttl spring.cache.redis.time-to-live&#x3D;3600000</p><p> 3）将数据保存为json格式 —&gt;自定义缓存管理器</p><p>如果我们没有自己指定配置，就会使用默认的配置</p><p><strong>5、原理</strong></p><p>CacheAutoConfiguration<br>→ RedisCacheConfiguration<br>→ 自动配置了 RedisCacheManager<br>→ 初始化所有的缓存（按照配置文件中的名字）<br>→ 每个缓存决定使用什么配置<br>→ 如果 redisCacheConfiguration 有就用已有的，没有就使用默认配置<br>→ 想改缓存的配置，只需要给容器中放一个 RedisCacheConfiguration 即可<br>→ 就会应用到当前 RedisCacheManager 管理的所有缓存分区中</p><p>编写自定义配置类:</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@EnableConfigurationProperties(CacheProperties.class)</span><span class="comment">//开启加载preperties的功能</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableCaching</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyCacheConfig</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    RedisCacheConfiguration <span class="title function_">redisCacheConfiguration</span><span class="params">(CacheProperties cacheProperties)</span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">RedisCacheConfiguration</span> <span class="variable">config</span> <span class="operator">=</span> RedisCacheConfiguration.defaultCacheConfig();</span><br><span class="line">        <span class="comment">//键值序列化</span></span><br><span class="line">        config = config.serializeKeysWith(RedisSerializationContext.SerializationPair.fromSerializer(<span class="keyword">new</span> <span class="title class_">StringRedisSerializer</span>()));</span><br><span class="line">        config = config.serializeValuesWith(RedisSerializationContext.SerializationPair.fromSerializer(<span class="keyword">new</span> <span class="title class_">GenericFastJsonRedisSerializer</span>()));</span><br><span class="line"></span><br><span class="line">        CacheProperties.<span class="type">Redis</span> <span class="variable">redisProperties</span> <span class="operator">=</span> cacheProperties.getRedis();</span><br><span class="line">        <span class="comment">//将配配置文件的所有配置生效</span></span><br><span class="line">        <span class="keyword">if</span> (redisProperties.getTimeToLive() != <span class="literal">null</span>) &#123;</span><br><span class="line">            config = config.entryTtl(redisProperties.getTimeToLive());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (redisProperties.getKeyPrefix() != <span class="literal">null</span>) &#123;</span><br><span class="line">            config = config.prefixCacheNameWith(redisProperties.getKeyPrefix());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!redisProperties.isCacheNullValues()) &#123;</span><br><span class="line">            config = config.disableCachingNullValues();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!redisProperties.isUseKeyPrefix()) &#123;</span><br><span class="line">            config = config.disableKeyPrefix();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> config;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring.cache.type</span>=<span class="string">redis</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring.cache.redis.time-to-live</span>=<span class="string">3600000</span></span><br><span class="line"><span class="comment">#设置是否为空值, 防止缓存穿透</span></span><br><span class="line"><span class="attr">spring.cache.redis.cache-null-values</span>=<span class="string">true</span></span><br><span class="line"><span class="comment">#如果指定了前缀，就用我们指定的前缀，如果没有，就默认使用缓存的名字作为前缀</span></span><br><span class="line"><span class="comment">#spring.cache.redis.key-prefix=CACHE_</span></span><br><span class="line"><span class="comment">#是否使用前缀</span></span><br><span class="line"><span class="attr">spring.cache.redis.use-key-prefix</span>=<span class="string">true</span></span><br></pre></td></tr></table></figure><p><strong>（2）@CachePut（双写模式）</strong></p><p>可以用来解决缓存一致性中的双写模式，要求在更新完数据后返回最新的数据才可以使用，但一般更新操作返回值为void，所以一般来说用不到</p><p><strong>(3)@CacheEvict（失效模式）</strong></p><p>用来实现失效模式，在更新方法上添加这个注解，调用时就会删除掉指定的缓存。</p><p>&#x2F;&#x2F; 一定要记得加单引号</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="meta">@Transactional</span></span><br><span class="line"><span class="meta">@CacheEvict(value = &quot;category&quot;, key = &quot;&#x27;getLevel1Categories&#x27;&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updateCascade</span><span class="params">(CategoryEntity category)</span> ...</span><br></pre></td></tr></table></figure><p>根据业务逻辑，进入后台管理系统进行更新操作，需要先修改数据库然后删除缓存。</p><p><strong>（4）批量删除</strong></p><p>但是要删除的缓存涉及到redis中创建的category中的两个缓存: CACHE_getCatalogJson 和CACHE_getLevel1Categorys</p><p>删除方式一：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Caching(evict = &#123;</span></span><br><span class="line"><span class="meta">         @CacheEvict(value = &quot;category&quot;,key = &quot;&#x27;getLevel1Categorys&#x27;&quot;),</span></span><br><span class="line"><span class="meta">         @CacheEvict(value = &quot;category&quot;,key = &quot;&#x27;getCatalogJson&#x27;&quot;)</span></span><br><span class="line"><span class="meta"> &#125;)</span></span><br></pre></td></tr></table></figure><p> 删除方式二：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 这样会删除category分区下的所有key</span></span><br><span class="line"><span class="meta">@Caching(value = &quot;category&quot;, allEntries = true)</span></span><br></pre></td></tr></table></figure><p><strong>（5）实践</strong></p><p>存储同一类型的数据，都可以指定成同一个分区。分区名默认就是缓存的前缀。</p><p><strong>4.6.6 Spring-Cache的不足之处</strong><br>(1) 读模式</p><pre><code>缓存穿透：查询一个null数据。解决方案：缓存空数据 ----&gt; spring.cache.redis.cache-null-values=true缓存击穿：大量并发进来同时查询一个正好过期的数据。解决方案：加锁 ? 默认是无加锁的;使用sync = true来解决击穿问题缓存雪崩：大量的key同时过期。解决：加随机时间。加上过期时间</code></pre><p>(2) 写模式：（缓存与数据库一致）</p><pre><code>读写加锁。引入Canal,感知到MySQL的更新去更新Redis读多写多，直接去数据库查询就行</code></pre><p>4.5.7 总结</p><p>常规数据（读多写少，即时性，一致性要求不高的数据，完全可以使用Spring-Cache）：写模式(只要缓存的数据有过期时间就足够了)</p><p>特殊数据：特殊设计</p><p>原理：</p><p>CacheManager(RedisCacheManager) -&gt; Cache(RedisCache) -&gt; Cache负责缓存的读写</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>错误分析</title>
      <link href="/2024/04/15/%E9%94%99%E8%AF%AF%E5%88%86%E6%9E%90/"/>
      <url>/2024/04/15/%E9%94%99%E8%AF%AF%E5%88%86%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<h2 id="一、renren-fast"><a href="#一、renren-fast" class="headerlink" title="一、renren-fast"></a>一、renren-fast</h2><h3 id="1-解决maven报错-‘parent-relativePath‘-of-POM"><a href="#1-解决maven报错-‘parent-relativePath‘-of-POM" class="headerlink" title="1.解决maven报错 ‘parent.relativePath‘ of POM"></a>1.解决maven报错 ‘parent.relativePath‘ of POM</h3><p>错误分析<br> 子模块的parent写的不是父模块，而是继承了springboot</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.8.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br></pre></td></tr></table></figure><p> 解决我这里用的版本改为了2.1.8.RELEASE，还有最后那个https改为了http不然我的插件会报错：</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.8.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">relativePath</span>&gt;</span><span class="tag">&lt;/<span class="name">relativePath</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-java-找不到符号"><a href="#2-java-找不到符号" class="headerlink" title="2.java: 找不到符号"></a>2.java: 找不到符号</h3><p>  符号:   方法 allowedOriginPatterns(java.lang.String)<br>  位置: 类 org.springframework.web.servlet.config.annotation.CorsRegistration</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">将1.18.4改为<span class="tag">&lt;<span class="name">lombok.version</span>&gt;</span>1.18.20<span class="tag">&lt;/<span class="name">lombok.version</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">标红的.allowedOriginParrterns(<span class="string">&quot;*&quot;</span>)改为.allowedOrigins(<span class="string">&quot;*&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="3-Connection-timed-out-connect"><a href="#3-Connection-timed-out-connect" class="headerlink" title="3.Connection timed out: connect"></a>3.Connection timed out: connect</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">url:</span> <span class="string">jdbc:mysql://192.168.188.132/gulimall_admin?useUnicode=true&amp;characterEncoding=UTF-8&amp;serverTimezone=Asia/Shanghai</span></span><br></pre></td></tr></table></figure><p>改为</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">url:</span> <span class="string">jdbc:mysql://192.168.188.132:3306/gulimall_admin?useSSL=false&amp;serverTimezone=UTC</span></span><br></pre></td></tr></table></figure><h2 id="二、renren-fast-vue报错"><a href="#二、renren-fast-vue报错" class="headerlink" title="二、renren-fast-vue报错"></a>二、renren-fast-vue报错</h2><h3 id="1-npm-install报错"><a href="#1-npm-install报错" class="headerlink" title="1.npm install报错"></a>1.npm install报错</h3><p>​我用的node18版本修改renren-fast-vue项目里面package-lock.json和packge.json文件，node-sass版本改为”node-sass”: “^8.0.0”,否则版本node-sass版本和nodejs版本不兼容报错</p><p>package-lock.json</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="attr">&quot;node-sass&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">     <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;8.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">     <span class="attr">&quot;resolved&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://registry.npmjs.org/node-sass/-/node-sass-8.0.0.tgz&quot;</span><span class="punctuation">,</span></span><br></pre></td></tr></table></figure><p>package.json</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="attr">&quot;node-sass&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^8.0.0&quot;</span><span class="punctuation">,</span></span><br></pre></td></tr></table></figure><p>然后又有这个问题，好像要npm cache clean –force清除一下缓存然后就成功了</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm ERR! code EINTEGRITY</span><br><span class="line">npm ERR! sha512-QFHfrZl6lqRU3csypwviz2XLgGNOoWQbo2GOvtsfQqOfL4cy1BtWnhx/XUeAO9LT3ahBzSRXcEO6DdvAH9DzSg== integrity checksum failed when using sha512: wanted sha512-QFHfrZl6lqRU3csypwviz2XLgGNOoWQbo2GOvtsfQqOfL4cy1BtWnhx/XUeAO9LT3ahBzSRXcEO6DdvAH9DzSg== but got sha512-sjCuOlvGyCJS40R8BscF5vhVlQjNN069NtQ1gSxyK1u9iqvn6tf7O1R4GNowVZfiZUCRt5MmMs1xd+4V/7Yr0g==. (390148 bytes)</span><br><span class="line"></span><br><span class="line">npm ERR! A complete log of this run can be found in: D:\tool\nodejs\node_cache\_logs\2024-03-24T11_26_02_744Z-debug-0.log</span><br></pre></td></tr></table></figure><h3 id="2-npm-run-dev报错"><a href="#2-npm-run-dev报错" class="headerlink" title="2.npm run dev报错"></a>2.npm run dev报错</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"> ERROR  Failed to compile with 4 errors                                                    20:09:38</span><br><span class="line">These relative modules were not found:</span><br><span class="line"></span><br><span class="line">* ./modules/es7.weak-set.of in ./node_modules/core-js/shim.js </span><br><span class="line">* ./modules/web.dom.iterable in ./node_modules/core-js/shim.js</span><br><span class="line">* ./modules/web.immediate in ./node_modules/core-js/shim.js   </span><br><span class="line">* ./modules/web.timers in ./node_modules/core-js/shim.js  </span><br></pre></td></tr></table></figure><h3 id="3-以上我没解决换个node14版本成功了"><a href="#3-以上我没解决换个node14版本成功了" class="headerlink" title="3.以上我没解决换个node14版本成功了"></a>3.以上我没解决换个node14版本成功了</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">C:\Users\ASUS&gt;node --version</span><br><span class="line">v14.19.1</span><br><span class="line"></span><br><span class="line">C:\Users\ASUS&gt;npm --version</span><br><span class="line">6.14.16</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="三、renren-generator报错"><a href="#三、renren-generator报错" class="headerlink" title="三、renren-generator报错"></a>三、renren-generator报错</h2><h3 id="1-插件报错"><a href="#1-插件报错" class="headerlink" title="1.插件报错"></a>1.插件报错</h3><p>加了<relativePath></relativePath>这句话就不爆红了。</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.6.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">relativePath</span>&gt;</span><span class="tag">&lt;/<span class="name">relativePath</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="四、运行guliamll-product"><a href="#四、运行guliamll-product" class="headerlink" title="四、运行guliamll-product"></a>四、运行guliamll-product</h2><h3 id="1、运行guliamll-product项目时没有test按钮"><a href="#1、运行guliamll-product项目时没有test按钮" class="headerlink" title="1、运行guliamll-product项目时没有test按钮"></a>1、运行guliamll-product项目时没有test按钮</h3><p>在class前面加public</p><h2 id="五、运行gulimall-coupon"><a href="#五、运行gulimall-coupon" class="headerlink" title="五、运行gulimall-coupon"></a>五、运行gulimall-coupon</h2><h3 id="1-报错Caused-by-java-lang-ClassNotFoundException-org-springframework-boot-context-properties-ConfigurationPropertiesBean"><a href="#1-报错Caused-by-java-lang-ClassNotFoundException-org-springframework-boot-context-properties-ConfigurationPropertiesBean" class="headerlink" title="1.报错Caused by: java.lang.ClassNotFoundException: org.springframework.boot.context.properties.ConfigurationPropertiesBean"></a>1.报错Caused by: java.lang.ClassNotFoundException: org.springframework.boot.context.properties.ConfigurationPropertiesBean</h3><p>依赖冲突了将spring-cloud版本改成2021.0.5</p><p>版本对应网址<a href="https://github.com/alibaba/spring-cloud-alibaba/wiki/%E7%89%88%E6%9C%AC%E8%AF%B4%E6%98%8E">https://github.com/alibaba/spring-cloud-alibaba/wiki/%E7%89%88%E6%9C%AC%E8%AF%B4%E6%98%8E</a></p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">spring-boot.version</span>&gt;</span>2.6.13<span class="tag">&lt;/<span class="name">spring-boot.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">spring-cloud.version</span>&gt;</span>2021.0.5<span class="tag">&lt;/<span class="name">spring-cloud.version</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="六-idea内存占用过高"><a href="#六-idea内存占用过高" class="headerlink" title="六.idea内存占用过高"></a>六.idea内存占用过高</h2><p>原来的配置文件</p><figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">-Xms128m</span><br><span class="line">-Xmx2048m</span><br><span class="line">-XX:ReservedCodeCacheSize=512m</span><br><span class="line">-XX:+IgnoreUnrecognizedVMOptions</span><br><span class="line">-XX:+UseG1GC</span><br><span class="line">-XX:SoftRefLRUPolicyMSPerMB=50</span><br><span class="line">-XX:CICompilerCount=2</span><br><span class="line">-XX:+HeapDumpOnOutOfMemoryError</span><br><span class="line">-XX:-OmitStackTraceInFastThrow</span><br><span class="line">-ea</span><br><span class="line">-Dsun.io.useCanonCaches=false</span><br><span class="line">-Djdk.http.auth.tunneling.disabledSchemes=&quot;&quot;</span><br><span class="line">-Djdk.attach.allowAttachSelf=true</span><br><span class="line">-Djdk.module.illegalAccess.silent=true</span><br><span class="line">-Dkotlinx.coroutines.debug=off</span><br><span class="line">-XX:ErrorFile=$USER_HOME/java_error_in_idea_%p.log</span><br><span class="line">-XX:HeapDumpPath=$USER_HOME/java_error_in_idea.hprof</span><br><span class="line"></span><br><span class="line">--add-opens=java.base/jdk.internal.org.objectweb.asm=ALL-UNNAMED</span><br><span class="line">--add-opens=java.base/jdk.internal.org.objectweb.asm.tree=ALL-UNNAMED</span><br><span class="line"></span><br><span class="line">-javaagent:D:\tool\mysql\datagroup\jetbra\ja-netfilter.jar=jetbrains</span><br></pre></td></tr></table></figure><p>内存占用高达92%</p><p>修改后</p><figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">-Xms1024m</span><br><span class="line">-Xmx2048m</span><br><span class="line">-XX:ReservedCodeCacheSize=256m</span><br><span class="line">-XX:+IgnoreUnrecognizedVMOptions</span><br><span class="line">-XX:+UseG1GC</span><br><span class="line">-XX:SoftRefLRUPolicyMSPerMB=1000</span><br><span class="line">-XX:CICompilerCount=2</span><br><span class="line">-XX:+HeapDumpOnOutOfMemoryError</span><br><span class="line">-XX:-OmitStackTraceInFastThrow</span><br><span class="line">-ea</span><br><span class="line">-Dsun.io.useCanonCaches=false</span><br><span class="line">-Djdk.http.auth.tunneling.disabledSchemes=&quot;&quot;</span><br><span class="line">-Djdk.attach.allowAttachSelf=true</span><br><span class="line">-Djdk.module.illegalAccess.silent=true</span><br><span class="line">-Dkotlinx.coroutines.debug=off</span><br><span class="line">-XX:ErrorFile=$USER_HOME/java_error_in_idea_%p.log</span><br><span class="line">-XX:HeapDumpPath=$USER_HOME/java_error_in_idea.hprof</span><br><span class="line"></span><br><span class="line">--add-opens=java.base/jdk.internal.org.objectweb.asm=ALL-UNNAMED</span><br><span class="line">--add-opens=java.base/jdk.internal.org.objectweb.asm.tree=ALL-UNNAMED</span><br><span class="line"></span><br><span class="line">-javaagent:D:\tool\mysql\datagroup\jetbra\ja-netfilter.jar=jetbrains</span><br></pre></td></tr></table></figure><p>修改过后87%</p><h2 id="七、Nacos相关"><a href="#七、Nacos相关" class="headerlink" title="七、Nacos相关"></a>七、Nacos相关</h2><h3 id="1-服务启动时报错"><a href="#1-服务启动时报错" class="headerlink" title="1.服务启动时报错"></a>1.服务启动时报错</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">***************************</span><br><span class="line">APPLICATION FAILED TO START</span><br><span class="line">***************************</span><br><span class="line"></span><br><span class="line">Description:</span><br><span class="line"></span><br><span class="line">No spring.config.import property has been defined</span><br><span class="line"></span><br><span class="line">Action:</span><br><span class="line"></span><br><span class="line">1. Add a spring.config.import=polaris property to your configuration.</span><br><span class="line">2. If configuration is not required add spring.config.import=optional:polaris instead.</span><br><span class="line">3. If you still want use bootstrap.yml, you can add &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt; &lt;artifactId&gt;spring-cloud-starter-bootstrap&lt;/artifactId&gt; dependency for compatible upgrade.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>SpringCloud 2021.* 版本把bootstrap禁用了，只要把spring-cloud-starter-bootstrap导入进来就会生效了。</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-bootstrap<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-Caused-by-com-alibaba-nacos-api-exception-NacosException-Client-not-connected-current-status-STARTING"><a href="#2-Caused-by-com-alibaba-nacos-api-exception-NacosException-Client-not-connected-current-status-STARTING" class="headerlink" title="2.Caused by: com.alibaba.nacos.api.exception.NacosException: Client not connected, current status:STARTING"></a>2.Caused by: com.alibaba.nacos.api.exception.NacosException: Client not connected, current status:STARTING</h3><p>nacos版本用2.2.0</p><h2 id="八、OpenFeign"><a href="#八、OpenFeign" class="headerlink" title="八、OpenFeign"></a>八、OpenFeign</h2><h3 id="1-No-Feign-Client-for-loadBalancing-defined-Did-you-forget-to-include-spring-cloud-starter-loadbalancer"><a href="#1-No-Feign-Client-for-loadBalancing-defined-Did-you-forget-to-include-spring-cloud-starter-loadbalancer" class="headerlink" title="1.No Feign Client for loadBalancing defined. Did you forget to include spring-cloud-starter-loadbalancer?"></a>1.No Feign Client for loadBalancing defined. Did you forget to include spring-cloud-starter-loadbalancer?</h3><p>解决在gulimall-member的pom文件加入</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-loadbalancer<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>我的两个spring版本为：</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">spring-boot.version</span>&gt;</span>2.6.13<span class="tag">&lt;/<span class="name">spring-boot.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">spring-cloud.version</span>&gt;</span>2021.0.5<span class="tag">&lt;/<span class="name">spring-cloud.version</span>&gt;</span></span><br></pre></td></tr></table></figure><p>原因是因为SpringCloud Feign在Hoxton.M2 RELEASED版本之后抛弃了Ribbon，使用了spring-cloud-loadbalancer，所以我们这里还需要引入spring-cloud-loadbalancer的依赖。但是我在网上看好多人说还要在<a href="https://so.csdn.net/so/search?q=nacos&spm=1001.2101.3001.7020">nacos</a>中排除ribbon依赖discovery依赖中</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-ribbon<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>谷粒商城</title>
      <link href="/2024/04/15/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/"/>
      <url>/2024/04/15/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/</url>
      
        <content type="html"><![CDATA[<h2 id="一、环境搭建"><a href="#一、环境搭建" class="headerlink" title="一、环境搭建"></a>一、环境搭建</h2><h3 id="1-docker中安装并启动mysql"><a href="#1-docker中安装并启动mysql" class="headerlink" title="1.docker中安装并启动mysql"></a>1.docker中安装并启动mysql</h3><p>拉取mysql</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker pull mysql:5.7</span><br></pre></td></tr></table></figure><p>启动mysql</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo docker run -p 3306:3306 --name mysql \</span><br><span class="line">-v /mydata/mysql/log:/var/log/mysql \</span><br><span class="line">-v /mydata/mysql/data:/var/lib/mysql \</span><br><span class="line">-v /mydata/mysql/conf:/etc/mysql \</span><br><span class="line">-e MYSQL_ROOT_PASSWORD=root \</span><br><span class="line">-d mysql:5.7</span><br></pre></td></tr></table></figure><p>在&#x2F;mydata&#x2F;mysql&#x2F;conf修改mysql配置</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vi /mydata/mysql/conf/my.cnf</span><br><span class="line">[client]</span><br><span class="line">default-character-set=utf8</span><br><span class="line"></span><br><span class="line">[mysql]</span><br><span class="line">default-character-set=utf8</span><br><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line">init_connect=&#x27;SET collation_connection = utf8_unicode_ci&#x27; init_connect=&#x27;SET NAMES utf8&#x27; character-set-server=utf8</span><br><span class="line">collation-server=utf8_unicode_ci</span><br><span class="line">skip-character-set-client-handshake</span><br><span class="line">skip-name-resolve</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="2-docker-安装-redis"><a href="#2-docker-安装-redis" class="headerlink" title="2.docker 安装 redis"></a>2.docker 安装 redis</h3><p>1、下载镜像文件 </p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker pull redis</span><br></pre></td></tr></table></figure><p> 2、创建实例并启动</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mkdir -p /mydata/redis/conf </span><br><span class="line">touch /mydata/redis/conf/redis.conf </span><br><span class="line">docker run -p 6379:6379 --name redis -v /mydata/redis/data:/data \ -v /mydata/redis/conf/redis.conf:/etc/redis/redis.conf \ -d redis redis-server /etc/redis/redis.conf</span><br></pre></td></tr></table></figure><h3 id="3-maven-3-6-3"><a href="#3-maven-3-6-3" class="headerlink" title="3.maven 3.6.3"></a>3.maven 3.6.3</h3><p>注意在idea创建项目时，使用 IDEA 内置的 Spring Initializr 创建 Spring Boot 新项目时，没有 <a href="https://so.csdn.net/so/search?q=Java&spm=1001.2101.3001.7020">Java</a> 8 的选项了，只剩下了 &gt;&#x3D; 17 的版本，原来这是因为 Spring Boot 官方不再支持 Spring Boot 的 2.x 版本了，之后全力维护 3.x；而 Spring Boot 3.x 对 JDK 版本的最低要求是 17！</p><p>我们可以使用阿里云提供的镜像（<a href="https://start.aliyun.com/%EF%BC%89%EF%BC%8C">https://start.aliyun.com/），</a></p><p>在 IDEA 里更改 Server URL 即可：<code>https://start.aliyun.com/</code>。</p><h3 id="4-git配置"><a href="#4-git配置" class="headerlink" title="4.git配置"></a>4.git配置</h3><p>1.下载 </p><p>​<a href="https://git-sc/">https://git-sc</a></p><p>2.配置git，右键选择git bash</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">配置git用户名</span></span><br><span class="line">git config --global user.name &quot;username&quot;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">配置邮箱</span></span><br><span class="line">git config --global user.email &quot;username@qq.com&quot;</span><br></pre></td></tr></table></figure><p>3、配置 ssh 免密登录</p><p>1.我使用Git同时绑定了Github和Gitee</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;此处填你的github绑定邮箱&quot; </span><br><span class="line">ssh-keygen -t rsa -C &quot;此处填你的gitee绑定邮箱&quot; -f &quot;id_rsa_gitee&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>使用命令后</p><p><img src="image-20240322211731103.png" alt="image-20240322211731103"></p><p>2.将id_rsa.pub和id_rsa_gitee.pub中的ssh公钥复制绑定然后编写config文件（没有可自己创建配置如下信息）</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># gitee</span><br><span class="line">Host gitee.com</span><br><span class="line">HostName gitee.com</span><br><span class="line">PreferredAuthentications publickey</span><br><span class="line">IdentityFile ~/.ssh/id_rsa_gitee</span><br><span class="line"> </span><br><span class="line"># github</span><br><span class="line">Host github.com</span><br><span class="line">HostName github.com</span><br><span class="line">PreferredAuthentications publickey</span><br><span class="line">IdentityFile ~/.ssh/id_rsa</span><br></pre></td></tr></table></figure><ol start="3"><li>ssh -T <a href="mailto:&#x67;&#x69;&#x74;&#64;&#103;&#x69;&#116;&#x65;&#x65;&#x2e;&#99;&#x6f;&#x6d;">&#x67;&#x69;&#x74;&#64;&#103;&#x69;&#116;&#x65;&#x65;&#x2e;&#99;&#x6f;&#x6d;</a> 和 ssh -T <a href="mailto:&#x67;&#105;&#116;&#x40;&#x67;&#x69;&#x74;&#x68;&#x75;&#x62;&#46;&#99;&#111;&#109;">&#x67;&#105;&#116;&#x40;&#x67;&#x69;&#x74;&#x68;&#x75;&#x62;&#46;&#99;&#111;&#109;</a> 测试是否成功连接</li></ol><p><img src="image-20240322212131277.png" alt="image-20240322212131277"></p><h3 id="5-接口文档"><a href="#5-接口文档" class="headerlink" title="5.接口文档"></a>5.接口文档</h3><p><a href="https://easydoc.net/s/78237135/ZUqEdvA4/HqQGp9TI">https://easydoc.net/s/78237135/ZUqEdvA4/HqQGp9TI</a></p><h2 id="二、快速开发（逆向工程）"><a href="#二、快速开发（逆向工程）" class="headerlink" title="二、快速开发（逆向工程）"></a>二、快速开发（逆向工程）</h2><h3 id="1-使用人人开源搭建后台管理系统"><a href="#1-使用人人开源搭建后台管理系统" class="headerlink" title="1.使用人人开源搭建后台管理系统"></a>1.使用人人开源搭建后台管理系统</h3><p>1.从gitee上克隆下来</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git clone https://gitee.com/renrenio/renren-fast.git</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git clone https://gitee.com/renrenio/renren-fast-vue.git</span><br><span class="line">代码生成器</span><br><span class="line">git clone https://gitee.com/renrenio/renren-generator.git</span><br></pre></td></tr></table></figure><p>2.将项目导入到自己的项目中并交给聚合服务管理（讲原来的.git删掉）</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">module</span>&gt;</span>gulimall-coupon<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">module</span>&gt;</span>gulimall-member<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">module</span>&gt;</span>gulimall-order<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">module</span>&gt;</span>gulimall-product<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">module</span>&gt;</span>gulimall-ware<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">module</span>&gt;</span>renren-fast<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">module</span>&gt;</span>renren-generator<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br></pre></td></tr></table></figure><p>3.复制db文件夹中sql语句创建gulimall_admin数据库执行</p><p>4.修改配置文件中数据库连接信息启动renren-fast因为renren-fast-vue前后端分离，所以要将renren-fast-vue启动才能访问8080端口</p><p>5.打开renren-fast-vue</p><p>执行</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install</span><br><span class="line">然后</span><br><span class="line">npm run dev</span><br></pre></td></tr></table></figure><p>下载项目所依赖的组件并运行</p><p>6.修改renren-generator的配置信息想要生成哪个数据库增删改查代码就写哪个</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># mysql</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">com.alibaba.druid.pool.DruidDataSource</span></span><br><span class="line">    <span class="comment">#MySQL配置</span></span><br><span class="line">    <span class="attr">driverClassName:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="comment">#修改表即可</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://192.168.188.132:3306/gulimall_pms?useUnicode=true&amp;characterEncoding=UTF-8&amp;useSSL=false&amp;serverTimezone=Asia/Shanghai</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="number">123</span></span><br></pre></td></tr></table></figure><p>修改generator.properties</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">mainPath=com.atguigu</span></span><br><span class="line"></span><br><span class="line"><span class="string">package=com.atguigu.gulimall</span></span><br><span class="line"><span class="string">//修改</span></span><br><span class="line"><span class="string">moduleName=product</span></span><br><span class="line"></span><br><span class="line"><span class="string">author=yinqiangqiang</span></span><br><span class="line"><span class="comment">#Email</span></span><br><span class="line"><span class="string">email=1872173046@qq.com</span></span><br><span class="line"><span class="string">//修改表前缀</span></span><br><span class="line"><span class="string">tablePrefix=pms_</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="三、分布式组件（Spring-Cloud-Alibaba和Spring-Cloud）"><a href="#三、分布式组件（Spring-Cloud-Alibaba和Spring-Cloud）" class="headerlink" title="三、分布式组件（Spring Cloud Alibaba和Spring Cloud）"></a>三、分布式组件（Spring Cloud Alibaba和Spring Cloud）</h2><h3 id="1-前置选择"><a href="#1-前置选择" class="headerlink" title="1.前置选择"></a>1.前置选择</h3><h4 id="1-1选择方案："><a href="#1-1选择方案：" class="headerlink" title="1.1选择方案："></a>1.1选择方案：</h4><p>springcloudAlibaba中文文档官网</p><p><a href="https://github.com/alibaba/spring-cloud-alibaba/blob/2022.x/README-zh.md">https://github.com/alibaba/spring-cloud-alibaba/blob/2022.x/README-zh.md</a></p><p>springcloud官网</p><p><a href="http://spring.p2hp.com/projects/spring-cloud.html">http://spring.p2hp.com/projects/spring-cloud.html</a></p><p>*<em>SpringCloud Alibaba - Nacos</em>***：注册中心（服务发现&#x2F;注册）</p><p>*<em>SpringCloud Alibaba - Nacos</em>***：配置中心（动态配置管理）</p><p>*<em>SpringCloud - Ribbon</em>***：负载均衡</p><p>*<em>SpringCloud - Feign</em>***：声明式HTTP 客户端（调用远程服务）</p><p>*<em>SpringCloud Alibaba - Sentinel</em>***：服务容错（限流、降级、熔断）</p><p>*<em>SpringCloud - Gateway</em>***：API网关（webflux编程模式）</p><p>*<em>SpringCloud - Sleuth</em>***：调用链监控</p><p>*<em>SpringCloud Alibaba - Seata</em>***：原Fescar，即分布式事务解决方案</p><h4 id="1-2-版本选择"><a href="#1-2-版本选择" class="headerlink" title="1.2.版本选择"></a>1.2.版本选择</h4><ul><li>2022.x 分支对应的是 Spring Cloud 2022 与 Spring Boot 3.0.x，最低支持 JDK 17。</li><li><strong>2021.x 分支对应的是 Spring Cloud 2021 与 Spring Boot 2.6.x，最低支持 JDK 1.8。</strong></li><li>2020.0 分支对应的是 Spring Cloud 2020 与 Spring Boot 2.4.x，最低支持 JDK 1.8。</li><li>2.2.x 分支对应的是 Spring Cloud Hoxton 与 Spring Boot 2.2.x，最低支持 JDK 1.8。</li><li>greenwich 分支对应的是 Spring Cloud Greenwich 与 Spring Boot 2.1.x，最低支持 JDK 1.8。</li><li>finchley 分支对应的是 Spring Cloud Finchley 与 Spring Boot 2.0.x，最低支持 JDK 1.8。</li><li>1.x 分支对应的是 Spring Cloud Edgware 与 Spring Boot 1.x，最低支持 JDK 1.7。</li></ul><h3 id="2-spring-Cloud-Alibaba使用"><a href="#2-spring-Cloud-Alibaba使用" class="headerlink" title="2.spring Cloud Alibaba使用"></a>2.spring Cloud Alibaba使用</h3><p>如果需要使用已发布的版本，在 <code>dependencyManagement</code> 中添加如下配置。</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-alibaba-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2021.0.5.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然后在 <code>dependencies</code> 中添加自己所需使用的依赖即可使用。如果你想选择老版本，可以参考<a href="https://sca.aliyun.com/zh-cn/docs/next/overview/version-explain">版本说明</a>。</p><h3 id="3-SpringCloud-Alibaba-Nacos-作为注册中心"><a href="#3-SpringCloud-Alibaba-Nacos-作为注册中心" class="headerlink" title="3.SpringCloud Alibaba-Nacos[作为注册中心]"></a>3.SpringCloud Alibaba-Nacos[作为<strong>注册中心</strong>]</h3><ol><li><p>首先，修改 <code>pom.xml</code> 文件，引入 spring-cloud-starter-alibaba-nacos-config ；</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-discovery<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>在应用的 <code>/src/main/resources/application.yaml</code> 配置文件中配置 Nacos 地址并引入服务配置；</p></li></ol><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">server-addr:</span> <span class="string">localhost:8848</span> <span class="comment">#端口</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">gulimall-coupon</span> </span><br></pre></td></tr></table></figure><p>3.启动nacos时用命令行启动的话输入以单机模式启动</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">startup.cmd -m standalone</span><br></pre></td></tr></table></figure><p>点击的话可能以集群方式启动就会一直starting</p><p>4.加注解@EnableDiscoveryClient，我的nacos2.2.0好像不用加也可以注册成功</p><h3 id="4-feign声明式远程调用使用"><a href="#4-feign声明式远程调用使用" class="headerlink" title="4.feign声明式远程调用使用"></a>4.feign声明式远程调用使用</h3><p>Feign 使用：</p><p>1、导入openfeign包，可以在使用idea构建模块一开始就选择</p><p>2、开启@EnableFeignClients (“使用远程调用的包”)功能，只要服务启动自动扫描该包下有@FeignClient注解的接口</p><p>3、编写接口，进行远程调用</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//优惠券服务</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/member/list&quot;)</span></span><br><span class="line"><span class="keyword">public</span> R <span class="title function_">memberCoupon</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">CouponEntity</span> <span class="variable">couponEntity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CouponEntity</span>();</span><br><span class="line">    couponEntity.setCouponName(<span class="string">&quot;满100减10&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> R.ok().put(<span class="string">&quot;coupons&quot;</span>, Arrays.asList(couponEntity));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//会员服务调用优惠券服务，使用openFeign</span></span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> CouponFeignService couponFeignService;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> R <span class="title function_">test</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">MemberEntity</span> <span class="variable">memberEntity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MemberEntity</span>();</span><br><span class="line">    memberEntity.setNickname(<span class="string">&quot;张三&quot;</span>);</span><br><span class="line">    <span class="type">R</span> <span class="variable">memberCoupon</span> <span class="operator">=</span> couponFeignService.memberCoupon();</span><br><span class="line">    <span class="keyword">return</span> R.ok().put(<span class="string">&quot;member&quot;</span>,memberEntity).put(<span class="string">&quot;coupons&quot;</span>,memberCoupon.get(<span class="string">&quot;coupons&quot;</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4.SpringCloud Feign在Hoxton.M2 RELEASED版本之后抛弃了Ribbon，使用了spring-cloud-loadbalancer。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-cloud-loadbalancer&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><h3 id="5-SpringCloud-Alibaba-Nacos配置中心"><a href="#5-SpringCloud-Alibaba-Nacos配置中心" class="headerlink" title="5.SpringCloud Alibaba-Nacos配置中心"></a>5.SpringCloud Alibaba-Nacos<a href><strong>配置中心</strong></a></h3><p>1.common模块pom文件引入 Nacos Config </p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-config<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>gulimall-coupon模块加入(2020.X.X版本官方重构了bootstrap引导配置的加载方式，需要添加以下依赖)（我的gulimall-common加了报错，所以加到了每个微服务里）</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-bootstrap<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2.在resource文件夹下创建bootstrap.properties会优先于application.yml加载</p><figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring.application.name</span>=<span class="string">gulimall-coupon</span></span><br><span class="line"><span class="attr">spring.cloud.nacos.config.server-addr</span>=<span class="string">127.0.0.1:8848</span></span><br></pre></td></tr></table></figure><p>3.测试：application.properties加入</p><figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">coupon.user.name</span>=<span class="string">zhangsan</span></span><br><span class="line"><span class="attr">coupon.user.password</span>=<span class="string">123</span></span><br></pre></td></tr></table></figure><p>4.编写controller</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Value(&quot;$&#123;coupon.user.name&#125;&quot;)</span></span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line"><span class="meta">@Value(&quot;$&#123;coupon.user.password&#125;&quot;)</span></span><br><span class="line"><span class="keyword">private</span> <span class="type">int</span> password;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/test&quot;)</span></span><br><span class="line"><span class="keyword">public</span> R <span class="title function_">test</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> R.ok().put(<span class="string">&quot;name&quot;</span>,name).put(<span class="string">&quot;password&quot;</span>,password);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>5.注解@RefreshScope（加在Controller层不要放在启动类中，刷新数据不出）或者使用@ConfigurationProperties注解代替@Value注解。</p><p>6.nacos中配置列表点加号新建配置文件，文件名为gulimall-coupon.properties看控制台日志确定（也可指定）</p><p>7.然后重启服务就可以热部署了（优先使用配置中心中有的配置）</p><h3 id="6-spring-cloud-Gateway-API网关"><a href="#6-spring-cloud-Gateway-API网关" class="headerlink" title="6.spring cloud Gateway(API网关)"></a>6.spring cloud Gateway(API网关)</h3><p>理解: （满足某种断言，路由到某个地方）</p><p>1.功能</p><p><strong>权限控制</strong>：网关作为微服务入口，需要校验用户是是否有请求资格，如果没有则进行拦截。</p><p><strong>路由和负载均衡</strong>：一切请求都必须先经过gateway，但网关不处理业务，而是根据某种规则，把请求转发到某个微服务，这个过程叫做路由。当然路由的目标服务有多个时，还需要做负载均衡。</p><p><strong>限流</strong>：当请求流量过高时，在网关中按照下流的微服务能够接受的速度来放行请求，避免服务压力过大。</p><p>2.网关是一个单独的服务，也可以注册到nacos中</p><p>3.使用步骤</p><p>3.1注解@EnableDiscoveryClient（看版本是否要加）</p><p>3.2引入gulimall-common和cloud-bootstrap依赖并且排除掉mybatisplus相关依赖或者排除掉与数据库有关的自动配置（**@SpringBootApplication(exclude &#x3D; {DataSourceAutoConfiguration.class})**），不然会报错</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Consider the following:</span><br><span class="line">If you want an embedded database (H2, HSQL or Derby), please put it on the classpath.</span><br><span class="line">If you have database settings to be loaded from a particular profile you may need to activate it (no profiles are currently active).</span><br></pre></td></tr></table></figure><p>3.application.yml案例配置</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">10010</span> <span class="comment"># 网关端口</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">gateway</span> <span class="comment"># 服务名称</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">server-addr:</span> <span class="string">localhost:8848</span> <span class="comment"># nacos地址</span></span><br><span class="line">    <span class="attr">gateway:</span></span><br><span class="line">      <span class="attr">routes:</span> <span class="comment"># 网关路由配置</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">id:</span> <span class="string">user-service</span> <span class="comment"># 路由id，自定义，只要唯一即可</span></span><br><span class="line">          <span class="comment"># uri: http://127.0.0.1:8081 # 路由的目标地址 http就是固定地址</span></span><br><span class="line">          <span class="attr">uri:</span> <span class="string">lb://userservice</span> <span class="comment"># 路由的目标地址 lb就是负载均衡，后面跟服务名称</span></span><br><span class="line">          <span class="attr">predicates:</span> <span class="comment"># 路由断言，也就是判断请求是否符合路由规则的条件</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">Path=/user/**</span> <span class="comment"># 这个是按照路径匹配，只要以/user/开头就符合要求</span></span><br><span class="line">          <span class="attr">filters:</span> <span class="comment">#过滤器在路由到服务之间进行一系列的操作，可以加请求头等等</span></span><br></pre></td></tr></table></figure><h2 id="四、商品服务"><a href="#四、商品服务" class="headerlink" title="四、商品服务"></a>四、商品服务</h2><h3 id="1-三级分类-递归树形结构数据"><a href="#1-三级分类-递归树形结构数据" class="headerlink" title="1.三级分类-递归树形结构数据"></a>1.三级分类-递归树形结构数据</h3><p><strong>1.1controller层CategoryController类</strong></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/list/tree&quot;)</span></span><br><span class="line"><span class="comment">//@RequiresPermissions(&quot;product:category:list&quot;)</span></span><br><span class="line"><span class="keyword">public</span> R <span class="title function_">list</span><span class="params">()</span>&#123;</span><br><span class="line">    List&lt;CategoryEntity&gt; listWithTree = categoryService.listWithTree();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> R.ok().put(<span class="string">&quot;data&quot;</span>, listWithTree);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>1.2在Entity层CategoryEntity类中加入属性因为该属性不在数据库中，所以exist&#x3D;false</strong></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@TableField(exist = false)</span></span><br><span class="line"><span class="comment">//表示子分类</span></span><br><span class="line"><span class="keyword">private</span> List&lt;CategoryEntity&gt; children;</span><br></pre></td></tr></table></figure><p><strong>1.3service层CategoryServiceImpl类（用到了递归和stream流）</strong></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> List&lt;CategoryEntity&gt; <span class="title function_">listWithTree</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//1.查出所有分类</span></span><br><span class="line">        List&lt;CategoryEntity&gt; entities = baseMapper.selectList(<span class="literal">null</span>);</span><br><span class="line">        <span class="comment">//2.组装成父子树形结构</span></span><br><span class="line">        <span class="comment">//2.1找到所有的一级分类</span></span><br><span class="line">        List&lt;CategoryEntity&gt; level1Menus = entities.stream()</span><br><span class="line">                .filter(categoryEntity -&gt;</span><br><span class="line">                        categoryEntity.getParentCid() == <span class="number">0</span>)<span class="comment">//过滤出parentcid为0</span></span><br><span class="line">                .map(menu -&gt; &#123;</span><br><span class="line">                    menu.setChildren(getChildrens(menu, entities));<span class="comment">//为改分类赋值子分类</span></span><br><span class="line">                    <span class="keyword">return</span> menu;</span><br><span class="line">                &#125;)</span><br><span class="line">                .sorted((menu1, menu2) -&gt; (menu1.getSort() == <span class="literal">null</span> ? <span class="number">0</span> : menu1.getSort()) - </span><br><span class="line">                        (menu2.getSort() == <span class="literal">null</span> ? <span class="number">0</span> : menu2.getSort()))</span><br><span class="line">                .collect(Collectors.toList());</span><br><span class="line">        <span class="keyword">return</span> level1Menus;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> List&lt;CategoryEntity&gt; <span class="title function_">getChildrens</span><span class="params">(CategoryEntity root,List&lt;CategoryEntity&gt; all)</span>&#123;</span><br><span class="line">        List&lt;CategoryEntity&gt; children = all.stream()</span><br><span class="line">                .filter(categoryEntity -&gt; &#123;</span><br><span class="line">                    <span class="keyword">return</span> categoryEntity.getParentCid() == root.getCatId();</span><br><span class="line">                &#125;)</span><br><span class="line">                .map(menu -&gt; &#123;</span><br><span class="line">                    menu.setChildren(getChildrens(menu, all));</span><br><span class="line">                    <span class="keyword">return</span> menu;</span><br><span class="line">                &#125;)</span><br><span class="line">                .sorted((menu1, menu2) -&gt; (menu1.getSort() == <span class="literal">null</span> ? <span class="number">0</span> : menu1.getSort()) - </span><br><span class="line">                        (menu2.getSort() == <span class="literal">null</span> ? <span class="number">0</span> : menu2.getSort()))</span><br><span class="line">                .collect(Collectors.toList());</span><br><span class="line">        <span class="keyword">return</span> children;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><strong>1.4启动服务，可知已经分类完成</strong></p><p><img src="image-20240329203917436.png" alt="image-20240329203917436"></p><p><strong>1.5启动renren-fast服务和renren-fast-vue服务（npm run dev）登录后台管理系统后</strong></p><p>创建一级菜单：</p><p><img src="image-20200425164019287.png" alt="image-20200425164019287"></p><p>创建完成后，在后台的管理系统中会创建一条记录：</p><p><img src="image-20200425164201813.png" alt="image-20200425164201813"></p><p>然后创建子菜单：</p><p><img src="image-20240329204652329.png" alt="image-20240329204652329"></p><p>这个后台管理系统规则为点击分类维护菜单后，product&#x2F;category路径会被替换为product-category如下：</p><p><a href="http://localhost:8001/#/product-category">http://localhost:8001/#/product-category</a></p><p><strong>1.6配置renren-fast-vue文件</strong></p><p>创建renren-fast-vue\src\views\modules\product目录，之所以这样创建，是因为product&#x2F;category，对应于product-category</p><p>在该目录下，新建“category.vue”文件：</p><p>刷新页面出现404异常，查看请求发现，请求的是“<a href="http://localhost:8080/renren-fast/product/category/list/tree%E2%80%9D%EF%BC%8C%E8%BF%99%E4%B8%AA%E8%AF%B7%E6%B1%82%E6%98%AF%E4%B8%8D%E6%AD%A3%E7%A1%AE%E7%9A%84%EF%BC%8C%E6%AD%A3%E7%A1%AE%E7%9A%84%E8%AF%B7%E6%B1%82%E6%98%AF%EF%BC%9Ahttp://localhost:10000/product/category/list/tree%EF%BC%8C">http://localhost:8080/renren-fast/product/category/list/tree”，这个请求是不正确的，正确的请求是：http://localhost:10000/product/category/list/tree，</a></p><p>修正这个问题：</p><p>替换“static\config\index.js”文件中的“window.SITE_CONFIG[‘baseUrl’]”</p><p>替换前：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">window.SITE_CONFIG[&#x27;baseUrl&#x27;] = &#x27;http://localhost:8080/renren-fast&#x27;;</span><br></pre></td></tr></table></figure><p>替换后：带上前缀&#x2F;api在网关中容易区分路由到哪个微服务</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">window.SITE_CONFIG[&#x27;baseUrl&#x27;] = &#x27;http://localhost:88/api&#x27;;</span><br></pre></td></tr></table></figure><p><a href="http://localhost:88，这个地址是我们网关微服务的接口。">http://localhost:88，这个地址是我们网关微服务的接口。</a></p><p><strong>1.7将renren-fast注册到nacos，通过网关路由到该服务</strong></p><p>修改依赖</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">spring-boot.version</span>&gt;</span>2.6.13<span class="tag">&lt;/<span class="name">spring-boot.version</span>&gt;</span></span><br></pre></td></tr></table></figure><p>引入依赖</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.atguigu.gulimall<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>gulimall-common<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在application.yml中加入配置</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">renren-fast</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">discovery:</span></span><br><span class="line">        <span class="attr">server-addr:</span> <span class="number">192.168</span><span class="number">.137</span><span class="number">.14</span><span class="string">:8848</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">config:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">renren-fast</span></span><br><span class="line">        <span class="attr">server-addr:</span> <span class="number">192.168</span><span class="number">.137</span><span class="string">:8848</span></span><br><span class="line">        <span class="attr">namespace:</span> <span class="string">ee409c3f-3206-4a3b-ba65-7376922a886d</span></span><br></pre></td></tr></table></figure><p>配置网关路由，前台的所有请求都是经由“<a href="http://localhost:88/api%E2%80%9D%E6%9D%A5%E8%BD%AC%E5%8F%91%E7%9A%84%EF%BC%8C%E5%9C%A8%E2%80%9Cgulimall-gateway%E2%80%9D%E4%B8%AD%E6%B7%BB%E5%8A%A0%E8%B7%AF%E7%94%B1%E8%A7%84%E5%88%99%EF%BC%9A">http://localhost:88/api”来转发的，在“gulimall-gateway”中添加路由规则：</a></p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">id:</span> <span class="string">admin_route</span></span><br><span class="line">  <span class="attr">uri:</span> <span class="string">lb://renren-fast</span></span><br><span class="line">  <span class="attr">predicates:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">Path=/api/**</span></span><br></pre></td></tr></table></figure><p>但是当我们访问：<a href="http://localhost:8001/#/login%EF%BC%8C%E5%8F%91%E7%8E%B0%E9%AA%8C%E8%AF%81%E7%A0%81%E4%B8%8D%E6%98%BE%E7%A4%BA%EF%BC%9A">http://localhost:8001/#/login，发现验证码不显示：</a></p><p>分析原因：</p><ol><li>现在的验证码请求路径为，<a href="http://localhost:88/api/captcha.jpg?uuid=69c79f02-d15b-478a-8465-a07fd09001e6">http://localhost:88/api/captcha.jpg?uuid=69c79f02-d15b-478a-8465-a07fd09001e6</a></li><li>原始的验证码请求路径：<a href="http://localhost:8001/renren-fast/captcha.jpg?uuid=69c79f02-d15b-478a-8465-a07fd09001e6">http://localhost:8001/renren-fast/captcha.jpg?uuid=69c79f02-d15b-478a-8465-a07fd09001e6</a></li></ol><p>在admin_route的路由规则下，在访问路径中包含了“api”，因此它会将它转发到renren-fast，网关在转发的时候，会使用网关的前缀信息，为了能够正常的取得验证码，我们需要对请求路径进行重写</p><p><strong>1.8路径重写</strong></p><p>修改路由规则</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">id:</span> <span class="string">admin_route</span></span><br><span class="line">      <span class="attr">uri:</span> <span class="string">lb://renren-fast</span></span><br><span class="line">      <span class="attr">predicates:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">Path=/api/**</span></span><br><span class="line">      <span class="attr">filters:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">RewritePath=/api/(?&lt;segment&gt;/?.*),</span> <span class="string">/renren-fast/$\&#123;segment&#125;</span></span><br><span class="line">        <span class="comment">#将/api替换为、/renren-fast</span></span><br></pre></td></tr></table></figure><p>报错503</p><p><img src="image-20240329215453873.png" alt="image-20240329215453873"></p><p>在网关服务pom文件中加入</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-loadbalancer<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>原因：</p><p><strong>springcloud2020弃用了Ribbon，因此Alibaba在2021版本nacos中删除了Ribbon的jar包<br> 需要引入springcloud loadbalancer包。</strong></p><p>请求状态为200，可是验证码不出现</p><p>renren-fast控制台报错</p><p>When allowCredentials is true, allowedOrigins cannot contain the special value “*” since that cannot be set on the “Access-Control-Allow-Origin” response header. To allow credentials to a set of origins, list them explicitly or consider using “allowedOriginPatterns” instead.</p><p>解决：renren-fast corsConfig类将.allowedOrigins(“<em>“)替换为.allowedOriginPatterns(“</em>“)</p><p><img src="image-20240330204832290.png" alt="image-20240330204832290"></p><p><img src="image-20240330205000104.png" alt="image-20240330205000104"></p><p><strong>1.9访问被拒403和CORS错误（跨域）</strong></p><p><img src="image-20240330210352760.png" alt="image-20240330210352760"></p><p>控制台报错：</p><p>Access to XMLHttpRequest at ‘<a href="http://localhost:88/api/sys/login">http://localhost:88/api/sys/login</a>‘ from origin ‘<a href="http://localhost:8001/">http://localhost:8001</a>‘ has been blocked by CORS policy: Response to preflight request doesn’t pass access control check: No ‘Access-Control-Allow-Origin’ header is present on the requested resource.</p><p> 问题描述：已拦截跨源请求：同源策略禁止读取位于 <a href="http://localhost:88/api/sys/login">http://localhost:88/api/sys/login</a> 的远程资源。（原因：CORS 头缺少 ‘Access-Control-Allow-Origin’）。 就是说8001给远程的88端口发送请求默认是不允许的，利用同源策略限制。</p><p>问题分析：这是一种跨域问题。访问的域名和端口和原来的请求不同，请求就会被限制</p><p>解决：</p><p>因为这个登录请求是非简单请求，所以会在发送请求之前发送预检请求OPTIONS,询问服务器是否允许跨域，那么我们只需配置当次请求允许跨域即可。网关统一配置跨域</p><p>跨域流程：</p><p><img src="image-20200425193136641.png" alt="image-20200425193136641"></p><p><img src="image-20200425193523849.png" alt="image-20200425193523849"></p><p><img src="image-20200425193614185.png" alt="image-20200425193614185"></p><p>解决方法：在网关中定义“GulimallCorsConfiguration”类，该类用来做过滤，允许所有的请求跨域。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GulimallCorsConfiguration</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> CorsWebFilter <span class="title function_">corsWebFilter</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">UrlBasedCorsConfigurationSource</span> <span class="variable">source</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UrlBasedCorsConfigurationSource</span>();</span><br><span class="line">        <span class="type">CorsConfiguration</span> <span class="variable">corsConfiguration</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CorsConfiguration</span>();</span><br><span class="line">        <span class="comment">//配置跨域</span></span><br><span class="line">        corsConfiguration.addAllowedHeader(<span class="string">&quot;*&quot;</span>);<span class="comment">//允许任意请求头跨域</span></span><br><span class="line">        corsConfiguration.addAllowedMethod(<span class="string">&quot;*&quot;</span>);<span class="comment">//允许任意请求方式跨域</span></span><br><span class="line">        corsConfiguration.addAllowedOriginPattern(<span class="string">&quot;*&quot;</span>);<span class="comment">//允许任意请求来源跨域</span></span><br><span class="line">        corsConfiguration.setAllowCredentials(<span class="literal">true</span>);<span class="comment">//是否允许携带cookie跨域</span></span><br><span class="line"></span><br><span class="line">        source.registerCorsConfiguration(<span class="string">&quot;/**&quot;</span>,corsConfiguration);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">CorsWebFilter</span>(source);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>再次访问：<a href="http://localhost:8001/#/login">http://localhost:8001/#/login</a></p><p>![image-20240330213939607](C:\Users\ASUS\AppData\Roaming\Typora\typora-user-images\image-20240330213939607.png</p><p><img src="image-20200425195437299.png" alt="image-20200425195437299"></p><p><a href="http://localhost:8001/renre%E5%B7%B2%E6%8B%A6%E6%88%AA%E8%B7%A8%E6%BA%90%E8%AF%B7%E6%B1%82%EF%BC%9A%E5%90%8C%E6%BA%90%E7%AD%96%E7%95%A5%E7%A6%81%E6%AD%A2%E8%AF%BB%E5%8F%96%E4%BD%8D%E4%BA%8E">http://localhost:8001/renre已拦截跨源请求：同源策略禁止读取位于</a> <a href="http://localhost:88/api/sys/login">http://localhost:88/api/sys/login</a> 的远程资源。（原因：不允许有多个 ‘Access-Control-Allow-Origin’ CORS 头）n-fast&#x2F;captcha.jpg?uuid&#x3D;69c79f02-d15b-478a-8465-a07fd09001e6</p><p>出现了多个请求，并且也存在多个跨源请求。</p><p>原因：renren-fast项目也配置了跨域</p><p><img src="image-20240330214016679.png" alt="image-20240330214016679"></p><p>为了解决这个问题，需要修改renren-fast项目，注释掉“io.renren.config.CorsConfig”类。然后再次进行访问，成功登录。</p><p><strong>1.10显示分类信息</strong></p><p>在显示分类信息的时候，出现了404异常，请求的<a href="http://localhost:88/api/product/category/list/tree%E4%B8%8D%E5%AD%98%E5%9C%A8">http://localhost:88/api/product/category/list/tree不存在</a></p><p>![image-20200425213240724](D:&#x2F;黑马代码资料&#x2F;谷粒商城&#x2F;谷粒商城&#x2F;Guli Mall&#x2F;文档&#x2F;三阶段大纲md&#x2F;images&#x2F;image-20200425213240724.png<img src="image-20240330220912276.png" alt="image-20240330220912276"></p><p>这是因为网关上所做的路径映射不正确，映射后的路径为<a href="http://localhost:8001/renren-fast/product/category/list/tree">http://localhost:8001/renren-fast/product/category/list/tree</a></p><p>但是只有通过<a href="http://localhost:10000/product/category/list/tree%E8%B7%AF%E5%BE%84%E6%89%8D%E8%83%BD%E5%A4%9F%E6%AD%A3%E5%B8%B8%E8%AE%BF%E9%97%AE%EF%BC%8C%E6%89%80%E4%BB%A5%E4%BC%9A%E6%8A%A5404%E5%BC%82%E5%B8%B8%E3%80%82">http://localhost:10000/product/category/list/tree路径才能够正常访问，所以会报404异常。</a></p><p>解决方法就是定义一个product路由规则，进行路径重写：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">id:</span> <span class="string">product_route</span></span><br><span class="line">  <span class="attr">uri:</span> <span class="string">lb://gulimall-product</span></span><br><span class="line">  <span class="attr">predicates:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">Path=/api/product/**</span></span><br><span class="line">  <span class="attr">filters:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">RewritePath=/api/(?&lt;segment&gt;/?.*),/$\&#123;segment&#125;</span></span><br></pre></td></tr></table></figure><p>在路由规则的顺序上，将精确的路由规则放置到模糊的路由规则的前面，否则的话，精确的路由规则将不会被匹配到，类似于异常体系中try catch子句中异常的处理顺序。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h3 id="2-三级分类-菜单删除、新增和修改"><a href="#2-三级分类-菜单删除、新增和修改" class="headerlink" title="2.三级分类-菜单删除、新增和修改"></a>2.三级分类-菜单删除、新增和修改</h3><p><strong>2.1测试删除</strong></p><p>添加delete和append标识，并且增加复选框</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;el-tree</span><br><span class="line">   :data=&quot;menus&quot;</span><br><span class="line">   show-checkbox  //显示复选框</span><br><span class="line">   :props=&quot;defaultProps&quot;  </span><br><span class="line">   :expand-on-click-node=&quot;false&quot; //设置节点点击时不展开</span><br><span class="line">   node-key=&quot;catId&quot;   </span><br><span class="line"> &gt;</span><br><span class="line">   &lt;span class=&quot;custom-tree-node&quot; slot-scope=&quot;&#123; node, data &#125;&quot;&gt;</span><br><span class="line">     &lt;span&gt;&#123;&#123; node.label &#125;&#125;&lt;/span&gt;</span><br><span class="line">     &lt;span&gt;</span><br><span class="line">       &lt;el-button v-if=&quot;node.level &lt;= 2&quot; type=&quot;text&quot; size=&quot;mini&quot; @click=&quot;() =&gt; append(data)&quot;&gt;Append&lt;/el-button&gt;</span><br><span class="line">       &lt;el-button</span><br><span class="line">         v-if=&quot;node.childNodes.length == 0&quot;</span><br><span class="line">         type=&quot;text&quot;</span><br><span class="line">         size=&quot;mini&quot;</span><br><span class="line">         @click=&quot;() =&gt; remove(node, data)&quot;</span><br><span class="line">       &gt;Delete&lt;/el-button&gt;</span><br><span class="line">     &lt;/span&gt;</span><br><span class="line">   &lt;/span&gt;</span><br><span class="line"> &lt;/el-tree&gt;</span><br></pre></td></tr></table></figure><p>测试删除数据，打开postman输入“ <a href="http://localhost:88/api/product/category/delete">http://localhost:88/api/product/category/delete</a> ”，请求方式设置为POST，为了比对效果，可以在删除之前查询数据库的pms_category表：</p><p>由于delete请求接收的是一个数组，所以这里使用JSON方式，传入了一个数组：</p><p><img src="image-20240331181120496.png" alt="image-20240331181120496"></p><p>再次查询数据库能够看到cat_id为1432的数据已经被删除了。</p><p>修改“com.bigdata.gulimall.product.controller.CategoryController”类，添加如下代码：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"> <span class="meta">@RequestMapping(&quot;/delete&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> R <span class="title function_">delete</span><span class="params">(<span class="meta">@RequestBody</span> Long[] catIds)</span>&#123;</span><br><span class="line">        <span class="comment">//删除之前需要判断待删除的菜单那是否被别的地方所引用。</span></span><br><span class="line"><span class="comment">//categoryService.removeByIds(Arrays.asList(catIds));</span></span><br><span class="line"></span><br><span class="line">        categoryService.removeMenuByIds(Arrays.asList(catIds));</span><br><span class="line">        <span class="keyword">return</span> R.ok();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>com.bigdata.gulimall.product.service.impl.CategoryServiceImpl</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span>   <span class="keyword">void</span> <span class="title function_">removeMenuByIds</span><span class="params">(List&lt;Long&gt; asList)</span> &#123;</span><br><span class="line">    <span class="comment">//TODO 检查当前的菜单是否被别的地方所引用</span></span><br><span class="line">    categoryDao.deleteBatchIds(asList);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>2.2逻辑删除</strong>（我的版本是3.2.0）</p><p>然而多数时候，我们并不希望删除数据，而是标记它被删除了，这就是逻辑删除；</p><p>可以设置show_status为0，标记它已经被删除。</p><p>mybatis-plus的逻辑删除：</p><p><img src="image-20240331182211380.png" alt="image-20240331182211380"></p><p>配置全局的逻辑删除规则，在“src&#x2F;main&#x2F;resources&#x2F;application.yml”文件中添加如下内容：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">mybatis-plus:</span></span><br><span class="line">  <span class="attr">global-config:</span></span><br><span class="line">    <span class="attr">db-config:</span></span><br><span class="line">      <span class="attr">id-type:</span> <span class="string">auto</span></span><br><span class="line">      <span class="attr">logic-delete-value:</span> <span class="number">1</span></span><br><span class="line">      <span class="attr">logic-not-delete-value:</span> <span class="number">0</span></span><br></pre></td></tr></table></figure><p>修改“com.bigdata.gulimall.product.entity.CategoryEntity”类，添加上@TableLogic，表明使用逻辑删除：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 是否显示[0-不显示，1显示]</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@TableLogic(value = &quot;1&quot;,delval = &quot;0&quot;)</span></span><br><span class="line"><span class="keyword">private</span> Integer showStatus;</span><br></pre></td></tr></table></figure><p>然后在POSTMan中测试一下是否能够满足需要。另外在“src&#x2F;main&#x2F;resources&#x2F;application.yml”文件中，设置日志级别，打印出SQL语句：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">logging:</span></span><br><span class="line">  <span class="attr">level:</span></span><br><span class="line">    <span class="attr">com.bigdata.gulimall.product:</span> <span class="string">debug</span></span><br></pre></td></tr></table></figure><p>打印的日志：</p><figure class="highlight verilog"><table><tr><td class="code"><pre><span class="line">==&gt;  Preparing: UPDATE pms_category SET show_status=<span class="number">0</span> WHERE cat_id IN ( ? ) AND show_status=<span class="number">1</span> </span><br><span class="line">==&gt; Parameters: <span class="number">1431</span>(Long)</span><br><span class="line">&lt;==    Updates: <span class="number">1</span></span><br><span class="line">get changedGroupKeys:[]</span><br></pre></td></tr></table></figure><p><img src="image-20240331182616586.png" alt="image-20240331182616586"></p><p>前端代码片段</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">remove(node, data) &#123;</span><br><span class="line">  var ids = [data.catId];</span><br><span class="line">  this.$confirm(`是否删除【$&#123;data.name&#125;】菜单?`, &quot;提示&quot;, &#123;</span><br><span class="line">    confirmButtonText: &quot;确定&quot;,</span><br><span class="line">    cancelButtonText: &quot;取消&quot;,</span><br><span class="line">    type: &quot;warning&quot;,</span><br><span class="line">  &#125;).then(() =&gt; &#123;</span><br><span class="line">    this.$http(&#123;</span><br><span class="line">      url: this.$http.adornUrl(&quot;/product/category/delete&quot;),</span><br><span class="line">      method: &quot;post&quot;,</span><br><span class="line">      data: this.$http.adornData(ids, false),</span><br><span class="line">    &#125;)</span><br><span class="line">      .then((&#123; data &#125;) =&gt; &#123;</span><br><span class="line">        this.$message(&#123;</span><br><span class="line">          message: &quot;菜单删除成功&quot;,</span><br><span class="line">          type: &quot;success&quot;,</span><br><span class="line">        &#125;);</span><br><span class="line">        this.getMenus();</span><br><span class="line">        //设置默认展开菜单</span><br><span class="line">        this.expandedKey = [node.parent.data.catId]</span><br><span class="line">      &#125;)</span><br><span class="line">      .catch(() =&gt; &#123;</span><br><span class="line">      &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  console.log(&quot;remove&quot;, node, data);</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p><strong>2.3新增和修改</strong></p><p>页面</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">   &lt;el-tree</span><br><span class="line">     :data=&quot;menus&quot;</span><br><span class="line">     :props=&quot;defaultProps&quot;</span><br><span class="line">     :expand-on-click-node=&quot;false&quot;</span><br><span class="line">     :default-expanded-keys=&quot;expandedKey&quot;</span><br><span class="line">     show-checkbox</span><br><span class="line">     node-key=&quot;catId&quot;</span><br><span class="line">   &gt;</span><br><span class="line">     &lt;span class=&quot;custom-tree-node&quot; slot-scope=&quot;&#123; node, data &#125;&quot;&gt;</span><br><span class="line">       &lt;span&gt;&#123;&#123; node.label &#125;&#125;&lt;/span&gt;</span><br><span class="line">       &lt;span&gt;</span><br><span class="line">         &lt;el-button</span><br><span class="line">           v-if=&quot;node.level &lt;= 2&quot;</span><br><span class="line">           type=&quot;text&quot;</span><br><span class="line">           size=&quot;mini&quot;</span><br><span class="line">           @click=&quot;() =&gt; append(data)&quot;</span><br><span class="line">         &gt;</span><br><span class="line">           Append</span><br><span class="line">         &lt;/el-button&gt;</span><br><span class="line">         &lt;el-button type=&quot;text&quot; size=&quot;mini&quot; @click=&quot;() =&gt; edit(data)&quot;&gt;</span><br><span class="line">           edit</span><br><span class="line">         &lt;/el-button&gt;</span><br><span class="line">         &lt;el-button</span><br><span class="line">           v-if=&quot;node.childNodes.length == 0&quot;</span><br><span class="line">           type=&quot;text&quot;</span><br><span class="line">           size=&quot;mini&quot;</span><br><span class="line">           @click=&quot;() =&gt; remove(node, data)&quot;</span><br><span class="line">         &gt;</span><br><span class="line">           Delete</span><br><span class="line">         &lt;/el-button&gt;</span><br><span class="line">       &lt;/span&gt;</span><br><span class="line">     &lt;/span&gt;</span><br><span class="line">   &lt;/el-tree&gt;</span><br><span class="line">   &lt;el-dialog</span><br><span class="line">     :title=&quot;title&quot;</span><br><span class="line">     :visible.sync=&quot;dialogVisible&quot;</span><br><span class="line">     width=&quot;30%&quot;</span><br><span class="line">     :close-on-click-modal=&quot;false&quot;</span><br><span class="line">   &gt;</span><br><span class="line">     &lt;el-form :model=&quot;category&quot;&gt;</span><br><span class="line">       &lt;el-form-item label=&quot;分类名称&quot;&gt;</span><br><span class="line">         &lt;el-input v-model=&quot;category.name&quot; autocomplete=&quot;off&quot;&gt;&lt;/el-input&gt;</span><br><span class="line">       &lt;/el-form-item&gt;</span><br><span class="line">       &lt;el-form-item label=&quot;图标&quot;&gt;</span><br><span class="line">         &lt;el-input v-model=&quot;category.icon&quot; autocomplete=&quot;off&quot;&gt;&lt;/el-input&gt;</span><br><span class="line">       &lt;/el-form-item&gt;</span><br><span class="line">       &lt;el-form-item label=&quot;计量单位&quot;&gt;</span><br><span class="line">         &lt;el-input v-model=&quot;category.productUnit&quot; autocomplete=&quot;off&quot;&gt;&lt;/el-input&gt;</span><br><span class="line">       &lt;/el-form-item&gt;</span><br><span class="line">     &lt;/el-form&gt;</span><br><span class="line">     &lt;span slot=&quot;footer&quot; class=&quot;dialog-footer&quot;&gt;</span><br><span class="line">       &lt;el-button @click=&quot;dialogVisible = false&quot;&gt;取 消&lt;/el-button&gt;</span><br><span class="line">       &lt;el-button type=&quot;primary&quot; @click=&quot;submitData&quot;&gt;确 定&lt;/el-button&gt;</span><br><span class="line">     &lt;/span&gt;</span><br><span class="line">   &lt;/el-dialog&gt;</span><br><span class="line"> &lt;/div&gt;</span><br></pre></td></tr></table></figure><p>data</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      title: &quot;&quot;,</span><br><span class="line">      dialogType: &quot;&quot;,</span><br><span class="line">      category: &#123;</span><br><span class="line">        name: &quot;&quot;,</span><br><span class="line">        parentCid: 0,</span><br><span class="line">        catLevel: 0,</span><br><span class="line">        showStatus: 1,</span><br><span class="line">        sort: 0,</span><br><span class="line">        icon: &quot;&quot;,</span><br><span class="line">        productUnit: &quot;&quot;,</span><br><span class="line">        catId: null,</span><br><span class="line">      &#125;,</span><br><span class="line">      dialogVisible: false,</span><br><span class="line">      menus: [],</span><br><span class="line">      expandedKey: [],</span><br><span class="line">      defaultProps: &#123;</span><br><span class="line">        children: &quot;children&quot;,</span><br><span class="line">        label: &quot;name&quot;,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;;</span><br></pre></td></tr></table></figure><p>方法</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">getMenus() &#123;</span><br><span class="line">      this.$http(&#123;</span><br><span class="line">        url: this.$http.adornUrl(&quot;/product/category/list/tree&quot;),</span><br><span class="line">        method: &quot;get&quot;,</span><br><span class="line">      &#125;).then((&#123; data &#125;) =&gt; &#123;</span><br><span class="line">        console.log(&quot;成功获取到菜单数据&quot;, data.tree);</span><br><span class="line">        this.menus = data.tree;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    append(data) &#123;</span><br><span class="line">      console.log(&quot;append&quot;, data);</span><br><span class="line">      this.dialogType = &quot;add&quot;;</span><br><span class="line">      this.title = &quot;添加分类&quot;;</span><br><span class="line">      this.dialogVisible = true;</span><br><span class="line">      this.category.parentCid = data.catId;</span><br><span class="line">      this.category.catLevel = data.catLevel * 1 + 1;</span><br><span class="line">      this.category.catId = null;</span><br><span class="line">      this.category.name = null;</span><br><span class="line">      this.category.icon = &quot;&quot;;</span><br><span class="line">      this.category.productUnit = &quot;&quot;;</span><br><span class="line">      this.category.showStatus = 1;</span><br><span class="line">      this.category.sort = 0;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    remove(node, data) &#123;</span><br><span class="line">      var ids = [data.catId];</span><br><span class="line">      this.$confirm(`是否删除【$&#123;data.name&#125;】菜单?`, &quot;提示&quot;, &#123;</span><br><span class="line">        confirmButtonText: &quot;确定&quot;,</span><br><span class="line">        cancelButtonText: &quot;取消&quot;,</span><br><span class="line">        type: &quot;warning&quot;,</span><br><span class="line">      &#125;).then(() =&gt; &#123;</span><br><span class="line">        this.$http(&#123;</span><br><span class="line">          url: this.$http.adornUrl(&quot;/product/category/delete&quot;),</span><br><span class="line">          method: &quot;post&quot;,</span><br><span class="line">          data: this.$http.adornData(ids, false),</span><br><span class="line">        &#125;)</span><br><span class="line">          .then((&#123; data &#125;) =&gt; &#123;</span><br><span class="line">            this.$message(&#123;</span><br><span class="line">              message: &quot;菜单删除成功&quot;,</span><br><span class="line">              type: &quot;success&quot;,</span><br><span class="line">            &#125;);</span><br><span class="line">            this.getMenus();</span><br><span class="line">            //设置默认展开菜单</span><br><span class="line">            this.expandedKey = [node.parent.data.catId];</span><br><span class="line">          &#125;)</span><br><span class="line">          .catch(() =&gt; &#123;&#125;);</span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">      console.log(&quot;remove&quot;, node, data);</span><br><span class="line">    &#125;,</span><br><span class="line">    //添加三级分类</span><br><span class="line">    addCategory() &#123;</span><br><span class="line">      console.log(&quot;提交的三级分类数据&quot;, this.category);</span><br><span class="line">      this.$http(&#123;</span><br><span class="line">        url: this.$http.adornUrl(&quot;/product/category/save&quot;),</span><br><span class="line">        method: &quot;post&quot;,</span><br><span class="line">        data: this.$http.adornData(this.category, false),</span><br><span class="line">      &#125;).then((&#123; data &#125;) =&gt; &#123;</span><br><span class="line">        this.$message(&#123;</span><br><span class="line">          message: &quot;菜单保存成功&quot;,</span><br><span class="line">          type: &quot;success&quot;,</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;);</span><br><span class="line">      //关闭对话框</span><br><span class="line">      this.dialogVisible = false;</span><br><span class="line">      this.getMenus();</span><br><span class="line">      //设置默认展开菜单</span><br><span class="line">      this.expandedKey = [this.category.parentCid];</span><br><span class="line">    &#125;,</span><br><span class="line">    edit(data) &#123;</span><br><span class="line">      console.log(&quot;要修改的数据&quot;, data);</span><br><span class="line">      this.dialogType = &quot;edit&quot;;</span><br><span class="line">      this.title = &quot;修改分类&quot;;</span><br><span class="line">      this.dialogVisible = true;</span><br><span class="line"></span><br><span class="line">      this.$http(&#123;</span><br><span class="line">        url: this.$http.adornUrl(`/product/category/info/$&#123;data.catId&#125;`),</span><br><span class="line">        method: &quot;get&quot;,</span><br><span class="line">      &#125;).then((&#123; data &#125;) =&gt; &#123;</span><br><span class="line">        //请求成功</span><br><span class="line">        console.log(&quot;要回显的数据&quot;, data);</span><br><span class="line">        this.category.name = data.data.name;</span><br><span class="line">        this.category.catId = data.data.catId;</span><br><span class="line">        this.category.icon = data.data.icon;</span><br><span class="line">        this.category.productUnit = data.data.productUnit;</span><br><span class="line">        this.category.parentCid = data.data.parentCid;</span><br><span class="line">        this.category.catLevel = data.data.catLevel;</span><br><span class="line">        this.category.showStatus = data.data.showStatus;</span><br><span class="line">        this.category.sort = data.data.sort;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    //修改三级分类数据</span><br><span class="line">    editCategory() &#123;</span><br><span class="line">      //解构</span><br><span class="line">      var &#123; catId, name, icon, productUnit &#125; = this.category;</span><br><span class="line">      console.log(&quot;productUnit&quot;,this.category.productUnit);</span><br><span class="line">      this.$http(&#123;</span><br><span class="line">        url: this.$http.adornUrl(&quot;/product/category/update&quot;),</span><br><span class="line">        method: &quot;post&quot;,</span><br><span class="line">        data: this.$http.adornData(&#123; catId, name, icon, productUnit &#125;, false),</span><br><span class="line">      &#125;).then((&#123; data &#125;) =&gt; &#123;</span><br><span class="line">        this.$message(&#123;</span><br><span class="line">          message: &quot;菜单修改成功&quot;,</span><br><span class="line">          type: &quot;success&quot;,</span><br><span class="line">        &#125;);</span><br><span class="line">        //关闭对话框</span><br><span class="line">        this.dialogVisible = false;</span><br><span class="line">        this.getMenus();</span><br><span class="line">        //设置默认展开菜单</span><br><span class="line">        this.expandedKey = [this.category.parentCid];</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    submitData() &#123;</span><br><span class="line">      if (this.dialogType == &quot;add&quot;) &#123;</span><br><span class="line">        this.addCategory();</span><br><span class="line">      &#125;</span><br><span class="line">      if (this.dialogType == &quot;edit&quot;) &#123;</span><br><span class="line">        this.editCategory();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br></pre></td></tr></table></figure><h3 id="3-三级分类-修改-菜单拖拽"><a href="#3-三级分类-修改-菜单拖拽" class="headerlink" title="3.三级分类-修改-菜单拖拽"></a>3.三级分类-修改-菜单拖拽</h3><table><thead><tr><th>同一个菜单内拖动</th><th>正常</th></tr></thead><tbody><tr><td>拖动到父菜单的前面或后面</td><td>正常</td></tr><tr><td>拖动到父菜单同级的另外一个菜单中</td><td>正常</td></tr><tr><td></td><td></td></tr></tbody></table><p>关注的焦点在于，拖动到目标节点中，使得目标节点的catlevel+deep小于3即可。拖动到目标节点前后的条件是，使得</p><p><strong>拖动菜单时需要修改顺序和级别</strong>         </p><p>需要考虑两种类型节点的catLevel</p><p>一种关系是：如果是同一个节点下的子节点的前后移动，则不需要修改其catLevel</p><p>如果是拖动到另外一个节点内或父节点中，则要考虑修改其catLevel</p><p>如果拖动到与父节点平级的节点关系中，则要将该拖动的节点的catLevel，设置为兄弟节点的Level，</p><p>先考虑parentCid还是先考虑catLevel?</p><p>两种关系在耦合</p><p>另外还有一种是前后拖动的情况</p><p>哪个范围最大？</p><p>肯定是拖动类型关系最大，</p><p>如果是前后拖动，则拖动后需要看待拖动节点的层级和设置待拖动节点的parentId，</p><p>​       如果待拖动节点和目标节点的层级相同，则认为是同级拖动，只需要修改节点的先后顺序即可；</p><p>​       否则认为是跨级拖动，则需要修改层级和重新设置parentID</p><p>​              如果</p><p>​      以拖动类型来分，并不合适，比较合适的是跨级拖动和同级拖动</p><p>如何判断是跨级拖动还是同级拖动，根据拖动的层级来看，如果是同一级的拖动，只需要修改先后顺序即可，但是这样也会存在一个问题，就是当拖动到另外一个分组下的同级目录中，显然也需要修改parentID，究竟什么样的模型最好呢？</p><p>  另外也可以判断在跨级移动时，跨级后的parentID是否相同，如果不相同，则认为是在不同目录下的跨级移动需要修改parentID。</p><p>顺序、catLevel和parentID</p><p>同级移动：</p><p>（1）首先判断待移动节点和目标节点的catLevel是否相同，</p><p> （2）相同则认为是同级移动，</p><p>​          如果此时移动后目标节点的parentID和待移动节点的相同，但是移动类型是前后移动，只需要调整顺序即可，此时移动类型是inner，则需要修改catLevel和parentId和顺序</p><p>​         如果此时移动后目标节点的parentID和待移动节点的不相同，但是移动类型是前后移动，则需要调整顺序和parentId，此时移动类型是inner，则需要修改catLevel和parentId和顺序</p><p>通过这两步的操作能看到一些共性，如果抽取移动类型作为大的分类，则在这种分类下，</p><p>如果是前后移动，则分为下面几种情况：</p><p>​    同级别下的前后移动：界定标准为catLevel相同，但是又可以分为parentID相同和parentID不同，parent相同时，只需要修改顺序即可；parentID不同时，需要修改parentID和顺序</p><p>​    不同级别下的前后移动：界定标准为catLevel不同，此时无论如何都要修改parentID，顺序和catLevel</p><p>如果是inner类型移动，则分为一下的几种情况。</p><p>​     此时不论是同级inner，还是跨级innner，都需要修改parentID，顺序和catLevel</p><p>哪种情况需要更新子节点呢？</p><p>那就要看要拖拽的节点是否含有子节点，如果有子节点，则需要更新子节点的catLevel，不需要更新它之间的顺序和parentId，只需要更新catLevel即可。这种更新子节点的Level应该归类，目前的目标是只要有子节点就更新它的catLevel，</p><p>（2）如果待移动节点和目标节点的catLevel不同，则认为是跨级移动。如果是移动到父节点中，则需要设置catLevel，parentID和顺序。此时需要分两种情况来考虑，如果是移动到父节点中，则需要设置catLevel，parentID和顺序，如果是移动到兄弟节点中，则需要设置</p><p>包含移动到父节点同级目录，兄弟节点中。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/update/sort&quot;)</span></span><br><span class="line"><span class="comment">//@RequiresPermissions(&quot;product:category:update&quot;)</span></span><br><span class="line"><span class="keyword">public</span> R <span class="title function_">update</span><span class="params">(<span class="meta">@RequestBody</span> CategoryEntity[] category)</span>&#123;</span><br><span class="line">    categoryService.updateBatchById(Arrays.asList(category));</span><br><span class="line">    <span class="keyword">return</span> R.ok();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>设置菜单拖动开关</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;el-switch v-model=&quot;draggable&quot; active-text=&quot;开启拖拽&quot; inactive-text=&quot;关闭拖拽&quot;&gt;&lt;/el-switch&gt;</span><br></pre></td></tr></table></figure><p>但是现在存在的一个问题是每次拖拽的时候，都会发送请求，更新数据库这样频繁的与数据库交互，现在想要实现一个拖拽过程中不更新数据库，拖拽完成后，统一提交拖拽后的数据。</p><p>现在还存在一个问题，如果是将一个菜单连续的拖拽，最终还放到了原来的位置，但是updateNode中却出现了很多节点更新信息，这样显然也是一个问题。</p><p><strong>批量删除</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;el-button type=&quot;danger&quot; plain size=&quot;small&quot; @click=&quot;batchDelete&quot;&gt;批量删除&lt;/el-button&gt;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//批量删除</span></span><br><span class="line">   <span class="title function_">batchDelete</span>(<span class="params"></span>) &#123;</span><br><span class="line">     <span class="keyword">let</span> checkNodes = <span class="variable language_">this</span>.<span class="property">$refs</span>.<span class="property">menuTree</span>.<span class="title function_">getCheckedNodes</span>();</span><br><span class="line"></span><br><span class="line">     <span class="comment">//  console.log(&quot;被选中的节点：&quot;,checkNodes);</span></span><br><span class="line"></span><br><span class="line">     <span class="keyword">let</span> catIds = [];</span><br><span class="line">     <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; checkNodes.<span class="property">length</span>; i++) &#123;</span><br><span class="line">       catIds.<span class="title function_">push</span>(checkNodes[i].<span class="property">catId</span>);</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     <span class="variable language_">this</span>.$confirm(<span class="string">`确定要删除?`</span>, <span class="string">&quot;提示&quot;</span>, &#123;</span><br><span class="line">       <span class="attr">confirmButtonText</span>: <span class="string">&quot;确定&quot;</span>,</span><br><span class="line">       <span class="attr">cancelButtonText</span>: <span class="string">&quot;取消&quot;</span>,</span><br><span class="line">       <span class="attr">type</span>: <span class="string">&quot;warning&quot;</span></span><br><span class="line">     &#125;)</span><br><span class="line">       .<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">         <span class="variable language_">this</span>.$http(&#123;</span><br><span class="line">           <span class="attr">url</span>: <span class="variable language_">this</span>.<span class="property">$http</span>.<span class="title function_">adornUrl</span>(<span class="string">&quot;/product/category/delete&quot;</span>),</span><br><span class="line">           <span class="attr">method</span>: <span class="string">&quot;post&quot;</span>,</span><br><span class="line">           <span class="attr">data</span>: <span class="variable language_">this</span>.<span class="property">$http</span>.<span class="title function_">adornData</span>(catIds, <span class="literal">false</span>)</span><br><span class="line">         &#125;).<span class="title function_">then</span>(<span class="function">(<span class="params">&#123; data &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">           <span class="variable language_">this</span>.$message(&#123;</span><br><span class="line">             <span class="attr">message</span>: <span class="string">&quot;菜单批量删除成功&quot;</span>,</span><br><span class="line">             <span class="attr">type</span>: <span class="string">&quot;success&quot;</span></span><br><span class="line">           &#125;);</span><br><span class="line"></span><br><span class="line">           <span class="comment">//重新刷新页面</span></span><br><span class="line">           <span class="variable language_">this</span>.<span class="title function_">getMeus</span>();</span><br><span class="line">         &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       &#125;)</span><br><span class="line">       .<span class="title function_">catch</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">         <span class="comment">//取消删除</span></span><br><span class="line">       &#125;);</span><br><span class="line">   &#125;,</span><br></pre></td></tr></table></figure><h3 id="4-品牌管理菜单"><a href="#4-品牌管理菜单" class="headerlink" title="4.品牌管理菜单"></a>4.品牌管理菜单</h3><h4 id="4-1后台管理系统添加，品牌管理菜单"><a href="#4-1后台管理系统添加，品牌管理菜单" class="headerlink" title="4.1后台管理系统添加，品牌管理菜单"></a>4.1后台管理系统添加，品牌管理菜单</h4><p><img src="image-20240401183921302.png" alt="image-20240401183921302"></p><p>（2）将“”逆向工程得到的resources\src\views\modules\product文件拷贝到gulimall&#x2F;renren-fast-vue&#x2F;src&#x2F;views&#x2F;modules&#x2F;product目录下，也就是下面的两个文件</p><p>brand.vue 和brand-add-or-update.vue</p><p>但是显示的页面没有新增和删除功能，这是因为权限控制的原因，</p><p><img src="image-20200428170325515.png" alt="image-20200428170325515"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;el-button v-if=&quot;isAuth(&#x27;product:brand:save&#x27;)&quot; type=&quot;primary&quot; @click=&quot;addOrUpdateHandle()&quot;&gt;新增&lt;/el-button&gt;</span><br><span class="line">&lt;el-button v-if=&quot;isAuth(&#x27;product:brand:delete&#x27;)&quot; type=&quot;danger&quot; @click=&quot;deleteHandle()&quot; :disabled=&quot;dataListSelections.length &lt;= 0&quot;&gt;批量删除&lt;/el-button&gt;</span><br><span class="line">      </span><br></pre></td></tr></table></figure><p>查看“isAuth”的定义位置：</p><p><img src="image-20200428170437592.png" alt="image-20200428170437592"></p><p>它是在“index.js”中定义，现在将它设置为返回值为true，即可显示添加和删除功能。</p><p>再次刷新页面能够看到，按钮已经出现了：</p><p><img src="image-20200428170644511.png" alt="image-20200428170644511"></p><h4 id="4-2添加“显示状态按钮”"><a href="#4-2添加“显示状态按钮”" class="headerlink" title="4.2添加“显示状态按钮”"></a>4.2添加“显示状态按钮”</h4><p>brand.vue</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template slot-scope=&quot;scope&quot;&gt;</span><br><span class="line">  &lt;el-switch</span><br><span class="line">    v-model=&quot;scope.row.showStatus&quot;</span><br><span class="line">    active-color=&quot;#13ce66&quot;</span><br><span class="line">    inactive-color=&quot;#ff4949&quot;</span><br><span class="line">    @change=&quot;updateBrandStatus(scope.row)&quot;</span><br><span class="line">    :active-value = &quot;1&quot;//绑定数字0，1</span><br><span class="line">    :inactive-value= &quot;0&quot;</span><br><span class="line">  &gt;&lt;/el-switch&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><p>brand-add-or-update.vue</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;el-form-item label=&quot;显示状态&quot; prop=&quot;showStatus&quot;&gt;</span><br><span class="line">   &lt;el-switch v-model=&quot;dataForm.showStatus&quot; active-color=&quot;#13ce66&quot; inactive-color=&quot;#ff4949&quot;&gt;&lt;/el-switch&gt;</span><br><span class="line">&lt;/el-form-item&gt;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//更新开关的状态</span></span><br><span class="line">    <span class="title function_">updateBrandStatus</span>(<span class="params">data</span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;最新状态&quot;</span>, data);</span><br><span class="line">      <span class="keyword">let</span> &#123;brandId,showStatus&#125; = data;</span><br><span class="line">      <span class="variable language_">this</span>.$http(&#123;</span><br><span class="line">        <span class="attr">url</span>: <span class="variable language_">this</span>.<span class="property">$http</span>.<span class="title function_">adornUrl</span>(<span class="string">&quot;/product/brand/update&quot;</span>),</span><br><span class="line">        <span class="attr">method</span>: <span class="string">&quot;post&quot;</span>,</span><br><span class="line">        <span class="attr">data</span>: <span class="variable language_">this</span>.<span class="property">$http</span>.<span class="title function_">adornData</span>(&#123;brandId,showStatus&#125;, <span class="literal">false</span>)</span><br><span class="line">      &#125;).<span class="title function_">then</span>(<span class="function">(<span class="params">&#123; data &#125;</span>) =&gt;</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">this</span>.$message(&#123;</span><br><span class="line">          <span class="attr">message</span>: <span class="string">&quot;状态更新成功&quot;</span>,</span><br><span class="line">          <span class="attr">type</span>: <span class="string">&quot;success&quot;</span></span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br></pre></td></tr></table></figure><h4 id="4-3添加文件上传（分布式）采用阿里云对象存储"><a href="#4-3添加文件上传（分布式）采用阿里云对象存储" class="headerlink" title="4.3添加文件上传（分布式）采用阿里云对象存储"></a>4.3添加文件上传（分布式）采用阿里云对象存储</h4><p><img src="image-20240401211353297.png" alt="image-20240401211353297"></p><p><img src="image-20240401212320723.png" alt="image-20240401212320723"></p><p>上传模型：防止密码泄露，缓解应用服务器压力</p><p><img src="image-20200428184029655.png" alt="image-20200428184029655"></p><p>查看阿里云关于文件上传的帮助： <a href="https://help.aliyun.com/document_detail/32009.html?spm=a2c4g.11186623.6.768.549d59aaWuZMGJ">https://help.aliyun.com/document_detail/32009.html?spm=a2c4g.11186623.6.768.549d59aaWuZMGJ</a> </p><p>采用spring cloud alibaba的start依赖更为简单 详情：</p><p><a href="https://github.com/alibaba/aliyun-spring-boot/blob/master/aliyun-spring-boot-samples/aliyun-oss-spring-boot-sample/README-zh.md">https://github.com/alibaba/aliyun-spring-boot/blob/master/aliyun-spring-boot-samples/aliyun-oss-spring-boot-sample/README-zh.md</a></p><p><strong>（1）.gulimall-third-party服务引入依赖</strong></p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--        阿里云对象存储--&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aliyun-oss-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.aliyun<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aliyun-java-sdk-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aliyun-spring-boot-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>2).在gulimall-third-party服务oss.yml配置文件中配置 OSS 服务对应的 accessKey、secretKey 和 endpoint。</strong></p><p><img src="image-20240401233044265.png" alt="image-20240401233044265"></p><p><strong>3).引入服务注册和配置中心</strong></p><p>pom.xml</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--        阿里云对象存储--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aliyun-oss-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.aliyun<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aliyun-java-sdk-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.atguigu.gulimall<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>gulimall-common<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span>//不排除要配置数据源，不然报错</span><br><span class="line">        <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-bootstrap<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring-cloud.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-alibaba-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>2021.0.5.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring-boot.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aliyun-spring-boot-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br></pre></td></tr></table></figure><p>bootstrap.properties:</p><figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring.application.name</span>=<span class="string">gulimall-third-party</span></span><br><span class="line"><span class="attr">spring.cloud.nacos.config.server-addr</span>=<span class="string">127.0.0.1:8848</span></span><br><span class="line"><span class="attr">spring.cloud.nacos.config.namespace</span>=<span class="string">a192f48e-ee37-40f5-bdd5-07f60caedf8c</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring.cloud.nacos.config.extension-configs[0].data-id</span>=<span class="string">oss.yml</span></span><br><span class="line"><span class="attr">spring.cloud.nacos.config.extension-configs[0].group</span>=<span class="string">DEFAULT_GROUP</span></span><br><span class="line"><span class="attr">spring.cloud.nacos.config.extension-configs[0].refresh</span>=<span class="string">true</span></span><br></pre></td></tr></table></figure><p>application.yml:</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">discovery:</span></span><br><span class="line">        <span class="attr">server-addr:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:8848</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">gulimall-third-party</span></span><br><span class="line"></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">30000</span></span><br></pre></td></tr></table></figure><p><strong>4）controller层代码</strong></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OssController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    OSS ossClient;</span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;alibaba.cloud.oss.endpoint&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String endpoint;</span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;alibaba.cloud.oss.bucket&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String bucket;</span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;alibaba.cloud.access-key&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String accessId;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/oss/policy&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> R <span class="title function_">policy</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">// 填写Host名称，格式为https://bucketname.endpoint。</span></span><br><span class="line">        <span class="comment">//https://gulimall20031201.oss-cn-chengdu.aliyuncs.com/%E7%94%B5%E8%84%91%E6%A1%8C%E9%9D%A2.jpg</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">host</span> <span class="operator">=</span> <span class="string">&quot;https://&quot;</span>+bucket+<span class="string">&quot;.&quot;</span>+endpoint;</span><br><span class="line">        <span class="comment">// 设置上传到OSS文件的前缀，可置空此项。置空后，文件将上传至Bucket的根目录下。</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">format</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(<span class="string">&quot;yyyy-MM-dd&quot;</span>).format(<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">        <span class="type">String</span> <span class="variable">dir</span> <span class="operator">=</span> format + <span class="string">&quot;/&quot;</span>;</span><br><span class="line">        Map&lt;String, String&gt; respMap = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">long</span> <span class="variable">expireTime</span> <span class="operator">=</span> <span class="number">30</span>;</span><br><span class="line">            <span class="type">long</span> <span class="variable">expireEndTime</span> <span class="operator">=</span> System.currentTimeMillis() + expireTime * <span class="number">1000</span>;</span><br><span class="line">            <span class="type">Date</span> <span class="variable">expiration</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Date</span>(expireEndTime);</span><br><span class="line">            <span class="comment">// PostObject请求最大可支持的文件大小为5 GB，即CONTENT_LENGTH_RANGE为5*1024*1024*1024。</span></span><br><span class="line">            <span class="type">PolicyConditions</span> <span class="variable">policyConds</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PolicyConditions</span>();</span><br><span class="line">            policyConds.addConditionItem(PolicyConditions.COND_CONTENT_LENGTH_RANGE, <span class="number">0</span>, <span class="number">1048576000</span>);</span><br><span class="line">            policyConds.addConditionItem(MatchMode.StartWith, PolicyConditions.COND_KEY, dir);</span><br><span class="line"></span><br><span class="line">            <span class="type">String</span> <span class="variable">postPolicy</span> <span class="operator">=</span> ossClient.generatePostPolicy(expiration, policyConds);</span><br><span class="line">            <span class="type">byte</span>[] binaryData = postPolicy.getBytes(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">            <span class="type">String</span> <span class="variable">encodedPolicy</span> <span class="operator">=</span> BinaryUtil.toBase64String(binaryData);</span><br><span class="line">            <span class="type">String</span> <span class="variable">postSignature</span> <span class="operator">=</span> ossClient.calculatePostSignature(postPolicy);</span><br><span class="line"></span><br><span class="line">            respMap = <span class="keyword">new</span> <span class="title class_">LinkedHashMap</span>&lt;String, String&gt;();</span><br><span class="line">            respMap.put(<span class="string">&quot;accessid&quot;</span>, accessId);</span><br><span class="line">            respMap.put(<span class="string">&quot;policy&quot;</span>, encodedPolicy);</span><br><span class="line">            respMap.put(<span class="string">&quot;signature&quot;</span>, postSignature);</span><br><span class="line">            respMap.put(<span class="string">&quot;dir&quot;</span>, dir);</span><br><span class="line">            respMap.put(<span class="string">&quot;host&quot;</span>, host);</span><br><span class="line">            respMap.put(<span class="string">&quot;expire&quot;</span>, String.valueOf(expireEndTime / <span class="number">1000</span>));</span><br><span class="line">            <span class="comment">// respMap.put(&quot;expire&quot;, formatISO8601Date(expiration));</span></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="comment">// Assert.fail(e.getMessage());</span></span><br><span class="line">            System.out.println(e.getMessage());</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            ossClient.shutdown();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> R.ok().put(<span class="string">&quot;data&quot;</span>,respMap);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>5）gateway网关配置路由</strong></p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">id:</span> <span class="string">third_party_route</span></span><br><span class="line">  <span class="attr">uri:</span> <span class="string">lb://gulimall-third-party</span></span><br><span class="line">  <span class="attr">predicates:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">Path=/api/thirdparty/**</span></span><br><span class="line">  <span class="attr">filters:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">RewritePath=/api/thirdparty/(?&lt;segment&gt;.*),/$\&#123;segment&#125;</span></span><br></pre></td></tr></table></figure><p><strong>6）启动成功测试</strong></p><p><img src="image-20240402210916615.png" alt="image-20240402210916615"></p><p>拿到对象存储服务端签名数据了</p><p><strong>7）前端发请求到后端拿到签名数据后直接post上传文件给阿里云（存在cors问题）</strong></p><p>上传组件：放置项目提供的upload文件夹到components目录下，一个是单文件上传，另外一个是多文件上传</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">PS D:\Project\gulimall\renren-fast-vue\src\components\upload&gt; ls</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    目录: D:\Project\gulimall\renren-fast-vue\src\components\upload</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Mode                LastWriteTime         Length Name</span><br><span class="line">----                -------------         ------ ----</span><br><span class="line">-a----  2020/4/29 星期三     12:0           3122 multiUpload.vue</span><br><span class="line">                                2</span><br><span class="line">-a----  2019/11/11 星期一     21:            343 policy.js</span><br><span class="line">                               20</span><br><span class="line">-a----  2020/4/29 星期三     12:0           3053 singleUpload.vue</span><br><span class="line">                                1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">PS D:\Project\gulimall\renren-fast-vue\src\components\upload&gt;</span><br></pre></td></tr></table></figure><p>修改这两个文件的配置后</p><p>开始执行上传，但是在上传过程中，出现了如下的问题：</p><p><img src="image-20200429124629150.png" alt="image-20200429124629150"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Access to XMLHttpRequest at &#x27;http://gulimall-images.oss-cn-shanghai.aliyuncs.com/&#x27; from origin &#x27;http://localhost:8001&#x27; has been blocked by CORS policy: Response to preflight request doesn&#x27;t pass access control check: No &#x27;Access-Control-Allow-Origin&#x27; header is present on the requested resource.</span><br></pre></td></tr></table></figure><p>这又是一个跨域的问题，解决方法就是在阿里云上开启跨域访问      数据安全-&gt;跨域设置：</p><p><img src="image-20240402214245512.png" alt="image-20240402214245512">![image-</p><p>再次执行文件上传。</p><p><strong>8）前端表单数据校验</strong></p><p>使用的是form表单自定义校验</p><p><img src="image-20240402225131728.png" alt="image-20240402225131728"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">firstLetter: [</span><br><span class="line">          &#123; validator: (rule, value, callback)=&gt;&#123;</span><br><span class="line">            if(value == &#x27;&#x27;)&#123;</span><br><span class="line">              callback(new Error(&#x27;首字母必须填写&#x27;));</span><br><span class="line">            &#125;else if(!/^[a-zA-Z]$/.test(value))&#123;</span><br><span class="line">              callback(new Error(&#x27;首字母必须a-z或者A-Z&#x27;));</span><br><span class="line">            &#125;else&#123;</span><br><span class="line">              callback();</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;, trigger: &quot;blur&quot; &#125;,</span><br><span class="line">        ],</span><br><span class="line">        sort: [&#123; validator: (rule, value, callback)=&gt;&#123;</span><br><span class="line">          if(value == &#x27;&#x27;)&#123;</span><br><span class="line">              callback(new Error(&#x27;排序字段必须填写&#x27;));</span><br><span class="line">            &#125;else if(!Number.isInteger(value) || value &lt; 0)&#123;</span><br><span class="line">              callback(new Error(&#x27;排序字段必须是一个大于0的整数&#x27;));</span><br><span class="line">            &#125;else&#123;</span><br><span class="line">              callback();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, trigger: &quot;blur&quot; &#125;],</span><br></pre></td></tr></table></figure><h4 id="4-4JSR303校验（-Valid注解）"><a href="#4-4JSR303校验（-Valid注解）" class="headerlink" title="4.4JSR303校验（@Valid注解）"></a>4.4JSR303校验（@Valid注解）</h4><p>​后端也要进行数据校验，因为我如果使用postman发请求就可以跳过前端校验，所以在后端最好也要进行校验。</p><p><strong>步骤1：使用校验注解</strong></p><p>在Java中提供了一系列的校验方式，它这些校验方式在“javax.validation.constraints”包中，提供了如@Email，@NotNull等注解。</p><p>在非空处理方式上提供了@NotNull，@Blank和@</p><p>（1）@NotNull：注解元素禁止为null，能够接收任何类型</p><p>（2）@NotEmpty：该注解修饰的字段不能为null或””</p><p>支持以下几种类型</p><p>CharSequence (length of character sequence is evaluated)</p><p>字符序列（字符序列长度的计算）</p><p>Collection (collection size is evaluated)<br>集合长度的计算</p><p>Map (map size is evaluated)<br>map长度的计算</p><p>Array (array length is evaluated)<br>数组长度的计算</p><p>（3）@NotBlank</p><p>The annotated element must not be null and must contain at least one non-whitespace character. Accepts CharSequence.<br>该注解不能为null，并且至少包含一个非空白字符。接收字符序列。</p><p><strong>步骤2：在请求方法种，使用校验注解@Valid，开启校验，</strong></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">  <span class="meta">@RequestMapping(&quot;/save&quot;)</span></span><br><span class="line">  <span class="keyword">public</span> R <span class="title function_">save</span><span class="params">(<span class="meta">@Valid</span> <span class="meta">@RequestBody</span> BrandEntity brand)</span>&#123;</span><br><span class="line">brandService.save(brand);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">return</span> R.ok();</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>测试： <a href="http://localhost:88/api/product/brand/save">http://localhost:88/api/product/brand/save</a> </p><p>在postman种发送上面的请求</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;timestamp&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2020-04-29T09:20:46.383+0000&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="number">400</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;error&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Bad Request&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;errors&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;codes&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;NotBlank.brandEntity.name&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;NotBlank.name&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;NotBlank.java.lang.String&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;NotBlank&quot;</span></span><br><span class="line">            <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;arguments&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;codes&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                        <span class="string">&quot;brandEntity.name&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="string">&quot;name&quot;</span></span><br><span class="line">                    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;arguments&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;defaultMessage&quot;</span><span class="punctuation">:</span> <span class="string">&quot;name&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;name&quot;</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;defaultMessage&quot;</span><span class="punctuation">:</span> <span class="string">&quot;不能为空&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;objectName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;brandEntity&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;field&quot;</span><span class="punctuation">:</span> <span class="string">&quot;name&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;rejectedValue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;bindingFailure&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;NotBlank&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;message&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Validation failed for object=&#x27;brandEntity&#x27;. Error count: 1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;path&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/product/brand/save&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>能够看到”defaultMessage”: “不能为空”，这些错误消息定义在“hibernate-validator”的“\org\hibernate\validator\ValidationMessages_zh_CN.properties”文件中。在该文件中定义了很多的错误规则：</p><figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">javax.validation.constraints.AssertFalse.message</span>     = <span class="string">只能为false</span></span><br><span class="line"><span class="attr">javax.validation.constraints.AssertTrue.message</span>      = <span class="string">只能为true</span></span><br><span class="line"><span class="attr">javax.validation.constraints.DecimalMax.message</span>      = <span class="string">必须小于或等于&#123;value&#125;</span></span><br><span class="line"><span class="attr">javax.validation.constraints.DecimalMin.message</span>      = <span class="string">必须大于或等于&#123;value&#125;</span></span><br><span class="line"><span class="attr">javax.validation.constraints.Digits.message</span>          = <span class="string">数字的值超出了允许范围(只允许在&#123;integer&#125;位整数和&#123;fraction&#125;位小数范围内)</span></span><br><span class="line"><span class="attr">javax.validation.constraints.Email.message</span>           = <span class="string">不是一个合法的电子邮件地址</span></span><br><span class="line"><span class="attr">javax.validation.constraints.Future.message</span>          = <span class="string">需要是一个将来的时间</span></span><br><span class="line"><span class="attr">javax.validation.constraints.FutureOrPresent.message</span> = <span class="string">需要是一个将来或现在的时间</span></span><br><span class="line"><span class="attr">javax.validation.constraints.Max.message</span>             = <span class="string">最大不能超过&#123;value&#125;</span></span><br><span class="line"><span class="attr">javax.validation.constraints.Min.message</span>             = <span class="string">最小不能小于&#123;value&#125;</span></span><br><span class="line"><span class="attr">javax.validation.constraints.Negative.message</span>        = <span class="string">必须是负数</span></span><br><span class="line"><span class="attr">javax.validation.constraints.NegativeOrZero.message</span>  = <span class="string">必须是负数或零</span></span><br><span class="line"><span class="attr">javax.validation.constraints.NotBlank.message</span>        = <span class="string">不能为空</span></span><br><span class="line"><span class="attr">javax.validation.constraints.NotEmpty.message</span>        = <span class="string">不能为空</span></span><br><span class="line"><span class="attr">javax.validation.constraints.NotNull.message</span>         = <span class="string">不能为null</span></span><br><span class="line"><span class="attr">javax.validation.constraints.Null.message</span>            = <span class="string">必须为null</span></span><br><span class="line"><span class="attr">javax.validation.constraints.Past.message</span>            = <span class="string">需要是一个过去的时间</span></span><br><span class="line"><span class="attr">javax.validation.constraints.PastOrPresent.message</span>   = <span class="string">需要是一个过去或现在的时间</span></span><br><span class="line"><span class="attr">javax.validation.constraints.Pattern.message</span>         = <span class="string">需要匹配正则表达式&quot;&#123;regexp&#125;&quot;</span></span><br><span class="line"><span class="attr">javax.validation.constraints.Positive.message</span>        = <span class="string">必须是正数</span></span><br><span class="line"><span class="attr">javax.validation.constraints.PositiveOrZero.message</span>  = <span class="string">必须是正数或零</span></span><br><span class="line"><span class="attr">javax.validation.constraints.Size.message</span>            = <span class="string">个数必须在&#123;min&#125;和&#123;max&#125;之间</span></span><br><span class="line"></span><br><span class="line"><span class="attr">org.hibernate.validator.constraints.CreditCardNumber.message</span>        = <span class="string">不合法的信用卡号码</span></span><br><span class="line"><span class="attr">org.hibernate.validator.constraints.Currency.message</span>                = <span class="string">不合法的货币 (必须是&#123;value&#125;其中之一)</span></span><br><span class="line"><span class="attr">org.hibernate.validator.constraints.EAN.message</span>                     = <span class="string">不合法的&#123;type&#125;条形码</span></span><br><span class="line"><span class="attr">org.hibernate.validator.constraints.Email.message</span>                   = <span class="string">不是一个合法的电子邮件地址</span></span><br><span class="line"><span class="attr">org.hibernate.validator.constraints.Length.message</span>                  = <span class="string">长度需要在&#123;min&#125;和&#123;max&#125;之间</span></span><br><span class="line"><span class="attr">org.hibernate.validator.constraints.CodePointLength.message</span>         = <span class="string">长度需要在&#123;min&#125;和&#123;max&#125;之间</span></span><br><span class="line"><span class="attr">org.hibernate.validator.constraints.LuhnCheck.message</span>               = <span class="string">$&#123;validatedValue&#125;的校验码不合法, Luhn模10校验和不匹配</span></span><br><span class="line"><span class="attr">org.hibernate.validator.constraints.Mod10Check.message</span>              = <span class="string">$&#123;validatedValue&#125;的校验码不合法, 模10校验和不匹配</span></span><br><span class="line"><span class="attr">org.hibernate.validator.constraints.Mod11Check.message</span>              = <span class="string">$&#123;validatedValue&#125;的校验码不合法, 模11校验和不匹配</span></span><br><span class="line"><span class="attr">org.hibernate.validator.constraints.ModCheck.message</span>                = <span class="string">$&#123;validatedValue&#125;的校验码不合法, $&#123;modType&#125;校验和不匹配</span></span><br><span class="line"><span class="attr">org.hibernate.validator.constraints.NotBlank.message</span>                = <span class="string">不能为空</span></span><br><span class="line"><span class="attr">org.hibernate.validator.constraints.NotEmpty.message</span>                = <span class="string">不能为空</span></span><br><span class="line"><span class="attr">org.hibernate.validator.constraints.ParametersScriptAssert.message</span>  = <span class="string">执行脚本表达式&quot;&#123;script&#125;&quot;没有返回期望结果</span></span><br><span class="line"><span class="attr">org.hibernate.validator.constraints.Range.message</span>                   = <span class="string">需要在&#123;min&#125;和&#123;max&#125;之间</span></span><br><span class="line"><span class="attr">org.hibernate.validator.constraints.SafeHtml.message</span>                = <span class="string">可能有不安全的HTML内容</span></span><br><span class="line"><span class="attr">org.hibernate.validator.constraints.ScriptAssert.message</span>            = <span class="string">执行脚本表达式&quot;&#123;script&#125;&quot;没有返回期望结果</span></span><br><span class="line"><span class="attr">org.hibernate.validator.constraints.URL.message</span>                     = <span class="string">需要是一个合法的URL</span></span><br><span class="line"></span><br><span class="line"><span class="attr">org.hibernate.validator.constraints.time.DurationMax.message</span>        = <span class="string">必须小于$&#123;inclusive == true ? &#x27;或等于&#x27; : &#x27;&#x27;&#125;$&#123;days == 0 ? &#x27;&#x27; : days += &#x27;天&#x27;&#125;$&#123;hours == 0 ? &#x27;&#x27; : hours += &#x27;小时&#x27;&#125;$&#123;minutes == 0 ? &#x27;&#x27; : minutes += &#x27;分钟&#x27;&#125;$&#123;seconds == 0 ? &#x27;&#x27; : seconds += &#x27;秒&#x27;&#125;$&#123;millis == 0 ? &#x27;&#x27; : millis += &#x27;毫秒&#x27;&#125;$&#123;nanos == 0 ? &#x27;&#x27; : nanos += &#x27;纳秒&#x27;&#125;</span></span><br><span class="line"><span class="attr">org.hibernate.validator.constraints.time.DurationMin.message</span>        = <span class="string">必须大于$&#123;inclusive == true ? &#x27;或等于&#x27; : &#x27;&#x27;&#125;$&#123;days == 0 ? &#x27;&#x27; : days += &#x27;天&#x27;&#125;$&#123;hours == 0 ? &#x27;&#x27; : hours += &#x27;小时&#x27;&#125;$&#123;minutes == 0 ? &#x27;&#x27; : minutes += &#x27;分钟&#x27;&#125;$&#123;seconds == 0 ? &#x27;&#x27; : seconds += &#x27;秒&#x27;&#125;$&#123;millis == 0 ? &#x27;&#x27; : millis += &#x27;毫秒&#x27;&#125;$&#123;nanos == 0 ? &#x27;&#x27; : nanos += &#x27;纳秒&#x27;&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>想要自定义错误消息，可以覆盖默认的错误提示信息，如@NotBlank的默认message是</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> NotBlank &#123;</span><br><span class="line"></span><br><span class="line">String <span class="title function_">message</span><span class="params">()</span> <span class="keyword">default</span> <span class="string">&quot;&#123;javax.validation.constraints.NotBlank.message&#125;&quot;</span>;</span><br></pre></td></tr></table></figure><p>可以在添加注解的时候，修改message：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@NotBlank(message = &quot;品牌名必须非空&quot;)</span></span><br><span class="line"><span class="keyword">private</span> String name;</span><br></pre></td></tr></table></figure><p>当再次发送请求时，得到的错误提示信息：</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;timestamp&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2020-04-29T09:36:04.125+0000&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="number">400</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;error&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Bad Request&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;errors&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;codes&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;NotBlank.brandEntity.name&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;NotBlank.name&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;NotBlank.java.lang.String&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;NotBlank&quot;</span></span><br><span class="line">            <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;arguments&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;codes&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                        <span class="string">&quot;brandEntity.name&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="string">&quot;name&quot;</span></span><br><span class="line">                    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;arguments&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;defaultMessage&quot;</span><span class="punctuation">:</span> <span class="string">&quot;name&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;name&quot;</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;defaultMessage&quot;</span><span class="punctuation">:</span> <span class="string">&quot;品牌名必须非空&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;objectName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;brandEntity&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;field&quot;</span><span class="punctuation">:</span> <span class="string">&quot;name&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;rejectedValue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;bindingFailure&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;NotBlank&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;message&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Validation failed for object=&#x27;brandEntity&#x27;. Error count: 1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;path&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/product/brand/save&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>但是这种返回的错误结果并不符合我们的业务需要。</p><p><strong>步骤3：给校验的Bean后，紧跟一个BindResult，就可以获取到校验的结果。拿到校验的结果，就可以自定义的封装。</strong></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> R <span class="title function_">save</span><span class="params">(<span class="meta">@Valid</span> <span class="meta">@RequestBody</span> BrandEntity brand, BindingResult result)</span>&#123;</span><br><span class="line">       Map&lt;String ,String&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">       <span class="keyword">if</span> (result.hasErrors())&#123;</span><br><span class="line">           result.getFieldErrors().forEach(item-&gt;&#123;</span><br><span class="line">               <span class="comment">//得到错误提示</span></span><br><span class="line">               <span class="type">String</span> <span class="variable">message</span> <span class="operator">=</span> item.getDefaultMessage();</span><br><span class="line">               <span class="comment">//得到错误的字段名</span></span><br><span class="line">               <span class="type">String</span> <span class="variable">field</span> <span class="operator">=</span> item.getField();</span><br><span class="line">               map.put(field,message);</span><br><span class="line">           &#125;);</span><br><span class="line">           <span class="keyword">return</span> R.error(<span class="number">400</span>,<span class="string">&quot;提交的数据不合法&quot;</span>).put(<span class="string">&quot;data&quot;</span>,map);</span><br><span class="line">       &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">           brandService.save(brand);</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> R.ok();</span><br><span class="line">   &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="image-20240402233045151.png" alt="image-20240402233045151"></p><p>这种是针对于该请求设置了一个内容校验，如果针对于每个请求都单独进行配置，显然不是太合适，实际上可以统一的对于异常进行处理。</p><p><strong>步骤4：统一异常处理</strong></p><p>可以使用SpringMvc所提供的@ControllerAdvice，通过“basePackages”能够说明处理哪些路径下的异常。也就是原save方法不变发生异常由异常处理类感知并捕获。</p><p>（1）抽取一个异常处理类</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.bigdata.gulimall.product.exception;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.bigdata.common.utils.R;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.validation.BindingResult;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.MethodArgumentNotValidException;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ControllerAdvice;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ExceptionHandler;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ResponseBody;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestControllerAdvice;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 集中处理所有异常</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@RestControllerAdvice(basePackages = &quot;com.atguigu.gulimall.product.controller&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GulimallExceptionControllerAdvice</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ExceptionHandler(value = MethodArgumentNotValidException.class)</span></span><br><span class="line">    <span class="keyword">public</span> R <span class="title function_">handleValidException</span><span class="params">(MethodArgumentNotValidException e)</span>&#123;</span><br><span class="line">        log.error(<span class="string">&quot;数据校验出现问题&#123;&#125;，异常类型&#123;&#125;&quot;</span>,e.getMessage(),e.getClass());</span><br><span class="line">        <span class="type">BindingResult</span> <span class="variable">result</span> <span class="operator">=</span> e.getBindingResult();</span><br><span class="line">        Map&lt;String ,String&gt; errMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        result.getFieldErrors().forEach(item-&gt;&#123;</span><br><span class="line">            errMap.put(item.getField(),item.getDefaultMessage());</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">return</span> R.error(BizCodeEnum.VALID_EXCEPTION.getCode(),BizCodeEnum.VALID_EXCEPTION.getMsg()).put(<span class="string">&quot;data&quot;</span>,errMap);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>（2）测试： <a href="http://localhost:88/api/product/brand/save">http://localhost:88/api/product/brand/save</a> </p><p><img src="image-20200429183334783.png" alt="image-20200429183334783"></p><p>（3）默认异常处理</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@ExceptionHandler(value = Throwable.class)</span></span><br><span class="line"> <span class="keyword">public</span> R <span class="title function_">handleException</span><span class="params">(Throwable throwable)</span>&#123;</span><br><span class="line">     log.error(<span class="string">&quot;未知异常&#123;&#125;,异常类型&#123;&#125;&quot;</span>,throwable.getMessage(),throwable.getClass());</span><br><span class="line">     <span class="keyword">return</span> R.error(BizCodeEnum.UNKNOW_EXEPTION.getCode(),BizCodeEnum.UNKNOW_EXEPTION.getMsg());</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>（4）错误状态码</p><p>上面代码中，针对于错误状态码，是我们进行随意定义的，然而正规开发过程中，错误状态码有着严格的定义规则，如该在项目中我们的错误状态码定义</p><p><img src="image-20200429183748249.png" alt="image-20200429183748249"></p><p>为了定义这些错误状态码，我们可以单独定义一个常量类，用来存储这些错误状态码</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.bigdata.common.exception;</span><br><span class="line"></span><br><span class="line"><span class="comment">/***</span></span><br><span class="line"><span class="comment"> * 错误码和错误信息定义类</span></span><br><span class="line"><span class="comment"> * 1. 错误码定义规则为5为数字</span></span><br><span class="line"><span class="comment"> * 2. 前两位表示业务场景，最后三位表示错误码。例如：100001。10:通用 001:系统未知异常</span></span><br><span class="line"><span class="comment"> * 3. 维护错误码后需要维护错误描述，将他们定义为枚举形式</span></span><br><span class="line"><span class="comment"> * 错误码列表：</span></span><br><span class="line"><span class="comment"> *  10: 通用</span></span><br><span class="line"><span class="comment"> *      001：参数格式校验</span></span><br><span class="line"><span class="comment"> *  11: 商品</span></span><br><span class="line"><span class="comment"> *  12: 订单</span></span><br><span class="line"><span class="comment"> *  13: 购物车</span></span><br><span class="line"><span class="comment"> *  14: 物流</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> <span class="title class_">BizCodeEnum</span> &#123;</span><br><span class="line"></span><br><span class="line">    UNKNOW_EXEPTION(<span class="number">10000</span>,<span class="string">&quot;系统未知异常&quot;</span>),</span><br><span class="line"></span><br><span class="line">    VALID_EXCEPTION( <span class="number">10001</span>,<span class="string">&quot;参数格式校验失败&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> code;</span><br><span class="line">    <span class="keyword">private</span> String msg;</span><br><span class="line"></span><br><span class="line">    BizCodeEnum(<span class="type">int</span> code, String msg) &#123;</span><br><span class="line">        <span class="built_in">this</span>.code = code;</span><br><span class="line">        <span class="built_in">this</span>.msg = msg;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getCode</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> code;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getMsg</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> msg;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>（5）测试： <a href="http://localhost:88/api/product/brand/save">http://localhost:88/api/product/brand/save</a> </p><img src="D:/黑马代码资料/谷粒商城/谷粒商城/Guli Mall/文档/三阶段大纲md/images/image-20200429191830967.png" alt="image-20200429191830967" style="zoom:67%;"><h4 id="4-4-分组校验功能（完成多场景的复杂校验-Validated注解）"><a href="#4-4-分组校验功能（完成多场景的复杂校验-Validated注解）" class="headerlink" title="4.4. 分组校验功能（完成多场景的复杂校验@Validated注解）"></a>4.4. 分组校验功能（完成多场景的复杂校验@Validated注解）</h4><p><strong>1、在gulimall-common服务创建校验空接口</strong></p><p><img src="image-20240403001535814.png" alt="image-20240403001535814"></p><p><strong>2、给校验注解，标注上groups，指定什么情况下才需要进行校验</strong></p><p>如：指定在更新和添加的时候，都需要进行校验</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@NotEmpty(groups = &#123;AddGroup.class&#125;)</span></span><br><span class="line"><span class="meta">@URL(message = &quot;logo必须是一个合法的url地址&quot;,groups = &#123;AddGroup.class,UpdateGroup.class&#125;)</span></span><br><span class="line"><span class="keyword">private</span> String logo;</span><br></pre></td></tr></table></figure><p>在这种情况下，没有指定分组的校验注解，<em>默认是不起作用</em>的。想要起作用就必须要加groups。</p><p><strong>2、业务方法参数上使用@Validated注解</strong></p><p><img src="image-20240403001746868.png" alt="image-20240403001746868"></p><p>@Validated的value方法：<br> 指定一个或多个验证组以应用于此注释启动的验证步骤。 </p><p> JSR-303 将验证组定义为自定义注释，应用程序声明的唯一目的是将它们用作类型安全组参数，如 SpringValidatorAdapter 中实现的那样。 </p><p> 其他SmartValidator 实现也可以以其他方式支持类参数。 </p><p><strong>3、默认情况下，在分组校验情况下，没有指定指定分组的校验注解，将不会生效，它只会在不分组的情况下生效。</strong></p><h4 id="4-5-自定义校验"><a href="#4-5-自定义校验" class="headerlink" title="4.5. 自定义校验"></a>4.5. 自定义校验</h4><p><strong>1、编写一个自定义的校验注解</strong></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="meta">@Constraint(validatedBy = &#123; ListValueConstraintValidator.class&#125;)</span><span class="comment">/*关联注解器-可以指定多个*/</span></span><br><span class="line"><span class="meta">@Target(&#123; METHOD, FIELD, ANNOTATION_TYPE, CONSTRUCTOR, PARAMETER, TYPE_USE &#125;)</span></span><br><span class="line"><span class="meta">@Retention(RUNTIME)</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> ListValue &#123;</span><br><span class="line">    String <span class="title function_">message</span><span class="params">()</span> <span class="keyword">default</span> <span class="string">&quot;&#123;com.bigdata.common.valid.ListValue.message&#125;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    Class&lt;?&gt;[] groups() <span class="keyword">default</span> &#123; &#125;;</span><br><span class="line"></span><br><span class="line">    Class&lt;? <span class="keyword">extends</span> <span class="title class_">Payload</span>&gt;[] payload() <span class="keyword">default</span> &#123; &#125;;</span><br><span class="line">     <span class="comment">// 可以指定数据只能是value数组指定的值</span></span><br><span class="line">    <span class="type">int</span>[] value() <span class="keyword">default</span> &#123;&#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>2、编写一个自定义的校验器</strong></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ListValueConstraintValidator</span> <span class="keyword">implements</span> <span class="title class_">ConstraintValidator</span>&lt;ListValue,Integer&gt; &#123;</span><br><span class="line">    <span class="keyword">private</span> Set&lt;Integer&gt; set=<span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;&gt;();</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">initialize</span><span class="params">(ListValue constraintAnnotation)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] value = constraintAnnotation.value();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i : value) &#123;</span><br><span class="line">            set.add(i);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isValid</span><span class="params">(Integer value, ConstraintValidatorContext context)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span>  set.contains(value);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>3、编写ValidationMessages.properties</strong></p><figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">com.atguigu.common.valid.ListValue.message</span>=<span class="string">必须提交指定的值</span></span><br></pre></td></tr></table></figure><p><strong>4、关联自定义的校验器和自定义的校验注解</strong></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Constraint(validatedBy = &#123; ListValueConstraintValidator.class&#125;)</span></span><br></pre></td></tr></table></figure><p><strong>5、使用实例</strong></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 显示状态[0-不显示；1-显示]</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@ListValue(value = &#123;0,1&#125;,groups =&#123;AddGroup.class&#125;)</span></span><br><span class="line"><span class="keyword">private</span> Integer showStatus;</span><br></pre></td></tr></table></figure><p><strong>6、postman测试发现乱码(必须重启product服务，改了好多次发现必须重启后服务才能生效)</strong></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;msg&quot;: &quot;参数格式校验失败&quot;,</span><br><span class="line">    &quot;code&quot;: 10001,</span><br><span class="line">    &quot;data&quot;: &#123;</span><br><span class="line">        &quot;logo&quot;: &quot;不能为空&quot;,</span><br><span class="line">        &quot;showStatus&quot;: &quot;å¿é¡»æäº¤æå®çå¼&quot;,</span><br><span class="line">        &quot;sort&quot;: &quot;不能为null&quot;,</span><br><span class="line">        &quot;firstLetter&quot;: &quot;不能为空&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">setting -&gt; file encoding</span><br></pre></td></tr></table></figure><p><img src="image-20240403225903690.png" alt="image-20240403225903690"></p><p>然后添加gulimall-common的resource文件</p><p><img src="image-20240403225958128.png" alt="image-20240403225958128"></p><h4 id="4-6品牌和分类的关联与级联更新"><a href="#4-6品牌和分类的关联与级联更新" class="headerlink" title="4.6品牌和分类的关联与级联更新"></a>4.6品牌和分类的关联与级联更新</h4><p><strong>1.品牌和分类的关联</strong></p><p>​    比如小米品牌和分类的关系是多对多（小米不仅可以有手机还有平板，然后手机不仅有小米还有华为等等），那么就需要维护一张关系表pms_category_brand_relation。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 查询品牌关联的所有分类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> brandId</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@GetMapping(&quot;/catelog/list&quot;)</span></span><br><span class="line"><span class="comment">//@RequiresPermissions(&quot;product:categorybrandrelation:list&quot;)</span></span><br><span class="line"><span class="keyword">public</span> R <span class="title function_">categoylist</span><span class="params">(<span class="meta">@RequestParam(&quot;brandId&quot;)</span> Long brandId)</span>&#123;<span class="comment">//前端传id</span></span><br><span class="line">    List&lt;CategoryBrandRelationEntity&gt; data = categoryBrandRelationService.list(<span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;CategoryBrandRelationEntity&gt;().eq(<span class="string">&quot;brand_id&quot;</span>, brandId));</span><br><span class="line">    <span class="keyword">return</span> R.ok().put(<span class="string">&quot;data&quot;</span>, data);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/save&quot;)</span></span><br><span class="line">    <span class="comment">//@RequiresPermissions(&quot;product:categorybrandrelation:save&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> R <span class="title function_">save</span><span class="params">(<span class="meta">@RequestBody</span> CategoryBrandRelationEntity categoryBrandRelation)</span>&#123;</span><br><span class="line">categoryBrandRelationService.saveDetail(categoryBrandRelation);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> R.ok();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">saveDetail</span><span class="params">(CategoryBrandRelationEntity categoryBrandRelation)</span> &#123;</span><br><span class="line">    <span class="type">Long</span> <span class="variable">brandId</span> <span class="operator">=</span> categoryBrandRelation.getBrandId();</span><br><span class="line">    <span class="type">Long</span> <span class="variable">catelogId</span> <span class="operator">=</span> categoryBrandRelation.getCatelogId();</span><br><span class="line">    <span class="type">CategoryEntity</span> <span class="variable">categoryEntity</span> <span class="operator">=</span> categoryDao.selectById(catelogId);</span><br><span class="line">    <span class="type">BrandEntity</span> <span class="variable">brandEntity</span> <span class="operator">=</span> brandDao.selectById(brandId);</span><br><span class="line">    categoryBrandRelation.setBrandName(brandEntity.getName());</span><br><span class="line">    categoryBrandRelation.setCatelogName(categoryEntity.getName());</span><br><span class="line">    <span class="built_in">this</span>.save(categoryBrandRelation);<span class="comment">//将name也保存</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>2.级联更新</strong></p><p><strong>1.修改BrandController的Update</strong></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"> <span class="meta">@RequestMapping(&quot;/update&quot;)</span></span><br><span class="line">  <span class="comment">//@RequiresPermissions(&quot;product:brand:update&quot;)</span></span><br><span class="line">  <span class="keyword">public</span> R <span class="title function_">update</span><span class="params">(<span class="meta">@Validated(&#123;UpdateGroup.class&#125;)</span> <span class="meta">@RequestBody</span> BrandEntity brand)</span>&#123;</span><br><span class="line">brandService.updateDetail(brand);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">return</span> R.ok();</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p><strong>2.新增brandserviceImpl方法</strong></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updateDetail</span><span class="params">(BrandEntity brand)</span> &#123;</span><br><span class="line">    <span class="comment">//保证冗余字段的数据一致</span></span><br><span class="line">    <span class="built_in">this</span>.updateById(brand);</span><br><span class="line">    <span class="keyword">if</span> (!StringUtils.isEmpty(brand.getName()))&#123;</span><br><span class="line">        <span class="comment">//同步更新其他表</span></span><br><span class="line">        categoryBrandRelationService.updateBrand(brand.getBrandId(),brand.getName());</span><br><span class="line"></span><br><span class="line">        <span class="comment">//TODO 更新其他关联</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>3.修改CategoryController的Update</strong></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"> <span class="meta">@RequestMapping(&quot;/update&quot;)</span></span><br><span class="line">  <span class="comment">//@RequiresPermissions(&quot;product:category:update&quot;)</span></span><br><span class="line">  <span class="keyword">public</span> R <span class="title function_">update</span><span class="params">(<span class="meta">@RequestBody</span> CategoryEntity category)</span>&#123;</span><br><span class="line">categoryService.updateCascade(category);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">return</span> R.ok();</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p><strong>4.新增CategoryServiceImpl的updateCascade方法</strong></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updateCascade</span><span class="params">(CategoryEntity category)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.updateById(category);</span><br><span class="line">    <span class="keyword">if</span> (!StringUtils.isEmpty(category.getName()))&#123;</span><br><span class="line">        <span class="comment">//级联更新</span></span><br><span class="line">        categoryBrandRelationService.updateCategory(category.getCatId(),category.getName());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>5.新增CategoryBrandRelationServiceImpl修改品牌和修改分类方法</strong></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updateBrand</span><span class="params">(Long brandId, String name)</span> &#123;</span><br><span class="line">    <span class="type">CategoryBrandRelationEntity</span> <span class="variable">categoryBrandRelationEntity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CategoryBrandRelationEntity</span>();</span><br><span class="line">    categoryBrandRelationEntity.setBrandId(brandId);</span><br><span class="line">    categoryBrandRelationEntity.setBrandName(name);</span><br><span class="line">    System.out.println(<span class="string">&quot;categoryBrandRelationEntity&quot;</span>+categoryBrandRelationEntity);</span><br><span class="line">    <span class="built_in">this</span>.update(categoryBrandRelationEntity,<span class="keyword">new</span> <span class="title class_">UpdateWrapper</span>&lt;CategoryBrandRelationEntity&gt;().eq(<span class="string">&quot;brand_id&quot;</span>,brandId));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updateCategory</span><span class="params">(Long catId, String name)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.baseMapper.updateCategory(catId,name);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>6.效果:修改品牌名和分类名级联修改</strong></p><p><img src="image-20240405220805328.png" alt="image-20240405220805328"></p><h3 id="5-平台属性—属性分组"><a href="#5-平台属性—属性分组" class="headerlink" title="5.平台属性—属性分组"></a>5.平台属性—属性分组</h3><h4 id="5-1-点击子组件，父组件触发事件"><a href="#5-1-点击子组件，父组件触发事件" class="headerlink" title="5.1. 点击子组件，父组件触发事件"></a>5.1. 点击子组件，父组件触发事件</h4><p>现在想要实现点击菜单的左边，能够实现在右边展示数据</p><p><img src="image-20200430215649355.png" alt="image-20200430215649355"></p><p>父子组件传递数据：</p><p><strong>1）子组件给父组件传递数据，事件机制；</strong></p><p>在category中绑定node-click事件，</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;el-tree :data=&quot;menus&quot; :props=&quot;defaultProps&quot; node-key=&quot;catId&quot; ref=&quot;menuTree&quot; @node-click=&quot;nodeClick&quot;&gt;&lt;/el-tree&gt;</span><br></pre></td></tr></table></figure><p><strong>2）子组件给父组件发送一个事件，携带上数据；</strong></p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title function_">nodeClick</span>(<span class="params">data,Node,component</span>)&#123;</span><br><span class="line">   <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;子组件&quot;</span>,data,<span class="title class_">Node</span>,component);</span><br><span class="line">   <span class="variable language_">this</span>.$emit(<span class="string">&quot;tree-node-click&quot;</span>,data,<span class="title class_">Node</span>,component);</span><br><span class="line">&#125;, </span><br></pre></td></tr></table></figure><p>this.$emit(事件名,”携带的数据”);</p><p><strong>3）父组件中的获取发送的事件</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;category @tree-node-click=&quot;treeNodeClick&quot;&gt;&lt;/category&gt;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//获取发送的事件数据</span></span><br><span class="line"><span class="title function_">treeNodeClick</span>(<span class="params">data,Node,component</span>)&#123;</span><br><span class="line"> <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;attgroup感知到的category的节点被点击&quot;</span>,data,<span class="title class_">Node</span>,component);</span><br><span class="line"> <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;刚才被点击的菜单ID&quot;</span>,data.<span class="property">catId</span>);</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p><img src="image-20240404192909422.png" alt="image-20240404192909422"></p><h4 id="5-2分组查询"><a href="#5-2分组查询" class="headerlink" title="5.2分组查询"></a>5.2分组查询</h4><p><strong>1.AttrGroupController修改新增为携带catelogId</strong></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/list/&#123;catelogId&#125;&quot;)</span></span><br><span class="line"><span class="comment">//@RequiresPermissions(&quot;product:attrgroup:list&quot;)</span></span><br><span class="line"><span class="keyword">public</span> R <span class="title function_">list</span><span class="params">(<span class="meta">@RequestParam</span> Map&lt;String, Object&gt; params, <span class="meta">@PathVariable(&quot;catelogId&quot;)</span> Long catelogId)</span>&#123;</span><br><span class="line">    <span class="comment">//PageUtils page = attrGroupService.queryPage(params);</span></span><br><span class="line">    <span class="type">PageUtils</span> <span class="variable">page</span> <span class="operator">=</span> attrGroupService.queryPage(params,catelogId);</span><br><span class="line">    <span class="keyword">return</span> R.ok().put(<span class="string">&quot;page&quot;</span>, page);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>2.service层实现类添加方法</strong></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> PageUtils <span class="title function_">queryPage</span><span class="params">(Map&lt;String, Object&gt; params, Long catelogId)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (catelogId == <span class="number">0</span>)&#123; <span class="comment">//如果分类等于0，查询出所有的数据，前端可以设置</span></span><br><span class="line">        IPage&lt;AttrGroupEntity&gt; page = <span class="built_in">this</span>.page(</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Query</span>&lt;AttrGroupEntity&gt;().getPage(params),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;AttrGroupEntity&gt;()</span><br><span class="line">        );</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">PageUtils</span>(page);</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">//select * from pms_attr_group where catelog_id = ? and ()</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">key</span> <span class="operator">=</span> (String) params.get(<span class="string">&quot;key&quot;</span>);</span><br><span class="line">        QueryWrapper&lt;AttrGroupEntity&gt; wrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;AttrGroupEntity&gt;().eq(<span class="string">&quot;catelog_id&quot;</span>,catelogId);</span><br><span class="line">        <span class="keyword">if</span> (!StringUtils.isBlank(key))&#123;</span><br><span class="line">            wrapper.and((obj)-&gt;&#123; <span class="comment">//可以按两个搜索条件查询</span></span><br><span class="line">                obj.eq(<span class="string">&quot;attr_group_id&quot;</span>,key).or().like(<span class="string">&quot;attr_group_name&quot;</span>,key);</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        IPage&lt;AttrGroupEntity&gt; page = <span class="built_in">this</span>.page(<span class="keyword">new</span> <span class="title class_">Query</span>&lt;AttrGroupEntity&gt;().getPage(params),</span><br><span class="line">                wrapper);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">PageUtils</span>(page);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>3.测试</strong></p><p><img src="image-20240404205537174.png" alt="image-20240404205537174"></p><h4 id="5-3分组新增和级联选择器"><a href="#5-3分组新增和级联选择器" class="headerlink" title="5.3分组新增和级联选择器"></a>5.3分组新增和级联选择器</h4><p><strong>1.新增时如果想要出现级联效果attrgroup-add-or-update.vue</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"> &lt;el-form-item label=&quot;所属分类id&quot; prop=&quot;catelogId&quot;&gt;</span><br><span class="line">        &lt;!-- &lt;el-input v-model=&quot;dataForm.catelogId&quot; placeholder=&quot;所属分类id&quot;&gt;&lt;/el-input&gt; --&gt;</span><br><span class="line">        &lt;el-cascader</span><br><span class="line">          v-model=&quot;dataForm.catelogId&quot;</span><br><span class="line">          :options=&quot;categorys&quot;</span><br><span class="line">          @change=&quot;handleChange&quot;</span><br><span class="line">          :props=&quot;props&quot;</span><br><span class="line">        &gt;&lt;/el-cascader&gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line">return &#123;</span><br><span class="line">      props:&#123;</span><br><span class="line">        value:&quot;catId&quot;,</span><br><span class="line">        label:&quot;name&quot;,</span><br><span class="line">        children:&quot;children&quot;</span><br><span class="line">      &#125;,</span><br><span class="line">categorys: []//存放分类获取到的数据</span><br><span class="line">&#125;</span><br><span class="line">getCategorys()&#123;</span><br><span class="line">      this.$http(&#123;</span><br><span class="line">        url: this.$http.adornUrl(&quot;/product/category/list/tree&quot;),</span><br><span class="line">        method: &quot;get&quot;,</span><br><span class="line">      &#125;).then((&#123; data &#125;) =&gt; &#123;</span><br><span class="line">        console.log(&quot;成功获取到菜单数据&quot;, data.tree);</span><br><span class="line">        this.categorys = data.tree;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br></pre></td></tr></table></figure><p><strong>2.但是分类多出了一列，可知后端返回的children有空列。</strong></p><p><img src="image-20240404210041007.png" alt="image-20240404210041007"></p><p><img src="image-20240404210451638.png" alt="image-20240404210451638"></p><p><strong>3.修改后端代码加入注解@JsonInclude</strong></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 子分类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@JsonInclude(JsonInclude.Include.NON_EMPTY)</span><span class="comment">//只有当字段不为空的时候才响应给前端</span></span><br><span class="line"><span class="meta">@TableField(exist = false)</span></span><br><span class="line"><span class="keyword">private</span> List&lt;CategoryEntity&gt; children;</span><br></pre></td></tr></table></figure><p><img src="image-20240404210847327.png" alt="image-20240404210847327"></p><p>可知children空数组没有响应给前端了</p><h4 id="5-4分组修改和级联选择器回显"><a href="#5-4分组修改和级联选择器回显" class="headerlink" title="5.4分组修改和级联选择器回显"></a>5.4分组修改和级联选择器回显</h4><p>点击修改时所属分类不回显</p><p><strong>原因：</strong></p><p><img src="image-20240404212041875.png" alt="image-20240404212041875"></p><p>可知后端返回数据只有catelogId：225，所以不会回显。</p><p><strong>解决：</strong></p><p>在attrgroup-add-or-update.vue的     init(id)方法回显数据时查出catelgId完整路径</p><p><strong>1.AttrGroupEntity添加catelogPath属性</strong></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@TableField(exist = false)</span></span><br><span class="line"><span class="keyword">private</span> Long[] catelogPath;</span><br></pre></td></tr></table></figure><p><strong>2.AttrGroupController.java修改返回数据将全路径返回</strong></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"> <span class="meta">@RequestMapping(&quot;/info/&#123;attrGroupId&#125;&quot;)</span></span><br><span class="line">  <span class="comment">//@RequiresPermissions(&quot;product:attrgroup:info&quot;)</span></span><br><span class="line">  <span class="keyword">public</span> R <span class="title function_">info</span><span class="params">(<span class="meta">@PathVariable(&quot;attrGroupId&quot;)</span> Long attrGroupId)</span>&#123;</span><br><span class="line"><span class="type">AttrGroupEntity</span> <span class="variable">attrGroup</span> <span class="operator">=</span> attrGroupService.getById(attrGroupId);</span><br><span class="line">      <span class="type">Long</span> <span class="variable">catelogId</span> <span class="operator">=</span> attrGroup.getCatelogId();</span><br><span class="line">      Long[] path = categoryService.findCategoryPath(catelogId);</span><br><span class="line">      attrGroup.setCatelogPath(path);</span><br><span class="line">      <span class="keyword">return</span> R.ok().put(<span class="string">&quot;attrGroup&quot;</span>, attrGroup);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p><strong>3.实现逻辑CategoryServiceImpl.java</strong></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> Long[] findCategoryPath(Long catelogId) &#123;</span><br><span class="line">    List&lt;Long&gt; paths = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    List&lt;Long&gt; parentPath = findParentPath(catelogId, paths);</span><br><span class="line">    <span class="comment">//翻转[2,25,225]</span></span><br><span class="line">    Collections.reverse(parentPath);</span><br><span class="line">    <span class="keyword">return</span> (Long[]) parentPath.toArray(<span class="keyword">new</span> <span class="title class_">Long</span>[parentPath.size()]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//逆序【225,25,2】</span></span><br><span class="line"><span class="keyword">private</span> List&lt;Long&gt; <span class="title function_">findParentPath</span><span class="params">(Long catelogId, List&lt;Long&gt; paths)</span> &#123;</span><br><span class="line">    paths.add(catelogId);</span><br><span class="line">    <span class="type">CategoryEntity</span> <span class="variable">category</span> <span class="operator">=</span> <span class="built_in">this</span>.getById(catelogId);</span><br><span class="line">    <span class="keyword">if</span> (category.getParentCid() != <span class="number">0</span>)&#123;</span><br><span class="line">        findParentPath(category.getParentCid(),paths);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> paths;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>4.前端init方法</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">this.dataForm.catelogPath = data.attrGroup.catelogPath;</span><br></pre></td></tr></table></figure><h3 id="6-平台属性—基本属性-规格参数和销售属性"><a href="#6-平台属性—基本属性-规格参数和销售属性" class="headerlink" title="6.平台属性—基本属性&#x2F;规格参数和销售属性"></a>6.平台属性—基本属性&#x2F;规格参数和销售属性</h3><p>规格参数新增时，请求的URL：Request URL: </p><p><a href="http://localhost:88/api/product/attr/base/list/0?t=1588731762158&page=1&limit=10&key=">http://localhost:88/api/product/attr/base/list/0?t=1588731762158&amp;page=1&amp;limit=10&amp;key=</a></p><p>当有新增字段时，我们往往会在entity实体类中新建一个字段，并标注数据库中不存在该字段，然而这种方式并不规范</p><p><img src="1588732021702.png" alt="1588732021702"></p><p>比较规范的做法是，新建一个vo文件夹，将每种不同的对象，按照它的功能进行了划分。在java中，涉及到了这几种类型</p><p><img src="1588732152646.png" alt="1588732152646"></p><h4 id="6-1新增属性"><a href="#6-1新增属性" class="headerlink" title="6.1新增属性"></a>6.1新增属性</h4><p><strong>常量</strong></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ProductConstant</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">enum</span> <span class="title class_">AttrEnum</span>&#123;</span><br><span class="line">        ATTR_TYPE_BASE(<span class="number">1</span>,<span class="string">&quot;基本属性&quot;</span>),ATTR_TYPE_SALE(<span class="number">0</span>,<span class="string">&quot;销售属性&quot;</span>);</span><br><span class="line"></span><br><span class="line">        AttrEnum(<span class="type">int</span> code,String msg)&#123;</span><br><span class="line">            <span class="built_in">this</span>.code = code;</span><br><span class="line">            <span class="built_in">this</span>.msg = msg;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">private</span> <span class="type">int</span> code;</span><br><span class="line">        <span class="keyword">private</span> String msg;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getCode</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> code;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> String <span class="title function_">getMsg</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> msg;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Request URL: <a href="http://localhost:88/api/product/attr/save%EF%BC%8C%E7%8E%B0%E5%9C%A8%E7%9A%84%E6%83%85%E5%86%B5%E6%98%AF%EF%BC%8C%E5%AE%83%E5%9C%A8%E4%BF%9D%E5%AD%98%E7%9A%84%E6%97%B6%E5%80%99%EF%BC%8C%E5%8F%AA%E6%98%AF%E4%BF%9D%E5%AD%98%E4%BA%86attr%EF%BC%8C%E5%B9%B6%E6%B2%A1%E6%9C%89%E4%BF%9D%E5%AD%98attrgroup%EF%BC%8C%E4%B8%BA%E4%BA%86%E8%A7%A3%E5%86%B3%E8%BF%99%E4%B8%AA%E9%97%AE%E9%A2%98%EF%BC%8C%E6%88%91%E4%BB%AC%E6%96%B0%E5%BB%BA%E4%BA%86%E4%B8%80%E4%B8%AAvo/AttrVo%EF%BC%8C%E5%9C%A8%E5%8E%9FAttrEntity%E5%9F%BA%E7%A1%80%E4%B8%8A%E5%A2%9E%E5%8A%A0%E4%BA%86attrGroupId%E5%AD%97%E6%AE%B5%EF%BC%8C%E4%BD%BF%E5%BE%97%E4%BF%9D%E5%AD%98%E6%96%B0%E5%A2%9E%E6%95%B0%E6%8D%AE%E7%9A%84%E6%97%B6%E5%80%99%EF%BC%8C%E4%B9%9F%E4%BF%9D%E5%AD%98%E4%BA%86%E5%AE%83%E4%BB%AC%E4%B9%8B%E9%97%B4%E7%9A%84%E5%85%B3%E7%B3%BB%E3%80%82">http://localhost:88/api/product/attr/save，现在的情况是，它在保存的时候，只是保存了attr，并没有保存attrgroup，为了解决这个问题，我们新建了一个vo/AttrVo，在原AttrEntity基础上增加了attrGroupId字段，使得保存新增数据的时候，也保存了它们之间的关系。</a></p><p>通过” BeanUtils.copyProperties(attr,attrEntity);”能够实现在两个Bean之间拷贝数据，但是两个Bean的字段要相同</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"> <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">saveAttr</span><span class="params">(AttrVo attr)</span> &#123;</span><br><span class="line">     <span class="type">AttrEntity</span> <span class="variable">attrEntity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AttrEntity</span>();</span><br><span class="line">     BeanUtils.copyProperties(attr,attrEntity);</span><br><span class="line">     <span class="built_in">this</span>.save(attrEntity);</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p><strong>AttrServiceImpl类</strong></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Transactional</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">saveAttr</span><span class="params">(AttrVo attrVo)</span> &#123;</span><br><span class="line">    <span class="type">AttrEntity</span> <span class="variable">attrEntity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AttrEntity</span>();</span><br><span class="line">    BeanUtils.copyProperties(attrVo,attrEntity);</span><br><span class="line">    <span class="comment">//保存基本数据</span></span><br><span class="line">    <span class="built_in">this</span>.save(attrEntity);</span><br><span class="line">    <span class="comment">//再保存分组到关系表</span></span><br><span class="line">    <span class="keyword">if</span> (attrVo.getAttrType() == ProductConstant.AttrEnum.ATTR_TYPE_BASE.getCode() &amp;&amp; attrVo.getAttrGroupId() != <span class="literal">null</span>)&#123;</span><br><span class="line">        <span class="comment">//判断attrType是否等于1，如果不是1就不添加到关联表</span></span><br><span class="line">            <span class="type">AttrAttrgroupRelationEntity</span> <span class="variable">relationEntity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AttrAttrgroupRelationEntity</span>();</span><br><span class="line">            relationEntity.setAttrId(attrEntity.getAttrId());</span><br><span class="line">            relationEntity.setAttrGroupId(attrVo.getAttrGroupId());</span><br><span class="line">            attrAttrgroupRelationService.save(relationEntity);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>问题：现在有两个查询，一个是查询部分，另外一个是查询全部，但是又必须这样来做吗？还是有必要的，但是可以在后台进行设计，两种查询是根据catId是否为零进行区分的。</p><h4 id="6-2查询属性（基本属性和销售属性）、分组和分类名字"><a href="#6-2查询属性（基本属性和销售属性）、分组和分类名字" class="headerlink" title="6.2查询属性（基本属性和销售属性）、分组和分类名字"></a>6.2查询属性（基本属性和销售属性）、分组和分类名字</h4><p><strong>查询前端响应会多出两个字段</strong></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AttrRespVo</span> <span class="keyword">extends</span> <span class="title class_">AttrVo</span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 分类名字</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String catelogName;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 分组名字</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String groupName;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>AttrController类</strong></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/base/list/&#123;catelogId&#125;&quot;)</span></span><br><span class="line"><span class="keyword">public</span> R <span class="title function_">baseAttrList</span><span class="params">(<span class="meta">@RequestParam</span> Map&lt;String ,Object&gt; params,</span></span><br><span class="line"><span class="params">                      <span class="meta">@PathVariable</span> Long catelogId)</span>&#123;</span><br><span class="line">    <span class="type">PageUtils</span> <span class="variable">page</span> <span class="operator">=</span> attrService.queryBasePage(params,catelogId);</span><br><span class="line">    <span class="keyword">return</span> R.ok().put(<span class="string">&quot;page&quot;</span>,page);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//修改后-----------&gt;</span></span><br><span class="line"><span class="meta">@GetMapping(&quot;/&#123;attrType&#125;/list/&#123;catelogId&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> R <span class="title function_">baseAttrList</span><span class="params">(<span class="meta">@RequestParam</span> Map&lt;String ,Object&gt; params,</span></span><br><span class="line"><span class="params">                          <span class="meta">@PathVariable(&quot;catelogId&quot;)</span> Long catelogId,</span></span><br><span class="line"><span class="params">                          <span class="meta">@PathVariable(&quot;attrType&quot;)</span> String attrType)</span>&#123;</span><br><span class="line">        <span class="type">PageUtils</span> <span class="variable">page</span> <span class="operator">=</span> attrService.queryBasePage(params,catelogId,attrType);</span><br><span class="line">        <span class="keyword">return</span> R.ok().put(<span class="string">&quot;page&quot;</span>,page);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><strong>AttrServiceImpl类</strong></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> PageUtils <span class="title function_">queryBasePage</span><span class="params">(Map&lt;String, Object&gt; params, Long catelogId)</span> &#123;</span><br><span class="line">    <span class="comment">//QueryWrapper&lt;AttrEntity&gt; wrapper = new QueryWrapper&lt;&gt;();</span></span><br><span class="line">    <span class="comment">//如果base等于attrType就为1否则0，1就是基本属性，0是销售属性</span></span><br><span class="line">     QueryWrapper&lt;AttrEntity&gt; wrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;AttrEntity&gt;().eq(<span class="string">&quot;attr_type&quot;</span>,<span class="string">&quot;base&quot;</span>.equalsIgnoreCase(attrType)?ProductConstant.AttrEnum.ATTR_TYPE_BASE.getCode():ProductConstant.AttrEnum.ATTR_TYPE_SALE.getCode());</span><br><span class="line">    <span class="keyword">if</span> (catelogId != <span class="number">0</span>)&#123;</span><br><span class="line">        wrapper.eq(<span class="string">&quot;catelog_id&quot;</span>,catelogId);</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">String</span> <span class="variable">key</span> <span class="operator">=</span> (String) params.get(<span class="string">&quot;key&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (!StringUtils.isEmpty(key))&#123;</span><br><span class="line">        wrapper.and((queryWrapper)-&gt;&#123;</span><br><span class="line">            queryWrapper.eq(<span class="string">&quot;attr_id&quot;</span>,key)</span><br><span class="line">                    .or().like(<span class="string">&quot;attr_name&quot;</span>,key);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    IPage&lt;AttrEntity&gt; page = <span class="built_in">this</span>.page(<span class="keyword">new</span> <span class="title class_">Query</span>&lt;AttrEntity&gt;().getPage(params), wrapper);</span><br><span class="line">    <span class="type">PageUtils</span> <span class="variable">pageUtils</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PageUtils</span>(page);</span><br><span class="line">    List&lt;AttrEntity&gt; records = page.getRecords();</span><br><span class="line">    List&lt;AttrRespVo&gt; respVoList = records.stream().map((attrEntity -&gt; &#123;</span><br><span class="line">        <span class="type">AttrRespVo</span> <span class="variable">attrRespVo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AttrRespVo</span>();</span><br><span class="line">        BeanUtils.copyProperties(attrEntity, attrRespVo);</span><br><span class="line">        <span class="comment">//设置分类和分组名字</span></span><br><span class="line">        <span class="comment">//根据分类id查询分类名字</span></span><br><span class="line">        <span class="type">CategoryEntity</span> <span class="variable">categoryEntity</span> <span class="operator">=</span> categoryDao.selectById(attrEntity.getCatelogId());</span><br><span class="line">        <span class="keyword">if</span> (categoryEntity != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">categoryName</span> <span class="operator">=</span> categoryEntity.getName();</span><br><span class="line">            System.out.println(<span class="string">&quot;----&gt;&quot;</span>+categoryEntity.getName());</span><br><span class="line">            attrRespVo.setCatelogName(categoryName);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//根据关系表先查组id</span></span><br><span class="line">       <span class="keyword">if</span> (<span class="string">&quot;base&quot;</span>.equalsIgnoreCase(attrType))&#123;</span><br><span class="line">                <span class="type">AttrAttrgroupRelationEntity</span> <span class="variable">relationEntity</span> <span class="operator">=</span> relationDao.selectOne(<span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;AttrAttrgroupRelationEntity&gt;().eq(<span class="string">&quot;attr_id&quot;</span>, attrEntity.getAttrId()));</span><br><span class="line">                <span class="keyword">if</span> (relationEntity != <span class="literal">null</span> &amp;&amp; relationEntity.getAttrGroupId() != <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="comment">//根据group_id查询组名字</span></span><br><span class="line">                    <span class="type">AttrGroupEntity</span> <span class="variable">attrGroupEntity</span> <span class="operator">=</span> attrGroupDao.selectById(relationEntity.getAttrGroupId());</span><br><span class="line">                    attrRespVo.setGroupName(attrGroupEntity.getAttrGroupName());</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">return</span> attrRespVo;</span><br><span class="line">    &#125;)).collect(Collectors.toList());</span><br><span class="line">    pageUtils.setList(respVoList);</span><br><span class="line">    <span class="keyword">return</span> pageUtils;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="image-20240406193003758.png" alt="image-20240406193003758"></p><h4 id="6-3修改"><a href="#6-3修改" class="headerlink" title="6.3修改"></a>6.3修改</h4><h5 id="6-3-1-回显路径完整"><a href="#6-3-1-回显路径完整" class="headerlink" title="6.3.1.回显路径完整"></a>6.3.1.回显路径完整</h5><p>在回显时要回显分类的完整路径如：【手机&#x2F;手机通讯&#x2F;手机】</p><p>GET请求：&#x2F;product&#x2F;attr&#x2F;info&#x2F;{attrId}</p><p><strong>1.AttrRespVo类新增，完整路径属性</strong></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AttrRespVo</span> <span class="keyword">extends</span> <span class="title class_">AttrVo</span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 分类名字</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String catelogName;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 分组名字</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String groupName;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 分类完整路径</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Long[] catelogPath;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>2.修改controller代码</strong></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/info/&#123;attrId&#125;&quot;)</span></span><br><span class="line">  <span class="comment">//@RequiresPermissions(&quot;product:attr:info&quot;)</span></span><br><span class="line">  <span class="keyword">public</span> R <span class="title function_">info</span><span class="params">(<span class="meta">@PathVariable(&quot;attrId&quot;)</span> Long attrId)</span>&#123;</span><br><span class="line"><span class="comment">//AttrEntity attr = attrService.getById(attrId);</span></span><br><span class="line">      <span class="type">AttrRespVo</span> <span class="variable">attrRespVo</span> <span class="operator">=</span> attrService.getAttrInfo(attrId);</span><br><span class="line">      <span class="keyword">return</span> R.ok().put(<span class="string">&quot;attr&quot;</span>, attrRespVo);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>3.修改业务层代码</strong></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Transactional</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> AttrRespVo <span class="title function_">getAttrInfo</span><span class="params">(Long attrId)</span> &#123;</span><br><span class="line">    <span class="type">AttrRespVo</span> <span class="variable">attrRespVo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AttrRespVo</span>();</span><br><span class="line">    <span class="type">AttrEntity</span> <span class="variable">attrEntity</span> <span class="operator">=</span> <span class="built_in">this</span>.getById(attrId);</span><br><span class="line">    BeanUtils.copyProperties(attrEntity,attrRespVo);</span><br><span class="line">   <span class="keyword">if</span> (attrEntity.getAttrType() == ProductConstant.AttrEnum.ATTR_TYPE_BASE.getCode())&#123;</span><br><span class="line">            <span class="comment">//设置分组信息</span></span><br><span class="line">            <span class="type">AttrAttrgroupRelationEntity</span> <span class="variable">relationEntity</span> <span class="operator">=</span> relationDao.selectOne(<span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;AttrAttrgroupRelationEntity&gt;().eq(<span class="string">&quot;attr_id&quot;</span>, attrEntity.getAttrId()));</span><br><span class="line">            <span class="keyword">if</span> (relationEntity != <span class="literal">null</span>)&#123;</span><br><span class="line">                attrRespVo.setAttrGroupId(relationEntity.getAttrGroupId());</span><br><span class="line">                <span class="type">AttrGroupEntity</span> <span class="variable">attrGroupEntity</span> <span class="operator">=</span> attrGroupDao.selectById(relationEntity.getAttrGroupId());</span><br><span class="line">                <span class="keyword">if</span> (attrGroupEntity != <span class="literal">null</span>)&#123;</span><br><span class="line">                    attrRespVo.setGroupName(attrGroupEntity.getAttrGroupName());</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="comment">//设分类信息</span></span><br><span class="line">    <span class="type">Long</span> <span class="variable">catelogId</span> <span class="operator">=</span> attrEntity.getCatelogId();</span><br><span class="line">    Long[] categoryPath = categoryService.findCategoryPath(catelogId);</span><br><span class="line">    attrRespVo.setCatelogPath(categoryPath);</span><br><span class="line">    <span class="type">CategoryEntity</span> <span class="variable">categoryEntity</span> <span class="operator">=</span> categoryDao.selectById(catelogId);</span><br><span class="line">    <span class="keyword">if</span> (categoryEntity != <span class="literal">null</span>)&#123;</span><br><span class="line">        attrRespVo.setCatelogName(categoryEntity.getName());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> attrRespVo;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="6-3-2修改确认"><a href="#6-3-2修改确认" class="headerlink" title="6.3.2修改确认"></a>6.3.2修改确认</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/update&quot;)</span></span><br><span class="line">  <span class="comment">//@RequiresPermissions(&quot;product:attr:update&quot;)</span></span><br><span class="line">  <span class="keyword">public</span> R <span class="title function_">update</span><span class="params">(<span class="meta">@RequestBody</span> AttrVo attrVo)</span>&#123;</span><br><span class="line"><span class="comment">//attrService.updateById(attr);</span></span><br><span class="line">      attrService.updateAttr(attrVo);</span><br><span class="line">      <span class="keyword">return</span> R.ok();</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Transactional</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updateAttr</span><span class="params">(AttrVo attrVo)</span> &#123;</span><br><span class="line">    <span class="type">AttrEntity</span> <span class="variable">attrEntity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AttrEntity</span>();</span><br><span class="line">    BeanUtils.copyProperties(attrVo,attrEntity);</span><br><span class="line">    <span class="built_in">this</span>.updateById(attrEntity);</span><br><span class="line">    <span class="keyword">if</span> (attrVo.getAttrType() == ProductConstant.AttrEnum.ATTR_TYPE_BASE.getCode())&#123;</span><br><span class="line">            <span class="comment">//修改分组关联</span></span><br><span class="line">            <span class="type">AttrAttrgroupRelationEntity</span> <span class="variable">attrAttrgroupRelationEntity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AttrAttrgroupRelationEntity</span>();</span><br><span class="line">            attrAttrgroupRelationEntity.setAttrGroupId(attrVo.getAttrGroupId());</span><br><span class="line">            attrAttrgroupRelationEntity.setAttrId(attrVo.getAttrId());</span><br><span class="line">            <span class="comment">//如果attr_id不为空，修改为空新增</span></span><br><span class="line">            <span class="type">Integer</span> <span class="variable">count</span> <span class="operator">=</span> relationDao.selectCount(<span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;AttrAttrgroupRelationEntity&gt;().eq(<span class="string">&quot;attr_id&quot;</span>, attrVo.getAttrId()));</span><br><span class="line">            <span class="keyword">if</span> (count &gt; <span class="number">0</span>)&#123;</span><br><span class="line">                relationDao.update(attrAttrgroupRelationEntity,<span class="keyword">new</span> <span class="title class_">UpdateWrapper</span>&lt;AttrAttrgroupRelationEntity&gt;().eq(<span class="string">&quot;attr_id&quot;</span>,attrVo.getAttrId()));</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                relationDao.insert(attrAttrgroupRelationEntity);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="7、平台属性—-查询分组关联属性和删除关联"><a href="#7、平台属性—-查询分组关联属性和删除关联" class="headerlink" title="7、平台属性—-查询分组关联属性和删除关联"></a>7、平台属性—-查询分组关联属性和删除关联</h3><p><img src="image-20240406213822530.png" alt="image-20240406213822530"></p><h4 id="7-1查询分组关联属性"><a href="#7-1查询分组关联属性" class="headerlink" title="7.1查询分组关联属性"></a>7.1查询分组关联属性</h4><p>API:<a href="https://easydoc.net/s/78237135/ZUqEdvA4/LnjzZHPj">https://easydoc.net/s/78237135/ZUqEdvA4/LnjzZHPj</a></p><p>发送请求：&#x2F;product&#x2F;attrgroup&#x2F;{attrgroupId}&#x2F;attr&#x2F;relation</p><p>如何查找：既然给出了attr_group_id，那么到中间表中查询出来所关联的attr_id，然后得到最终的所有属性即可。</p><p>可能出现null值的问题</p><p><strong>AttrGroupController</strong></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/&#123;attrgroupId&#125;/attr/relation&quot;)</span></span><br><span class="line"><span class="keyword">public</span> R <span class="title function_">attrRelation</span><span class="params">(<span class="meta">@PathVariable(&quot;attrgroupId&quot;)</span> Long attrgroupId)</span>&#123;</span><br><span class="line">    List&lt;AttrEntity&gt; entities = attrService.getRelationAttr(attrgroupId);</span><br><span class="line">    <span class="keyword">return</span> R.ok().put(<span class="string">&quot;data&quot;</span>,entities);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>AttrServiceImpl.java</strong></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 根据分组id获取规格参数</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> attrgroupId</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> List&lt;AttrEntity&gt; <span class="title function_">getRelationAttr</span><span class="params">(Long attrgroupId)</span> &#123;</span><br><span class="line">    List&lt;AttrAttrgroupRelationEntity&gt; relationEntities = relationDao.selectList(<span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;AttrAttrgroupRelationEntity&gt;().eq(<span class="string">&quot;attr_group_id&quot;</span>, attrgroupId));</span><br><span class="line">    List&lt;Long&gt; attrIds = relationEntities.stream().map(attrRelation -&gt; &#123;</span><br><span class="line">        <span class="keyword">return</span> attrRelation.getAttrId();</span><br><span class="line">    &#125;).collect(Collectors.toList());</span><br><span class="line">    <span class="keyword">if</span> (attrIds == <span class="literal">null</span> || attrIds.size() == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    Collection&lt;AttrEntity&gt; attrEntities = <span class="built_in">this</span>.listByIds(attrIds);</span><br><span class="line">    <span class="keyword">return</span> (List&lt;AttrEntity&gt;) attrEntities;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>查询成功</strong></p><p><img src="image-20240406215824094.png" alt="image-20240406215824094"></p><h4 id="7-2删除关联"><a href="#7-2删除关联" class="headerlink" title="7.2删除关联"></a>7.2删除关联</h4><p>API：<a href="https://easydoc.net/s/78237135/ZUqEdvA4/qn7A2Fht">https://easydoc.net/s/78237135/ZUqEdvA4/qn7A2Fht</a></p><p>POST:&#x2F;product&#x2F;attrgroup&#x2F;attr&#x2F;relation&#x2F;delete</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@PostMapping(&quot;/attr/relation/delete&quot;)</span></span><br><span class="line"><span class="keyword">public</span> R <span class="title function_">deleteRelation</span><span class="params">(AttrGroupRelationVo[] vos)</span>&#123;</span><br><span class="line">    attrService.deleteRelation(vos);</span><br><span class="line">    <span class="keyword">return</span> R.ok();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>service</strong></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 删除关联关系</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> vos</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deleteRelation</span><span class="params">(AttrGroupRelationVo[] vos)</span> &#123;</span><br><span class="line">    List&lt;AttrAttrgroupRelationEntity&gt; entities = Arrays.stream(vos).map(item -&gt; &#123;</span><br><span class="line">        <span class="type">AttrAttrgroupRelationEntity</span> <span class="variable">relationEntity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AttrAttrgroupRelationEntity</span>();</span><br><span class="line">        BeanUtils.copyProperties(item, relationEntity);</span><br><span class="line">        <span class="keyword">return</span> relationEntity;</span><br><span class="line">    &#125;).collect(Collectors.toList());</span><br><span class="line">    relationDao.deleteBatchRelation(entities);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>dao和mapper.xml</strong></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Mapper</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">AttrAttrgroupRelationDao</span> <span class="keyword">extends</span> <span class="title class_">BaseMapper</span>&lt;AttrAttrgroupRelationEntity&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">deleteBatchRelation</span><span class="params">(<span class="meta">@Param(&quot;entities&quot;)</span> List&lt;AttrAttrgroupRelationEntity&gt; entities)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">&quot;deleteBatchRelation&quot;</span>&gt;</span></span><br><span class="line">    DELETE from pms_attr_attrgroup_relation WHERE</span><br><span class="line">    <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">&quot;entities&quot;</span> <span class="attr">item</span>=<span class="string">&quot;item&quot;</span> <span class="attr">separator</span>=<span class="string">&quot;OR&quot;</span>&gt;</span></span><br><span class="line">        (attr_id = #&#123;item.attrId&#125; AND attr_group_id = #&#123;item.attrGroupId&#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="7-3-查询分组未关联的属性"><a href="#7-3-查询分组未关联的属性" class="headerlink" title="7.3. 查询分组未关联的属性"></a>7.3. 查询分组未关联的属性</h4><p>&#x2F;product&#x2F;attrgroup&#x2F;{attrgroupId}&#x2F;noattr&#x2F;relation</p><p>API：<a href="https://easydoc.xyz/doc/75716633/ZUqEdvA4/d3EezLdO">https://easydoc.xyz/doc/75716633/ZUqEdvA4/d3EezLdO</a></p><p>获取属性分组里面还没有关联的本分类里面的其他基本属性，方便添加新的关联</p><p>Request URL: <a href="http://localhost:88/api/product/attrgroup/1/noattr/relation?t=1588780783441&page=1&limit=10&key=">http://localhost:88/api/product/attrgroup/1/noattr/relation?t=1588780783441&amp;page=1&amp;limit=10&amp;key=</a></p><p><img src="1588780868214.png" alt="1588780868214"></p><p>属性分组，对应于“pms_attr_group”表，每个分组下，需要查看到关联了哪些属性信息，销售属性不需要和分组进行关联，但是规格参数要和属性分组进行关联。</p><p>规格参数：对应于<code>pms_attr</code>表，attr_type&#x3D;1，需要显示分组信息</p><p>销售属性：对应于pms_attr&#96;表，attr_type&#x3D;0，不需要显示分组信息</p><p>分组ID为9的分组：Request URL: <a href="http://localhost:88/api/product/attrgroup/9/noattr/relation?t=1588822258669&page=1&limit=10&key=">http://localhost:88/api/product/attrgroup/9/noattr/relation?t=1588822258669&amp;page=1&amp;limit=10&amp;key=</a></p><p>对应的数据库字段</p><p>attr_group_id  attr_group_name    sort  descript                icon    catelog_id  </p><hr><pre><code>        9  主体                    1  型号 平台                   wu               454       10  显卡                    1  显存容量                    wu               454       11  输入设备                  1  鼠标 键盘                   wu               454       12  主板                    1  显卡类型 芯片组                wu               454       13  规格                    1  尺寸                      wu               454</code></pre><p>查询attrgroupId&#x3D;9的属性分组：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">AttrGroupEntity</span> <span class="variable">attrGroupEntity</span> <span class="operator">=</span> attrGroupDao.selectById(attrgroupId);</span><br></pre></td></tr></table></figure><p>获取到分类信息：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Long catelogId = attrGroupEntity.getCatelogId();</span><br></pre></td></tr></table></figure><p>目标：获取属性分组没有关联的其他属性</p><p>也就是获取attrgroupId&#x3D;9的属性分组中，关联的分类catelog_id &#x3D;454 （台式机），其他基本属性</p><p>在该属性分组中，现在已经关联的属性：</p><p><img src="1588822997675.png" alt="1588822997675"></p><p>本分类下，存在哪些基本属性？</p><p>没有关联的其他属性</p><p>已经关联的属性，这些属性是如何关联上的？</p><p>答：在创建规格参数的时候，已经设置了需要关联哪些属性分组。</p><p>想要知道还没有关联哪些，先查看关联了哪些，如何排除掉这些就是未关联的</p><p>在中间表中显示了属性和属性分组之间的关联关系，在属性表中显示了所有的属性，</p><p>先查询中间表，得到所有已经关联的属性的id，然后再次查询属性表，排除掉已经建立关联的属性ID，将剩下的属性ID和属性建立起关联关系</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> PageUtils <span class="title function_">getNoRelationAttr</span><span class="params">(Map&lt;String, Object&gt; params, Long attrgroupId)</span> &#123;</span><br><span class="line">    <span class="comment">//当前分组只能关联所属分类的id</span></span><br><span class="line">    <span class="type">AttrGroupEntity</span> <span class="variable">attrGroupEntity</span> <span class="operator">=</span> attrGroupDao.selectById(attrgroupId);</span><br><span class="line">    <span class="type">Long</span> <span class="variable">catelogId</span> <span class="operator">=</span> attrGroupEntity.getCatelogId();</span><br><span class="line">    <span class="comment">//当前分组只能关联别的分组没有引用的属性</span></span><br><span class="line">    <span class="comment">//当前分类下的分组</span></span><br><span class="line">    List&lt;AttrGroupEntity&gt; groups = attrGroupDao.selectList(<span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;AttrGroupEntity&gt;().eq(<span class="string">&quot;catelog_id&quot;</span>, catelogId));</span><br><span class="line">    List&lt;Long&gt; list = groups.stream().map(item -&gt; &#123;</span><br><span class="line">        <span class="keyword">return</span> item.getAttrGroupId();</span><br><span class="line">    &#125;).collect(Collectors.toList());</span><br><span class="line">    <span class="comment">//这些分组关联的属性</span></span><br><span class="line">    List&lt;AttrAttrgroupRelationEntity&gt; groupId = relationDao.selectList(<span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;AttrAttrgroupRelationEntity&gt;().in(<span class="string">&quot;attr_group_id&quot;</span>, list));</span><br><span class="line">    List&lt;Long&gt; attrIds = groupId.stream().map(item -&gt; &#123;</span><br><span class="line">        <span class="keyword">return</span> item.getAttrId();</span><br><span class="line">    &#125;).collect(Collectors.toList());</span><br><span class="line">    <span class="comment">//从当前分类移除这些属性</span></span><br><span class="line">    QueryWrapper&lt;AttrEntity&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;AttrEntity&gt;().eq(<span class="string">&quot;catelog_id&quot;</span>, catelogId).eq(<span class="string">&quot;attr_type&quot;</span>,ProductConstant.AttrEnum.ATTR_TYPE_BASE.getCode());</span><br><span class="line">    <span class="keyword">if</span> (attrIds != <span class="literal">null</span> &amp;&amp; attrIds.size() &gt; <span class="number">0</span>)&#123;</span><br><span class="line">        queryWrapper.notIn(<span class="string">&quot;attr_id&quot;</span>, attrIds);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">String</span> <span class="variable">key</span> <span class="operator">=</span> (String) params.get(<span class="string">&quot;key&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (!StringUtils.isEmpty(key))&#123;</span><br><span class="line">        queryWrapper.and((w)-&gt;&#123;</span><br><span class="line"></span><br><span class="line">            w.eq(<span class="string">&quot;attr_id&quot;</span>,key).or().like(<span class="string">&quot;attr_name&quot;</span>,key);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    IPage&lt;AttrEntity&gt; page = <span class="built_in">this</span>.page(<span class="keyword">new</span> <span class="title class_">Query</span>&lt;AttrEntity&gt;().getPage(params), queryWrapper);</span><br><span class="line">    <span class="type">PageUtils</span> <span class="variable">pageUtils</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PageUtils</span>(page);</span><br><span class="line">    <span class="keyword">return</span> pageUtils;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="7-4新增分组与属性关联"><a href="#7-4新增分组与属性关联" class="headerlink" title="7.4新增分组与属性关联"></a>7.4新增分组与属性关联</h4><p>POST： &#x2F;product&#x2F;attrgroup&#x2F;attr&#x2F;relation</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@PostMapping(&quot;/attr/relation&quot;)</span></span><br><span class="line"><span class="keyword">public</span> R <span class="title function_">addRelation</span><span class="params">(<span class="meta">@RequestBody</span> List&lt;AttrGroupRelationVo&gt; vos)</span>&#123;</span><br><span class="line">    relationService.saveBatch(vos);</span><br><span class="line">    <span class="keyword">return</span> R.ok();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">saveBatch</span><span class="params">(List&lt;AttrGroupRelationVo&gt; vos)</span> &#123;</span><br><span class="line">    List&lt;AttrAttrgroupRelationEntity&gt; collect = vos.stream().map(item -&gt; &#123;</span><br><span class="line">        <span class="type">AttrAttrgroupRelationEntity</span> <span class="variable">attrAttrgroupRelationEntity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AttrAttrgroupRelationEntity</span>();</span><br><span class="line">        BeanUtils.copyProperties(item, attrAttrgroupRelationEntity);</span><br><span class="line">        <span class="keyword">return</span> attrAttrgroupRelationEntity;</span><br><span class="line">    &#125;).collect(Collectors.toList());</span><br><span class="line">    <span class="built_in">this</span>.saveBatch(collect);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="8-发布商品"><a href="#8-发布商品" class="headerlink" title="8. 发布商品"></a>8. 发布商品</h3><p>要走完以下所有流程才可以发布商品</p><p><img src="image-20240407220254182.png" alt="image-20240407220254182"></p><h4 id="8-1-获取所有会员等级："><a href="#8-1-获取所有会员等级：" class="headerlink" title="8.1.获取所有会员等级："></a>8.1.获取所有会员等级：</h4><p>&#x2F;member&#x2F;memberlevel&#x2F;list</p><p>API：<a href="https://easydoc.net/doc/75716633/ZUqEdvA4/jCFganpf">https://easydoc.net/doc/75716633/ZUqEdvA4/jCFganpf</a></p><p>在“gulimall-gateway”中修改“”文件，添加对于member的路由</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">id:</span> <span class="string">gulimall-member</span></span><br><span class="line">  <span class="attr">uri:</span> <span class="string">lb://gulimall-member</span></span><br><span class="line">  <span class="attr">predicates:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">Path=/api/member/**</span></span><br><span class="line">  <span class="attr">filters:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">RewritePath=/api/(?&lt;segment&gt;/?.*),/$\&#123;segment&#125;</span></span><br></pre></td></tr></table></figure><p>在“gulimall-member”中，创建“bootstrap.properties”文件，内容如下：</p><figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring.cloud.nacos.config.name</span>=<span class="string">gulimall-member</span></span><br><span class="line"><span class="attr">spring.cloud.nacos.config.server-addr</span>=<span class="string">192.168.137.14:8848</span></span><br><span class="line"><span class="attr">spring.cloud.nacos.config.namespace</span>=<span class="string">795521fa-77ef-411e-a8d8-0889fdfe6964</span></span><br><span class="line"><span class="attr">spring.cloud.nacos.config.extension-configs[0].data-id</span>=<span class="string">gulimall-member.yml</span></span><br><span class="line"><span class="attr">spring.cloud.nacos.config.extension-configs[0].group</span>=<span class="string">DEFAULT_GROUP</span></span><br><span class="line"><span class="attr">spring.cloud.nacos.config.extension-configs[0].refresh</span>=<span class="string">true</span></span><br></pre></td></tr></table></figure><h4 id="8-2获取分类关联的品牌："><a href="#8-2获取分类关联的品牌：" class="headerlink" title="8.2获取分类关联的品牌："></a>8.2获取分类关联的品牌：</h4><p>&#x2F;product&#x2F;categorybrandrelation&#x2F;brands&#x2F;list</p><p>API：<a href="https://easydoc.net/doc/75716633/ZUqEdvA4/HgVjlzWV">https://easydoc.net/doc/75716633/ZUqEdvA4/HgVjlzWV</a></p><p>​当我填写信息时没有显示分类对应的品牌，如下图：</p><p><img src="image-20240407231109057.png" alt="image-20240407231109057"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">CategoryBrandRelationController类</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 查询分类关联的所有品牌</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> catId</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@GetMapping(&quot;/brands/list&quot;)</span></span><br><span class="line"><span class="keyword">public</span> R <span class="title function_">RelationBrandsList</span><span class="params">(<span class="meta">@RequestParam(&quot;catId&quot;)</span> Long catId)</span>&#123;</span><br><span class="line">    List&lt;BrandEntity&gt; vos = categoryBrandRelationService.getBrandsByCatId(catId);</span><br><span class="line">    List&lt;BrandVo&gt; collect = vos.stream().map(item -&gt; &#123;</span><br><span class="line">        <span class="type">BrandVo</span> <span class="variable">brandVo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BrandVo</span>();</span><br><span class="line">        brandVo.setBrandId(item.getBrandId());</span><br><span class="line">        brandVo.setBrandName(item.getName());</span><br><span class="line">        <span class="keyword">return</span> brandVo;</span><br><span class="line">    &#125;).collect(Collectors.toList());</span><br><span class="line">    <span class="keyword">return</span> R.ok().put(<span class="string">&quot;data&quot;</span>,collect);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"> <span class="meta">@Autowired</span></span><br><span class="line">    <span class="meta">@Lazy</span></span><br><span class="line">    BrandService brandService;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> List&lt;BrandEntity&gt; <span class="title function_">getBrandsByCatId</span><span class="params">(Long catId)</span> &#123;</span><br><span class="line">    List&lt;CategoryBrandRelationEntity&gt; catelogId = <span class="built_in">this</span>.baseMapper.selectList(<span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;CategoryBrandRelationEntity&gt;().eq(<span class="string">&quot;catelog_id&quot;</span>, catId));</span><br><span class="line">    List&lt;BrandEntity&gt; collect = catelogId.stream().map(item -&gt; &#123;</span><br><span class="line">        <span class="type">Long</span> <span class="variable">brandId</span> <span class="operator">=</span> item.getBrandId();</span><br><span class="line">        <span class="type">BrandEntity</span> <span class="variable">brandEntity</span> <span class="operator">=</span> brandService.getById(brandId);</span><br><span class="line">        <span class="keyword">return</span> brandEntity;</span><br><span class="line">    &#125;).collect(Collectors.toList());</span><br><span class="line">    <span class="keyword">return</span> collect;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>前端没有发送获取品牌的请求：</strong></p><p><img src="image-20240407234038268.png" alt="image-20240407234038268"></p><p>network没有请求</p><p><strong>解决：</strong></p><ol><li>首先安装pubsub-js</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">`npm install --save pubsub-js`</span><br></pre></td></tr></table></figure><ol start="2"><li>订阅方组件</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">`import PubSub from &#x27;pubsub-js&#x27;`</span><br></pre></td></tr></table></figure><p>该this.PubSub为PubSub。</p><p>main.js文件</p><p><img src="image-20240407234727008.png" alt="image-20240407234727008"></p><p>成功获取到了</p><p><img src="image-20240407235311950.png" alt="image-20240407235311950"></p><p>获取分类下所有分组&amp;关联属性</p><p>请求类型：&#x2F;product&#x2F;attrgroup&#x2F;{catelogId}&#x2F;withattr</p><p>请求方式：GET</p><p>请求URL：<a href="http://localhost:88/api/product/attrgroup/225/withattr?t=1588864569478">http://localhost:88/api/product/attrgroup/225/withattr?t=1588864569478</a></p><p>mysql默认的隔离级别为读已提交，为了能够在调试过程中，获取到数据库中的数据信息，可以调整隔离级别为读未提交：</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SET</span> SESSION TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;</span><br></pre></td></tr></table></figure><p>但是它对于当前的事务窗口生效，如果想要设置全局的，需要加上global字段。</p><h4 id="8-3新增商品"><a href="#8-3新增商品" class="headerlink" title="8.3新增商品"></a>8.3新增商品</h4><p>POST  &#x2F;product&#x2F;spuinfo&#x2F;save</p><p>参数：</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;spuName&quot;</span><span class="punctuation">:</span><span class="string">&quot;华为 HUAWEI Mate30 Pro&quot;</span><span class="punctuation">,</span><span class="attr">&quot;spuDescription&quot;</span><span class="punctuation">:</span><span class="string">&quot;华为 HUAWEI Mate30 Pro&quot;</span><span class="punctuation">,</span><span class="attr">&quot;catalogId&quot;</span><span class="punctuation">:</span><span class="number">225</span><span class="punctuation">,</span><span class="attr">&quot;brandId&quot;</span><span class="punctuation">:</span><span class="number">2</span><span class="punctuation">,</span><span class="attr">&quot;weight&quot;</span><span class="punctuation">:</span><span class="number">0.198</span><span class="punctuation">,</span><span class="attr">&quot;publishStatus&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">,</span><span class="attr">&quot;decript&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="string">&quot;https://gulimall20031201.oss-cn-chengdu.aliyuncs.com/2024-04-11//1c670d5a-5eed-4eb7-8573-ec4e475c8ed4_73366cc235d68202.jpg&quot;</span><span class="punctuation">,</span><span class="string">&quot;https://gulimall20031201.oss-cn-chengdu.aliyuncs.com/2024-04-11//77d839cc-5e61-45b6-86ff-ff857d869f16_528211b97272d88a.jpg&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="attr">&quot;images&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="string">&quot;https://gulimall20031201.oss-cn-chengdu.aliyuncs.com/2024-04-11//01da444d-4fc8-4745-8e6d-1bb736388c49_0d40c24b264aa511.jpg&quot;</span><span class="punctuation">,</span><span class="string">&quot;https://gulimall20031201.oss-cn-chengdu.aliyuncs.com/2024-04-11//0232ea2e-d964-4ebb-864d-d0bab3f0da0d_1f15cdbcf9e1273c.jpg&quot;</span><span class="punctuation">,</span><span class="string">&quot;https://gulimall20031201.oss-cn-chengdu.aliyuncs.com/2024-04-11//c519d573-1daf-4e53-84ba-0271aba53040_2b1837c6c50add30.jpg&quot;</span><span class="punctuation">,</span><span class="string">&quot;https://gulimall20031201.oss-cn-chengdu.aliyuncs.com/2024-04-11//5cd361cd-d389-49f7-8250-8264d6a89a5a_8bf441260bffa42f.jpg&quot;</span><span class="punctuation">,</span><span class="string">&quot;https://gulimall20031201.oss-cn-chengdu.aliyuncs.com/2024-04-11//d487cd03-1d01-4056-89b0-9aaef8bf7179_28f296629cca865e.jpg&quot;</span><span class="punctuation">,</span><span class="string">&quot;https://gulimall20031201.oss-cn-chengdu.aliyuncs.com/2024-04-11//783d5381-2711-4fd7-8c6b-598eefb452bd_b5c6b23d01dcdf81.jpg&quot;</span><span class="punctuation">,</span><span class="string">&quot;https://gulimall20031201.oss-cn-chengdu.aliyuncs.com/2024-04-11//478aaf6e-65f8-4235-8ab3-7208a4f85853_919c850652e98031.jpg&quot;</span><span class="punctuation">,</span><span class="string">&quot;https://gulimall20031201.oss-cn-chengdu.aliyuncs.com/2024-04-11//53f4caf8-7cff-4696-89ea-225f4f1c6a0d_d511faab82abb34b.jpg&quot;</span><span class="punctuation">,</span><span class="string">&quot;https://gulimall20031201.oss-cn-chengdu.aliyuncs.com/2024-04-11//3bd219db-002b-46bb-8cb8-c6d81c9877f1_a83bf5250e14caf2.jpg&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="attr">&quot;bounds&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;buyBounds&quot;</span><span class="punctuation">:</span><span class="number">500</span><span class="punctuation">,</span><span class="attr">&quot;growBounds&quot;</span><span class="punctuation">:</span><span class="number">500</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="attr">&quot;baseAttrs&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">&#123;</span><span class="attr">&quot;attrId&quot;</span><span class="punctuation">:</span><span class="number">1</span><span class="punctuation">,</span><span class="attr">&quot;attrValues&quot;</span><span class="punctuation">:</span><span class="string">&quot;2000&quot;</span><span class="punctuation">,</span><span class="attr">&quot;showDesc&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;attrId&quot;</span><span class="punctuation">:</span><span class="number">6</span><span class="punctuation">,</span><span class="attr">&quot;attrValues&quot;</span><span class="punctuation">:</span><span class="string">&quot;A2217&quot;</span><span class="punctuation">,</span><span class="attr">&quot;showDesc&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;attrId&quot;</span><span class="punctuation">:</span><span class="number">3</span><span class="punctuation">,</span><span class="attr">&quot;attrValues&quot;</span><span class="punctuation">:</span><span class="string">&quot;73.1mm&quot;</span><span class="punctuation">,</span><span class="attr">&quot;showDesc&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;attrId&quot;</span><span class="punctuation">:</span><span class="number">7</span><span class="punctuation">,</span><span class="attr">&quot;attrValues&quot;</span><span class="punctuation">:</span><span class="string">&quot;以官网信息为准;陶瓷&quot;</span><span class="punctuation">,</span><span class="attr">&quot;showDesc&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;attrId&quot;</span><span class="punctuation">:</span><span class="number">8</span><span class="punctuation">,</span><span class="attr">&quot;attrValues&quot;</span><span class="punctuation">:</span><span class="string">&quot;161.5mm&quot;</span><span class="punctuation">,</span><span class="attr">&quot;showDesc&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="attr">&quot;skus&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">&#123;</span><span class="attr">&quot;attr&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">&#123;</span><span class="attr">&quot;attrId&quot;</span><span class="punctuation">:</span><span class="number">4</span><span class="punctuation">,</span><span class="attr">&quot;attrName&quot;</span><span class="punctuation">:</span><span class="string">&quot;选择颜色&quot;</span><span class="punctuation">,</span><span class="attr">&quot;attrValue&quot;</span><span class="punctuation">:</span><span class="string">&quot;亮黑色&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;attrId&quot;</span><span class="punctuation">:</span><span class="number">5</span><span class="punctuation">,</span><span class="attr">&quot;attrName&quot;</span><span class="punctuation">:</span><span class="string">&quot;选择版本&quot;</span><span class="punctuation">,</span><span class="attr">&quot;attrValue&quot;</span><span class="punctuation">:</span><span class="string">&quot;8+256g&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="attr">&quot;skuName&quot;</span><span class="punctuation">:</span><span class="string">&quot;华为 HUAWEI Mate30 Pro 亮黑色 8+256g&quot;</span><span class="punctuation">,</span><span class="attr">&quot;price&quot;</span><span class="punctuation">:</span><span class="string">&quot;6299&quot;</span><span class="punctuation">,</span><span class="attr">&quot;skuTitle&quot;</span><span class="punctuation">:</span><span class="string">&quot;华为 HUAWEI Mate30 Pro 亮黑色 8+256g麒麟990 4G/5G全网通&quot;</span><span class="punctuation">,</span><span class="attr">&quot;skuSubtitle&quot;</span><span class="punctuation">:</span><span class="string">&quot;爆款热销 优选 速发&quot;</span><span class="punctuation">,</span><span class="attr">&quot;images&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">&#123;</span><span class="attr">&quot;imgUrl&quot;</span><span class="punctuation">:</span><span class="string">&quot;https://gulimall20031201.oss-cn-chengdu.aliyuncs.com/2024-04-11//01da444d-4fc8-4745-8e6d-1bb736388c49_0d40c24b264aa511.jpg&quot;</span><span class="punctuation">,</span><span class="attr">&quot;defaultImg&quot;</span><span class="punctuation">:</span><span class="number">1</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;imgUrl&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;defaultImg&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;imgUrl&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;defaultImg&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;imgUrl&quot;</span><span class="punctuation">:</span><span class="string">&quot;https://gulimall20031201.oss-cn-chengdu.aliyuncs.com/2024-04-11//5cd361cd-d389-49f7-8250-8264d6a89a5a_8bf441260bffa42f.jpg&quot;</span><span class="punctuation">,</span><span class="attr">&quot;defaultImg&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;imgUrl&quot;</span><span class="punctuation">:</span><span class="string">&quot;https://gulimall20031201.oss-cn-chengdu.aliyuncs.com/2024-04-11//d487cd03-1d01-4056-89b0-9aaef8bf7179_28f296629cca865e.jpg&quot;</span><span class="punctuation">,</span><span class="attr">&quot;defaultImg&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;imgUrl&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;defaultImg&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;imgUrl&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;defaultImg&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;imgUrl&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;defaultImg&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;imgUrl&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;defaultImg&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="attr">&quot;descar&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="string">&quot;亮黑色&quot;</span><span class="punctuation">,</span><span class="string">&quot;8+256g&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="attr">&quot;fullCount&quot;</span><span class="punctuation">:</span><span class="number">3</span><span class="punctuation">,</span><span class="attr">&quot;discount&quot;</span><span class="punctuation">:</span><span class="number">0.98</span><span class="punctuation">,</span><span class="attr">&quot;countStatus&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">,</span><span class="attr">&quot;fullPrice&quot;</span><span class="punctuation">:</span><span class="number">10000</span><span class="punctuation">,</span><span class="attr">&quot;reducePrice&quot;</span><span class="punctuation">:</span><span class="number">50</span><span class="punctuation">,</span><span class="attr">&quot;priceStatus&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">,</span><span class="attr">&quot;memberPrice&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">&#123;</span><span class="attr">&quot;id&quot;</span><span class="punctuation">:</span><span class="number">2</span><span class="punctuation">,</span><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span><span class="string">&quot;铜牌会员&quot;</span><span class="punctuation">,</span><span class="attr">&quot;price&quot;</span><span class="punctuation">:</span><span class="number">6159</span><span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;attr&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">&#123;</span><span class="attr">&quot;attrId&quot;</span><span class="punctuation">:</span><span class="number">4</span><span class="punctuation">,</span><span class="attr">&quot;attrName&quot;</span><span class="punctuation">:</span><span class="string">&quot;选择颜色&quot;</span><span class="punctuation">,</span><span class="attr">&quot;attrValue&quot;</span><span class="punctuation">:</span><span class="string">&quot;亮黑色&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;attrId&quot;</span><span class="punctuation">:</span><span class="number">5</span><span class="punctuation">,</span><span class="attr">&quot;attrName&quot;</span><span class="punctuation">:</span><span class="string">&quot;选择版本&quot;</span><span class="punctuation">,</span><span class="attr">&quot;attrValue&quot;</span><span class="punctuation">:</span><span class="string">&quot;8+128g&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="attr">&quot;skuName&quot;</span><span class="punctuation">:</span><span class="string">&quot;华为 HUAWEI Mate30 Pro 亮黑色 8+128g&quot;</span><span class="punctuation">,</span><span class="attr">&quot;price&quot;</span><span class="punctuation">:</span><span class="string">&quot;5799&quot;</span><span class="punctuation">,</span><span class="attr">&quot;skuTitle&quot;</span><span class="punctuation">:</span><span class="string">&quot;华为 HUAWEI Mate30 Pro 亮黑色 8+128g麒麟990 4G/5G全网通&quot;</span><span class="punctuation">,</span><span class="attr">&quot;skuSubtitle&quot;</span><span class="punctuation">:</span><span class="string">&quot;爆款热销 优选 速发&quot;</span><span class="punctuation">,</span><span class="attr">&quot;images&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">&#123;</span><span class="attr">&quot;imgUrl&quot;</span><span class="punctuation">:</span><span class="string">&quot;https://gulimall20031201.oss-cn-chengdu.aliyuncs.com/2024-04-11//01da444d-4fc8-4745-8e6d-1bb736388c49_0d40c24b264aa511.jpg&quot;</span><span class="punctuation">,</span><span class="attr">&quot;defaultImg&quot;</span><span class="punctuation">:</span><span class="number">1</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;imgUrl&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;defaultImg&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;imgUrl&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;defaultImg&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;imgUrl&quot;</span><span class="punctuation">:</span><span class="string">&quot;https://gulimall20031201.oss-cn-chengdu.aliyuncs.com/2024-04-11//5cd361cd-d389-49f7-8250-8264d6a89a5a_8bf441260bffa42f.jpg&quot;</span><span class="punctuation">,</span><span class="attr">&quot;defaultImg&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;imgUrl&quot;</span><span class="punctuation">:</span><span class="string">&quot;https://gulimall20031201.oss-cn-chengdu.aliyuncs.com/2024-04-11//d487cd03-1d01-4056-89b0-9aaef8bf7179_28f296629cca865e.jpg&quot;</span><span class="punctuation">,</span><span class="attr">&quot;defaultImg&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;imgUrl&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;defaultImg&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;imgUrl&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;defaultImg&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;imgUrl&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;defaultImg&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;imgUrl&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;defaultImg&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="attr">&quot;descar&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="string">&quot;亮黑色&quot;</span><span class="punctuation">,</span><span class="string">&quot;8+128g&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="attr">&quot;fullCount&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">,</span><span class="attr">&quot;discount&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">,</span><span class="attr">&quot;countStatus&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">,</span><span class="attr">&quot;fullPrice&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">,</span><span class="attr">&quot;reducePrice&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">,</span><span class="attr">&quot;priceStatus&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">,</span><span class="attr">&quot;memberPrice&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">&#123;</span><span class="attr">&quot;id&quot;</span><span class="punctuation">:</span><span class="number">2</span><span class="punctuation">,</span><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span><span class="string">&quot;铜牌会员&quot;</span><span class="punctuation">,</span><span class="attr">&quot;price&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;attr&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">&#123;</span><span class="attr">&quot;attrId&quot;</span><span class="punctuation">:</span><span class="number">4</span><span class="punctuation">,</span><span class="attr">&quot;attrName&quot;</span><span class="punctuation">:</span><span class="string">&quot;选择颜色&quot;</span><span class="punctuation">,</span><span class="attr">&quot;attrValue&quot;</span><span class="punctuation">:</span><span class="string">&quot;星河银&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;attrId&quot;</span><span class="punctuation">:</span><span class="number">5</span><span class="punctuation">,</span><span class="attr">&quot;attrName&quot;</span><span class="punctuation">:</span><span class="string">&quot;选择版本&quot;</span><span class="punctuation">,</span><span class="attr">&quot;attrValue&quot;</span><span class="punctuation">:</span><span class="string">&quot;8+256g&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="attr">&quot;skuName&quot;</span><span class="punctuation">:</span><span class="string">&quot;华为 HUAWEI Mate30 Pro 星河银 8+256g&quot;</span><span class="punctuation">,</span><span class="attr">&quot;price&quot;</span><span class="punctuation">:</span><span class="string">&quot;6299&quot;</span><span class="punctuation">,</span><span class="attr">&quot;skuTitle&quot;</span><span class="punctuation">:</span><span class="string">&quot;华为 HUAWEI Mate30 Pro 星河银 8+256g麒麟990 4G/5G全网通&quot;</span><span class="punctuation">,</span><span class="attr">&quot;skuSubtitle&quot;</span><span class="punctuation">:</span><span class="string">&quot;爆款热销 优选 速发&quot;</span><span class="punctuation">,</span><span class="attr">&quot;images&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">&#123;</span><span class="attr">&quot;imgUrl&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;defaultImg&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;imgUrl&quot;</span><span class="punctuation">:</span><span class="string">&quot;https://gulimall20031201.oss-cn-chengdu.aliyuncs.com/2024-04-11//0232ea2e-d964-4ebb-864d-d0bab3f0da0d_1f15cdbcf9e1273c.jpg&quot;</span><span class="punctuation">,</span><span class="attr">&quot;defaultImg&quot;</span><span class="punctuation">:</span><span class="number">1</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;imgUrl&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;defaultImg&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;imgUrl&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;defaultImg&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;imgUrl&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;defaultImg&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;imgUrl&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;defaultImg&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;imgUrl&quot;</span><span class="punctuation">:</span><span class="string">&quot;https://gulimall20031201.oss-cn-chengdu.aliyuncs.com/2024-04-11//478aaf6e-65f8-4235-8ab3-7208a4f85853_919c850652e98031.jpg&quot;</span><span class="punctuation">,</span><span class="attr">&quot;defaultImg&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;imgUrl&quot;</span><span class="punctuation">:</span><span class="string">&quot;https://gulimall20031201.oss-cn-chengdu.aliyuncs.com/2024-04-11//53f4caf8-7cff-4696-89ea-225f4f1c6a0d_d511faab82abb34b.jpg&quot;</span><span class="punctuation">,</span><span class="attr">&quot;defaultImg&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;imgUrl&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;defaultImg&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="attr">&quot;descar&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="string">&quot;星河银&quot;</span><span class="punctuation">,</span><span class="string">&quot;8+256g&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="attr">&quot;fullCount&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">,</span><span class="attr">&quot;discount&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">,</span><span class="attr">&quot;countStatus&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">,</span><span class="attr">&quot;fullPrice&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">,</span><span class="attr">&quot;reducePrice&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">,</span><span class="attr">&quot;priceStatus&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">,</span><span class="attr">&quot;memberPrice&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">&#123;</span><span class="attr">&quot;id&quot;</span><span class="punctuation">:</span><span class="number">2</span><span class="punctuation">,</span><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span><span class="string">&quot;铜牌会员&quot;</span><span class="punctuation">,</span><span class="attr">&quot;price&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;attr&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">&#123;</span><span class="attr">&quot;attrId&quot;</span><span class="punctuation">:</span><span class="number">4</span><span class="punctuation">,</span><span class="attr">&quot;attrName&quot;</span><span class="punctuation">:</span><span class="string">&quot;选择颜色&quot;</span><span class="punctuation">,</span><span class="attr">&quot;attrValue&quot;</span><span class="punctuation">:</span><span class="string">&quot;星河银&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;attrId&quot;</span><span class="punctuation">:</span><span class="number">5</span><span class="punctuation">,</span><span class="attr">&quot;attrName&quot;</span><span class="punctuation">:</span><span class="string">&quot;选择版本&quot;</span><span class="punctuation">,</span><span class="attr">&quot;attrValue&quot;</span><span class="punctuation">:</span><span class="string">&quot;8+128g&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="attr">&quot;skuName&quot;</span><span class="punctuation">:</span><span class="string">&quot;华为 HUAWEI Mate30 Pro 星河银 8+128g&quot;</span><span class="punctuation">,</span><span class="attr">&quot;price&quot;</span><span class="punctuation">:</span><span class="string">&quot;5799&quot;</span><span class="punctuation">,</span><span class="attr">&quot;skuTitle&quot;</span><span class="punctuation">:</span><span class="string">&quot;华为 HUAWEI Mate30 Pro 星河银 8+128g麒麟990 4G/5G全网通&quot;</span><span class="punctuation">,</span><span class="attr">&quot;skuSubtitle&quot;</span><span class="punctuation">:</span><span class="string">&quot;爆款热销 优选 速发&quot;</span><span class="punctuation">,</span><span class="attr">&quot;images&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">&#123;</span><span class="attr">&quot;imgUrl&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;defaultImg&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;imgUrl&quot;</span><span class="punctuation">:</span><span class="string">&quot;https://gulimall20031201.oss-cn-chengdu.aliyuncs.com/2024-04-11//0232ea2e-d964-4ebb-864d-d0bab3f0da0d_1f15cdbcf9e1273c.jpg&quot;</span><span class="punctuation">,</span><span class="attr">&quot;defaultImg&quot;</span><span class="punctuation">:</span><span class="number">1</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;imgUrl&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;defaultImg&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;imgUrl&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;defaultImg&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;imgUrl&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;defaultImg&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;imgUrl&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;defaultImg&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;imgUrl&quot;</span><span class="punctuation">:</span><span class="string">&quot;https://gulimall20031201.oss-cn-chengdu.aliyuncs.com/2024-04-11//478aaf6e-65f8-4235-8ab3-7208a4f85853_919c850652e98031.jpg&quot;</span><span class="punctuation">,</span><span class="attr">&quot;defaultImg&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;imgUrl&quot;</span><span class="punctuation">:</span><span class="string">&quot;https://gulimall20031201.oss-cn-chengdu.aliyuncs.com/2024-04-11//53f4caf8-7cff-4696-89ea-225f4f1c6a0d_d511faab82abb34b.jpg&quot;</span><span class="punctuation">,</span><span class="attr">&quot;defaultImg&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;imgUrl&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;defaultImg&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="attr">&quot;descar&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="string">&quot;星河银&quot;</span><span class="punctuation">,</span><span class="string">&quot;8+128g&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="attr">&quot;fullCount&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">,</span><span class="attr">&quot;discount&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">,</span><span class="attr">&quot;countStatus&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">,</span><span class="attr">&quot;fullPrice&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">,</span><span class="attr">&quot;reducePrice&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">,</span><span class="attr">&quot;priceStatus&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">,</span><span class="attr">&quot;memberPrice&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">&#123;</span><span class="attr">&quot;id&quot;</span><span class="punctuation">:</span><span class="number">2</span><span class="punctuation">,</span><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span><span class="string">&quot;铜牌会员&quot;</span><span class="punctuation">,</span><span class="attr">&quot;price&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;attr&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">&#123;</span><span class="attr">&quot;attrId&quot;</span><span class="punctuation">:</span><span class="number">4</span><span class="punctuation">,</span><span class="attr">&quot;attrName&quot;</span><span class="punctuation">:</span><span class="string">&quot;选择颜色&quot;</span><span class="punctuation">,</span><span class="attr">&quot;attrValue&quot;</span><span class="punctuation">:</span><span class="string">&quot;翡冷绿&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;attrId&quot;</span><span class="punctuation">:</span><span class="number">5</span><span class="punctuation">,</span><span class="attr">&quot;attrName&quot;</span><span class="punctuation">:</span><span class="string">&quot;选择版本&quot;</span><span class="punctuation">,</span><span class="attr">&quot;attrValue&quot;</span><span class="punctuation">:</span><span class="string">&quot;8+256g&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="attr">&quot;skuName&quot;</span><span class="punctuation">:</span><span class="string">&quot;华为 HUAWEI Mate30 Pro 翡冷绿 8+256g&quot;</span><span class="punctuation">,</span><span class="attr">&quot;price&quot;</span><span class="punctuation">:</span><span class="string">&quot;6299&quot;</span><span class="punctuation">,</span><span class="attr">&quot;skuTitle&quot;</span><span class="punctuation">:</span><span class="string">&quot;华为 HUAWEI Mate30 Pro 翡冷绿 8+256g麒麟990 4G/5G全网通&quot;</span><span class="punctuation">,</span><span class="attr">&quot;skuSubtitle&quot;</span><span class="punctuation">:</span><span class="string">&quot;爆款热销 优选 速发&quot;</span><span class="punctuation">,</span><span class="attr">&quot;images&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">&#123;</span><span class="attr">&quot;imgUrl&quot;</span><span class="punctuation">:</span><span class="string">&quot;https://gulimall20031201.oss-cn-chengdu.aliyuncs.com/2024-04-11//01da444d-4fc8-4745-8e6d-1bb736388c49_0d40c24b264aa511.jpg&quot;</span><span class="punctuation">,</span><span class="attr">&quot;defaultImg&quot;</span><span class="punctuation">:</span><span class="number">1</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;imgUrl&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;defaultImg&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;imgUrl&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;defaultImg&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;imgUrl&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;defaultImg&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;imgUrl&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;defaultImg&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;imgUrl&quot;</span><span class="punctuation">:</span><span class="string">&quot;https://gulimall20031201.oss-cn-chengdu.aliyuncs.com/2024-04-11//783d5381-2711-4fd7-8c6b-598eefb452bd_b5c6b23d01dcdf81.jpg&quot;</span><span class="punctuation">,</span><span class="attr">&quot;defaultImg&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;imgUrl&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;defaultImg&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;imgUrl&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;defaultImg&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;imgUrl&quot;</span><span class="punctuation">:</span><span class="string">&quot;https://gulimall20031201.oss-cn-chengdu.aliyuncs.com/2024-04-11//3bd219db-002b-46bb-8cb8-c6d81c9877f1_a83bf5250e14caf2.jpg&quot;</span><span class="punctuation">,</span><span class="attr">&quot;defaultImg&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="attr">&quot;descar&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="string">&quot;翡冷绿&quot;</span><span class="punctuation">,</span><span class="string">&quot;8+256g&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="attr">&quot;fullCount&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">,</span><span class="attr">&quot;discount&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">,</span><span class="attr">&quot;countStatus&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">,</span><span class="attr">&quot;fullPrice&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">,</span><span class="attr">&quot;reducePrice&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">,</span><span class="attr">&quot;priceStatus&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">,</span><span class="attr">&quot;memberPrice&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">&#123;</span><span class="attr">&quot;id&quot;</span><span class="punctuation">:</span><span class="number">2</span><span class="punctuation">,</span><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span><span class="string">&quot;铜牌会员&quot;</span><span class="punctuation">,</span><span class="attr">&quot;price&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;attr&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">&#123;</span><span class="attr">&quot;attrId&quot;</span><span class="punctuation">:</span><span class="number">4</span><span class="punctuation">,</span><span class="attr">&quot;attrName&quot;</span><span class="punctuation">:</span><span class="string">&quot;选择颜色&quot;</span><span class="punctuation">,</span><span class="attr">&quot;attrValue&quot;</span><span class="punctuation">:</span><span class="string">&quot;翡冷绿&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;attrId&quot;</span><span class="punctuation">:</span><span class="number">5</span><span class="punctuation">,</span><span class="attr">&quot;attrName&quot;</span><span class="punctuation">:</span><span class="string">&quot;选择版本&quot;</span><span class="punctuation">,</span><span class="attr">&quot;attrValue&quot;</span><span class="punctuation">:</span><span class="string">&quot;8+128g&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="attr">&quot;skuName&quot;</span><span class="punctuation">:</span><span class="string">&quot;华为 HUAWEI Mate30 Pro 翡冷绿 8+128g&quot;</span><span class="punctuation">,</span><span class="attr">&quot;price&quot;</span><span class="punctuation">:</span><span class="string">&quot;5799&quot;</span><span class="punctuation">,</span><span class="attr">&quot;skuTitle&quot;</span><span class="punctuation">:</span><span class="string">&quot;华为 HUAWEI Mate30 Pro 翡冷绿 8+128g麒麟990 4G/5G全网通&quot;</span><span class="punctuation">,</span><span class="attr">&quot;skuSubtitle&quot;</span><span class="punctuation">:</span><span class="string">&quot;爆款热销 优选 速发&quot;</span><span class="punctuation">,</span><span class="attr">&quot;images&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">&#123;</span><span class="attr">&quot;imgUrl&quot;</span><span class="punctuation">:</span><span class="string">&quot;https://gulimall20031201.oss-cn-chengdu.aliyuncs.com/2024-04-11//01da444d-4fc8-4745-8e6d-1bb736388c49_0d40c24b264aa511.jpg&quot;</span><span class="punctuation">,</span><span class="attr">&quot;defaultImg&quot;</span><span class="punctuation">:</span><span class="number">1</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;imgUrl&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;defaultImg&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;imgUrl&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;defaultImg&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;imgUrl&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;defaultImg&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;imgUrl&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;defaultImg&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;imgUrl&quot;</span><span class="punctuation">:</span><span class="string">&quot;https://gulimall20031201.oss-cn-chengdu.aliyuncs.com/2024-04-11//783d5381-2711-4fd7-8c6b-598eefb452bd_b5c6b23d01dcdf81.jpg&quot;</span><span class="punctuation">,</span><span class="attr">&quot;defaultImg&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;imgUrl&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;defaultImg&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;imgUrl&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;defaultImg&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;imgUrl&quot;</span><span class="punctuation">:</span><span class="string">&quot;https://gulimall20031201.oss-cn-chengdu.aliyuncs.com/2024-04-11//3bd219db-002b-46bb-8cb8-c6d81c9877f1_a83bf5250e14caf2.jpg&quot;</span><span class="punctuation">,</span><span class="attr">&quot;defaultImg&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="attr">&quot;descar&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="string">&quot;翡冷绿&quot;</span><span class="punctuation">,</span><span class="string">&quot;8+128g&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="attr">&quot;fullCount&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">,</span><span class="attr">&quot;discount&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">,</span><span class="attr">&quot;countStatus&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">,</span><span class="attr">&quot;fullPrice&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">,</span><span class="attr">&quot;reducePrice&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">,</span><span class="attr">&quot;priceStatus&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">,</span><span class="attr">&quot;memberPrice&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">&#123;</span><span class="attr">&quot;id&quot;</span><span class="punctuation">:</span><span class="number">2</span><span class="punctuation">,</span><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span><span class="string">&quot;铜牌会员&quot;</span><span class="punctuation">,</span><span class="attr">&quot;price&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;attr&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">&#123;</span><span class="attr">&quot;attrId&quot;</span><span class="punctuation">:</span><span class="number">4</span><span class="punctuation">,</span><span class="attr">&quot;attrName&quot;</span><span class="punctuation">:</span><span class="string">&quot;选择颜色&quot;</span><span class="punctuation">,</span><span class="attr">&quot;attrValue&quot;</span><span class="punctuation">:</span><span class="string">&quot;罗兰紫&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;attrId&quot;</span><span class="punctuation">:</span><span class="number">5</span><span class="punctuation">,</span><span class="attr">&quot;attrName&quot;</span><span class="punctuation">:</span><span class="string">&quot;选择版本&quot;</span><span class="punctuation">,</span><span class="attr">&quot;attrValue&quot;</span><span class="punctuation">:</span><span class="string">&quot;8+256g&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="attr">&quot;skuName&quot;</span><span class="punctuation">:</span><span class="string">&quot;华为 HUAWEI Mate30 Pro 罗兰紫 8+256g&quot;</span><span class="punctuation">,</span><span class="attr">&quot;price&quot;</span><span class="punctuation">:</span><span class="string">&quot;6299&quot;</span><span class="punctuation">,</span><span class="attr">&quot;skuTitle&quot;</span><span class="punctuation">:</span><span class="string">&quot;华为 HUAWEI Mate30 Pro 罗兰紫 8+256g麒麟990 4G/5G全网通&quot;</span><span class="punctuation">,</span><span class="attr">&quot;skuSubtitle&quot;</span><span class="punctuation">:</span><span class="string">&quot;爆款热销 优选 速发&quot;</span><span class="punctuation">,</span><span class="attr">&quot;images&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">&#123;</span><span class="attr">&quot;imgUrl&quot;</span><span class="punctuation">:</span><span class="string">&quot;https://gulimall20031201.oss-cn-chengdu.aliyuncs.com/2024-04-11//01da444d-4fc8-4745-8e6d-1bb736388c49_0d40c24b264aa511.jpg&quot;</span><span class="punctuation">,</span><span class="attr">&quot;defaultImg&quot;</span><span class="punctuation">:</span><span class="number">1</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;imgUrl&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;defaultImg&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;imgUrl&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;defaultImg&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;imgUrl&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;defaultImg&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;imgUrl&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;defaultImg&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;imgUrl&quot;</span><span class="punctuation">:</span><span class="string">&quot;https://gulimall20031201.oss-cn-chengdu.aliyuncs.com/2024-04-11//783d5381-2711-4fd7-8c6b-598eefb452bd_b5c6b23d01dcdf81.jpg&quot;</span><span class="punctuation">,</span><span class="attr">&quot;defaultImg&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;imgUrl&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;defaultImg&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;imgUrl&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;defaultImg&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;imgUrl&quot;</span><span class="punctuation">:</span><span class="string">&quot;https://gulimall20031201.oss-cn-chengdu.aliyuncs.com/2024-04-11//3bd219db-002b-46bb-8cb8-c6d81c9877f1_a83bf5250e14caf2.jpg&quot;</span><span class="punctuation">,</span><span class="attr">&quot;defaultImg&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="attr">&quot;descar&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="string">&quot;罗兰紫&quot;</span><span class="punctuation">,</span><span class="string">&quot;8+256g&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="attr">&quot;fullCount&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">,</span><span class="attr">&quot;discount&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">,</span><span class="attr">&quot;countStatus&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">,</span><span class="attr">&quot;fullPrice&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">,</span><span class="attr">&quot;reducePrice&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">,</span><span class="attr">&quot;priceStatus&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">,</span><span class="attr">&quot;memberPrice&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">&#123;</span><span class="attr">&quot;id&quot;</span><span class="punctuation">:</span><span class="number">2</span><span class="punctuation">,</span><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span><span class="string">&quot;铜牌会员&quot;</span><span class="punctuation">,</span><span class="attr">&quot;price&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;attr&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">&#123;</span><span class="attr">&quot;attrId&quot;</span><span class="punctuation">:</span><span class="number">4</span><span class="punctuation">,</span><span class="attr">&quot;attrName&quot;</span><span class="punctuation">:</span><span class="string">&quot;选择颜色&quot;</span><span class="punctuation">,</span><span class="attr">&quot;attrValue&quot;</span><span class="punctuation">:</span><span class="string">&quot;罗兰紫&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;attrId&quot;</span><span class="punctuation">:</span><span class="number">5</span><span class="punctuation">,</span><span class="attr">&quot;attrName&quot;</span><span class="punctuation">:</span><span class="string">&quot;选择版本&quot;</span><span class="punctuation">,</span><span class="attr">&quot;attrValue&quot;</span><span class="punctuation">:</span><span class="string">&quot;8+128g&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="attr">&quot;skuName&quot;</span><span class="punctuation">:</span><span class="string">&quot;华为 HUAWEI Mate30 Pro 罗兰紫 8+128g&quot;</span><span class="punctuation">,</span><span class="attr">&quot;price&quot;</span><span class="punctuation">:</span><span class="string">&quot;5799&quot;</span><span class="punctuation">,</span><span class="attr">&quot;skuTitle&quot;</span><span class="punctuation">:</span><span class="string">&quot;华为 HUAWEI Mate30 Pro 罗兰紫 8+128g麒麟990 4G/5G全网通&quot;</span><span class="punctuation">,</span><span class="attr">&quot;skuSubtitle&quot;</span><span class="punctuation">:</span><span class="string">&quot;爆款热销 优选 速发&quot;</span><span class="punctuation">,</span><span class="attr">&quot;images&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">&#123;</span><span class="attr">&quot;imgUrl&quot;</span><span class="punctuation">:</span><span class="string">&quot;https://gulimall20031201.oss-cn-chengdu.aliyuncs.com/2024-04-11//01da444d-4fc8-4745-8e6d-1bb736388c49_0d40c24b264aa511.jpg&quot;</span><span class="punctuation">,</span><span class="attr">&quot;defaultImg&quot;</span><span class="punctuation">:</span><span class="number">1</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;imgUrl&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;defaultImg&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;imgUrl&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;defaultImg&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;imgUrl&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;defaultImg&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;imgUrl&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;defaultImg&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;imgUrl&quot;</span><span class="punctuation">:</span><span class="string">&quot;https://gulimall20031201.oss-cn-chengdu.aliyuncs.com/2024-04-11//783d5381-2711-4fd7-8c6b-598eefb452bd_b5c6b23d01dcdf81.jpg&quot;</span><span class="punctuation">,</span><span class="attr">&quot;defaultImg&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;imgUrl&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;defaultImg&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;imgUrl&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;defaultImg&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="punctuation">&#123;</span><span class="attr">&quot;imgUrl&quot;</span><span class="punctuation">:</span><span class="string">&quot;https://gulimall20031201.oss-cn-chengdu.aliyuncs.com/2024-04-11//3bd219db-002b-46bb-8cb8-c6d81c9877f1_a83bf5250e14caf2.jpg&quot;</span><span class="punctuation">,</span><span class="attr">&quot;defaultImg&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="attr">&quot;descar&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="string">&quot;罗兰紫&quot;</span><span class="punctuation">,</span><span class="string">&quot;8+128g&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="attr">&quot;fullCount&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">,</span><span class="attr">&quot;discount&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">,</span><span class="attr">&quot;countStatus&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">,</span><span class="attr">&quot;fullPrice&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">,</span><span class="attr">&quot;reducePrice&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">,</span><span class="attr">&quot;priceStatus&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">,</span><span class="attr">&quot;memberPrice&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">&#123;</span><span class="attr">&quot;id&quot;</span><span class="punctuation">:</span><span class="number">2</span><span class="punctuation">,</span><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span><span class="string">&quot;铜牌会员&quot;</span><span class="punctuation">,</span><span class="attr">&quot;price&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>修改“com.atguigu.gulimall.product.controller.SpuInfoController”类：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/save&quot;)</span></span><br><span class="line">    <span class="comment">//@RequiresPermissions(&quot;product:spuinfo:save&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> R <span class="title function_">save</span><span class="params">(<span class="meta">@RequestBody</span> SpuSaveVo vo)</span>&#123;</span><br><span class="line">        spuInfoService.saveSpuInfo(vo);</span><br><span class="line">        <span class="keyword">return</span> R.ok();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>修改“com.atguigu.gulimall.product.service.impl.SpuInfoServiceImpl”类:</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Transactional</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">saveSpuInfo</span><span class="params">(SpuSaveVo vo)</span> &#123;</span><br><span class="line">    <span class="comment">//1.保存spu基本信息：pms_spu_info</span></span><br><span class="line">    <span class="type">SpuInfoEntity</span> <span class="variable">spuInfoEntity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SpuInfoEntity</span>();</span><br><span class="line">    BeanUtils.copyProperties(vo,spuInfoEntity);</span><br><span class="line">    spuInfoEntity.setCreateTime(<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">    spuInfoEntity.setUpdateTime(<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">    <span class="built_in">this</span>.saveBaseSpuInfo(spuInfoEntity);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//2.保存spu的描述图片：pms_spu_info_desc</span></span><br><span class="line">    List&lt;String&gt; decript = vo.getDecript();</span><br><span class="line">    <span class="type">SpuInfoDescEntity</span> <span class="variable">descEntity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SpuInfoDescEntity</span>();</span><br><span class="line">    descEntity.setSpuId(spuInfoEntity.getId());</span><br><span class="line">    descEntity.setDecript(String.join(<span class="string">&quot;,&quot;</span>,decript));</span><br><span class="line">    spuInfoDescService.saveSpuInfoDesc(descEntity);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//3.保存spu的图片集：pms_spu_images</span></span><br><span class="line">    List&lt;String&gt; images = vo.getImages();</span><br><span class="line">    spuImagesService.saveImages(spuInfoEntity.getId(),images);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//4.保存spu的规格参数：pms_product_attr_value</span></span><br><span class="line">    List&lt;BaseAttrs&gt; baseAttrs = vo.getBaseAttrs();</span><br><span class="line">    List&lt;ProductAttrValueEntity&gt; collect = baseAttrs.stream().map(attr -&gt; &#123;</span><br><span class="line">        <span class="type">ProductAttrValueEntity</span> <span class="variable">productAttrValueEntity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ProductAttrValueEntity</span>();</span><br><span class="line">        productAttrValueEntity.setAttrId(attr.getAttrId());</span><br><span class="line">        <span class="type">AttrEntity</span> <span class="variable">id</span> <span class="operator">=</span> attrService.getById(attr.getAttrId());</span><br><span class="line">        productAttrValueEntity.setAttrName(id.getAttrName());</span><br><span class="line">        productAttrValueEntity.setAttrValue(attr.getAttrValues());</span><br><span class="line">        productAttrValueEntity.setQuickShow(attr.getShowDesc());</span><br><span class="line">        productAttrValueEntity.setSpuId(spuInfoEntity.getId());</span><br><span class="line">        <span class="keyword">return</span> productAttrValueEntity;</span><br><span class="line">    &#125;).collect(Collectors.toList());</span><br><span class="line">    productAttrValueService.saveProductAttr(collect);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//5.保存spu积分信息：gulimall_sms -&gt; sms_spu_bounds</span></span><br><span class="line">    <span class="type">Bounds</span> <span class="variable">bounds</span> <span class="operator">=</span> vo.getBounds();</span><br><span class="line">    <span class="type">SpuBoundsTo</span> <span class="variable">spuBoundsTo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SpuBoundsTo</span>();</span><br><span class="line">    BeanUtils.copyProperties(bounds,spuBoundsTo);</span><br><span class="line">    spuBoundsTo.setSpuId(spuInfoEntity.getId());</span><br><span class="line">    <span class="type">R</span> <span class="variable">r</span> <span class="operator">=</span> couponFeignService.saveSpuBounds(spuBoundsTo);</span><br><span class="line">    <span class="keyword">if</span> (r.getCode() != <span class="number">0</span>)&#123;</span><br><span class="line">        log.error(<span class="string">&quot;远程保存spu信息失败&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//5.保存当前spu对应的所有sku信息</span></span><br><span class="line">    List&lt;Skus&gt; skus = vo.getSkus();</span><br><span class="line">    <span class="keyword">if</span> (skus != <span class="literal">null</span> &amp;&amp; skus.size() &gt; <span class="number">0</span>)&#123;</span><br><span class="line">        skus.forEach(item-&gt;&#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">defaultImg</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">for</span> (Images img : item.getImages()) &#123;</span><br><span class="line">                <span class="keyword">if</span> (img.getDefaultImg() == <span class="number">1</span>)&#123;</span><br><span class="line">                    defaultImg = img.getImgUrl();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="type">SkuInfoEntity</span> <span class="variable">skuInfoEntity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SkuInfoEntity</span>();</span><br><span class="line">            BeanUtils.copyProperties(item,skuInfoEntity);</span><br><span class="line">            skuInfoEntity.setBrandId(spuInfoEntity.getBrandId());</span><br><span class="line">            skuInfoEntity.setCatalogId(spuInfoEntity.getCatalogId());</span><br><span class="line">            skuInfoEntity.setSaleCount(<span class="number">0L</span>);</span><br><span class="line">            skuInfoEntity.setSpuId(spuInfoEntity.getId());</span><br><span class="line">            skuInfoEntity.setSkuDefaultImg(defaultImg);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//5.1） sku的基本信息：pms_sku_info</span></span><br><span class="line">            skuInfoService.saveSkuInfo(skuInfoEntity);</span><br><span class="line">            <span class="type">Long</span> <span class="variable">skuId</span> <span class="operator">=</span> skuInfoEntity.getSkuId();</span><br><span class="line">            List&lt;SkuImagesEntity&gt; imagesEntities = item.getImages().stream().map(img -&gt; &#123;</span><br><span class="line">                <span class="type">SkuImagesEntity</span> <span class="variable">skuImagesEntity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SkuImagesEntity</span>();</span><br><span class="line">                skuImagesEntity.setSkuId(skuId);</span><br><span class="line">                skuImagesEntity.setImgUrl(img.getImgUrl());</span><br><span class="line">                skuImagesEntity.setDefaultImg(img.getDefaultImg());</span><br><span class="line">                <span class="keyword">return</span> skuImagesEntity;</span><br><span class="line">            &#125;).filter(entity-&gt;&#123;</span><br><span class="line">                <span class="keyword">return</span> !StringUtils.isEmpty(entity.getImgUrl());<span class="comment">//图片路径不为空才返回</span></span><br><span class="line">            &#125;).collect(Collectors.toList());</span><br><span class="line"></span><br><span class="line">            <span class="comment">//5.2） sku的图片信息：pms_sku_images</span></span><br><span class="line">            skuImagesService.saveBatch(imagesEntities);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//5.3） sku的销售属性信息：pms_sku_sale_attr_value</span></span><br><span class="line">            List&lt;Attr&gt; attr = item.getAttr();</span><br><span class="line">            List&lt;SkuSaleAttrValueEntity&gt; saleAttrValueEntities = attr.stream().map(a -&gt; &#123;</span><br><span class="line">                <span class="type">SkuSaleAttrValueEntity</span> <span class="variable">attrValueEntity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SkuSaleAttrValueEntity</span>();</span><br><span class="line">                BeanUtils.copyProperties(a, attrValueEntity);</span><br><span class="line">                attrValueEntity.setSkuId(skuId);</span><br><span class="line">                <span class="keyword">return</span> attrValueEntity;</span><br><span class="line">            &#125;).collect(Collectors.toList());</span><br><span class="line">            skuSaleAttrValueService.saveBatch(saleAttrValueEntities);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//5.4） sku优惠、满减等信息gulimall_sms</span></span><br><span class="line">            <span class="type">SkuReductionTo</span> <span class="variable">skuReductionTo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SkuReductionTo</span>();</span><br><span class="line">            BeanUtils.copyProperties(item,skuReductionTo);</span><br><span class="line">            skuReductionTo.setSkuId(skuId);</span><br><span class="line">            <span class="keyword">if</span> (skuReductionTo.getFullCount() &gt; <span class="number">0</span> || skuReductionTo.getFullPrice().compareTo(<span class="keyword">new</span> <span class="title class_">BigDecimal</span>(<span class="string">&quot;0&quot;</span>)) == <span class="number">1</span>)&#123;</span><br><span class="line">                <span class="type">R</span> <span class="variable">r1</span> <span class="operator">=</span> couponFeignService.saveSkuReduction(skuReductionTo);</span><br><span class="line">                <span class="keyword">if</span> (r1.getCode() != <span class="number">0</span>)&#123;</span><br><span class="line">                    log.error(<span class="string">&quot;远程保存sku优惠信息失败&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>保存spu基本信息 pms_spu_info</strong>  </p><p>修改“com.atguigu.gulimall.product.service.impl.SpuInfoServiceImpl”类： </p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">saveBaseSpuInfo</span><span class="params">(SpuInfoEntity infoEntity)</span> &#123;</span><br><span class="line">       <span class="built_in">this</span>.baseMapper.insert(infoEntity);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p><strong>保存spu的描述图片  pms_spu_info_desc</strong> </p><p>修改“com.atguigu.gulimall.product.service.impl.SpuInfoDescServiceImpl”类：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">saveSpuInfoDesc</span><span class="params">(SpuInfoDescEntity descEntity)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.baseMapper.insert(descEntity);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><strong>保存spu的图片集    pms_spu_images</strong> </p><p>修改“com.atguigu.gulimall.product.service.impl.SpuImagesServiceImpl”类：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">saveImages</span><span class="params">(Long id, List&lt;String&gt; images)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (images == <span class="literal">null</span> || images.size() == <span class="number">0</span>)&#123;</span><br><span class="line"></span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            List&lt;SpuImagesEntity&gt; collect = images.stream().map(img -&gt; &#123;</span><br><span class="line">                <span class="type">SpuImagesEntity</span> <span class="variable">spuImagesEntity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SpuImagesEntity</span>();</span><br><span class="line">                spuImagesEntity.setSpuId(id);</span><br><span class="line">                spuImagesEntity.setImgUrl(img);</span><br><span class="line">                <span class="keyword">return</span> spuImagesEntity;</span><br><span class="line">            &#125;).collect(Collectors.toList());</span><br><span class="line">            <span class="built_in">this</span>.saveBatch(collect);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><strong>保存spu的规格参数  pms_product_attr_value</strong> </p><p>修改“com.atguigu.gulimall.product.service.impl.ProductAttrValueServiceImpl”类：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">saveProductAttr</span><span class="params">(List&lt;ProductAttrValueEntity&gt; collect)</span> &#123;</span><br><span class="line">       <span class="built_in">this</span>.saveBatch(collect);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p><strong>保存spu的积分信息 gulimall_sms –&gt; sms_spu_bounds</strong></p><p>这里需要远程调用第三方服务<br>1、创建openFeign配置接口</p><p>2、在启动类GulimallProductApplication中加上@EnableFeignClients(basePackages &#x3D; “com.atguigu.gulimall.product.feign”)</p><p>3、在gulimall-common添加服务与服务之间调用的to类“com.atguigu.common.to.SpuBoundTo”类：</p><p>每个服务间传递的数据可以封装到这个to内</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SpuBoundTo</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Long SpuId;</span><br><span class="line">    <span class="keyword">private</span> BigDecimal buyBounds;</span><br><span class="line">    <span class="keyword">private</span> BigDecimal growBounds;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>修改“com.atguigu.gulimall.product.feign.CouponFeignService”类：</strong></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@FeignClient(&quot;gulimall-coupon&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">CouponFeignService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 1、couponFeignService.saveSpuBounds(spuBoundTo)</span></span><br><span class="line"><span class="comment">     *      1)、<span class="doctag">@RequestBody</span>将这个对象转为json</span></span><br><span class="line"><span class="comment">     *      2)、找到gulimall-coupon服务，给/coupon/spubounds/save发送请求。将上一步转的json放在请求体的位置发送请求</span></span><br><span class="line"><span class="comment">     *      3）、对方服务收到请求请求体有json数据。</span></span><br><span class="line"><span class="comment">     *      (<span class="doctag">@RequestBody</span> SpuBoundsEntity spuBoundTo)将请求体里的json转为SpuBoundsEntity</span></span><br><span class="line"><span class="comment">     * 只要json数据模型是兼容的。对方服务无需使用同一个to</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> spuBoundTo</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/coupon/spubounds/save&quot;)</span></span><br><span class="line">    R <span class="title function_">saveSpuBounds</span><span class="params">(<span class="meta">@RequestBody</span> SpuBoundsTo spuBoundsTo)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/coupon/skufullreduction/saveInfo&quot;)</span></span><br><span class="line">    R <span class="title function_">saveSkuReduction</span><span class="params">(<span class="meta">@RequestBody</span> SkuReductionTokuReductionTo)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>com.atguigu.gulimall.coupon.controller.SpuBoundsController接口</strong></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 保存</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@PostMapping(&quot;/save&quot;)</span></span><br><span class="line"><span class="keyword">public</span> R <span class="title function_">save</span><span class="params">(<span class="meta">@RequestBody</span> SpuBoundsEntity spuBounds)</span>&#123;</span><br><span class="line">spuBoundsService.save(spuBounds);</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">return</span> R.ok();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>保存当前spu对应的所有sku信息</strong><br>1)、sku的基本信息  pms_sku_info</p><p>修改“com.atguigu.gulimall.product.service.impl.SkuInfoServiceImpl”类，代码如下：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">saveSkuInfo</span><span class="params">(SkuInfoEntity skuInfoEntity)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.baseMapper.insert(skuInfoEntity);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>2)、sku的优惠、满减等信息   gulimall_sms -&gt; sms_sku_ladder&#x2F;sms_sku_full_reduction&#x2F;sms_member_price</p><p> 在gulimall-common添加服务与服务之间调用的to类“com.atguigu.common.to.MemberPrice”，“com.atguigu.common.to.SkuReductionTo”类，代码如下：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SkuReductionTo</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Long skuId;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> fullCount;</span><br><span class="line">    <span class="keyword">private</span> BigDecimal discount;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> countStatus;</span><br><span class="line">    <span class="keyword">private</span> BigDecimal fullPrice;</span><br><span class="line">    <span class="keyword">private</span> BigDecimal reducePrice;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> priceStatus;</span><br><span class="line">    <span class="keyword">private</span> List&lt;MemberPrice&gt; memberPrice;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MemberPrice</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> BigDecimal price;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后我把product服务中的memberPrice删除了，不然会报空指针异常。</p><p> 修改“com.atguigu.gulimall.coupon.service.impl.SkuFullReductionServiceImpl”类：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">saveSkuReduction</span><span class="params">(SkuReductionTo reductionTo)</span> &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;----&gt;&quot;</span>+reductionTo);</span><br><span class="line">    <span class="comment">//  sku优惠、满减等信息gulimall_sms</span></span><br><span class="line">    <span class="comment">//sku_ladder</span></span><br><span class="line">    <span class="type">SkuLadderEntity</span> <span class="variable">skuLadderEntity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SkuLadderEntity</span>();</span><br><span class="line">    skuLadderEntity.setSkuId(reductionTo.getSkuId());</span><br><span class="line">    skuLadderEntity.setFullCount(reductionTo.getFullCount());</span><br><span class="line">    skuLadderEntity.setDiscount(reductionTo.getDiscount());</span><br><span class="line">    skuLadderEntity.setAddOther(reductionTo.getCountStatus());</span><br><span class="line">    <span class="keyword">if</span>(reductionTo.getFullCount() &gt; <span class="number">0</span>)&#123;</span><br><span class="line">        skuLadderService.save(skuLadderEntity);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//满减</span></span><br><span class="line">    <span class="type">SkuFullReductionEntity</span> <span class="variable">skuFullReductionEntity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SkuFullReductionEntity</span>();</span><br><span class="line">    BeanUtils.copyProperties(reductionTo,skuFullReductionEntity);</span><br><span class="line">    <span class="keyword">if</span> (reductionTo.getFullPrice().compareTo(<span class="keyword">new</span> <span class="title class_">BigDecimal</span>(<span class="string">&quot;0&quot;</span>)) == <span class="number">1</span>)&#123;</span><br><span class="line">        <span class="built_in">this</span>.save(skuFullReductionEntity);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//会员价格</span></span><br><span class="line">    List&lt;MemberPrice&gt; memberPrice = reductionTo.getMemberPrice();</span><br><span class="line">    List&lt;MemberPriceEntity&gt; collect = memberPrice.stream().map(item -&gt; &#123;</span><br><span class="line">        <span class="type">MemberPriceEntity</span> <span class="variable">memberPriceEntity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MemberPriceEntity</span>();</span><br><span class="line">        memberPriceEntity.setSkuId(reductionTo.getSkuId());</span><br><span class="line">        memberPriceEntity.setMemberLevelId(item.getId());</span><br><span class="line">        memberPriceEntity.setMemberLevelName(item.getName());</span><br><span class="line">        memberPriceEntity.setMemberPrice(item.getPrice());</span><br><span class="line">        memberPriceEntity.setAddOther(<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">return</span> memberPriceEntity;</span><br><span class="line">    &#125;).filter(item-&gt;&#123;</span><br><span class="line">        <span class="keyword">return</span> item.getMemberPrice().compareTo(<span class="keyword">new</span> <span class="title class_">BigDecimal</span>(<span class="string">&quot;0&quot;</span>)) == <span class="number">1</span>;</span><br><span class="line">    &#125;).collect(Collectors.toList());</span><br><span class="line">    memberPriceService.saveBatch(collect);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>添加成功</p><p><img src="image-20240411135142902.png" alt="image-20240411135142902"></p><h3 id="9、spu-sku检索"><a href="#9、spu-sku检索" class="headerlink" title="9、spu&amp;sku检索"></a>9、spu&amp;sku检索</h3><h4 id="9-1spu检索"><a href="#9-1spu检索" class="headerlink" title="9.1spu检索"></a>9.1spu检索</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">GET      /product/spuinfo/list</span><br></pre></td></tr></table></figure><p>请求参数</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    page: 1,//当前页码</span><br><span class="line">            limit: 10,//每页记录数</span><br><span class="line">        sidx: &#x27;id&#x27;,//排序字段</span><br><span class="line">        order: &#x27;asc/desc&#x27;,//排序方式</span><br><span class="line">        key: &#x27;华为&#x27;,//检索关键字</span><br><span class="line">        catelogId: 6,//三级分类id</span><br><span class="line">        brandId: 1,//品牌id </span><br><span class="line">        status: 0,//商品状态</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>分页数据</p><p>响应数据</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;msg&quot;: &quot;success&quot;,</span><br><span class="line">        &quot;code&quot;: 0,</span><br><span class="line">        &quot;page&quot;: &#123;</span><br><span class="line">    &quot;totalCount&quot;: 0,</span><br><span class="line">            &quot;pageSize&quot;: 10,</span><br><span class="line">            &quot;totalPage&quot;: 0,</span><br><span class="line">            &quot;currPage&quot;: 1,</span><br><span class="line">            &quot;list&quot;: [&#123;</span><br><span class="line"></span><br><span class="line">        &quot;brandId&quot;: 0, //品牌id</span><br><span class="line">                &quot;brandName&quot;: &quot;品牌名字&quot;,</span><br><span class="line">                &quot;catalogId&quot;: 0, //分类id</span><br><span class="line">                &quot;catalogName&quot;: &quot;分类名字&quot;,</span><br><span class="line">                &quot;createTime&quot;: &quot;2019-11-13T16:07:32.877Z&quot;, //创建时间</span><br><span class="line">                &quot;id&quot;: 0, //商品id</span><br><span class="line">                &quot;publishStatus&quot;: 0, //发布状态</span><br><span class="line">                &quot;spuDescription&quot;: &quot;string&quot;, //商品描述</span><br><span class="line">                &quot;spuName&quot;: &quot;string&quot;, //商品名字</span><br><span class="line">                &quot;updateTime&quot;: &quot;2019-11-13T16:07:32.877Z&quot;, //更新时间</span><br><span class="line">                &quot;weight&quot;: 0 //重量</span><br><span class="line"></span><br><span class="line">    &#125;]</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>修改“com.atguigu.gulimall.product.controller.SpuInfoController”类：</strong></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 列表</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/list&quot;)</span></span><br><span class="line"><span class="keyword">public</span> R <span class="title function_">list</span><span class="params">(<span class="meta">@RequestParam</span> Map&lt;String, Object&gt; params)</span>&#123;</span><br><span class="line">    <span class="type">PageUtils</span> <span class="variable">page</span> <span class="operator">=</span> spuInfoService.queryPageByCondition(params);</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">return</span> R.ok().put(<span class="string">&quot;page&quot;</span>, page);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>修改“com.atguigu.gulimall.product.service.impl.SpuInfoServiceImpl”类：</strong></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">@Override</span><br><span class="line">   public PageUtils queryPageByCondition(Map&lt;String, Object&gt; params) &#123;</span><br><span class="line">       QueryWrapper&lt;SpuInfoEntity&gt; wrapper = new QueryWrapper&lt;&gt;();</span><br><span class="line">       String key = (String) params.get(&quot;key&quot;);</span><br><span class="line">       if (!StringUtils.isEmpty(key))&#123;</span><br><span class="line">           wrapper.and(w-&gt;&#123;</span><br><span class="line">               w.eq(&quot;id&quot;,key).or().like(&quot;spu_name&quot;,key);</span><br><span class="line">           &#125;);</span><br><span class="line">       &#125;</span><br><span class="line">       String status = (String) params.get(&quot;status&quot;);</span><br><span class="line">       System.out.println(&quot;====&gt;&quot;+status);</span><br><span class="line">       if (!StringUtils.isEmpty(status))&#123;</span><br><span class="line">           wrapper.eq(&quot;publish_status&quot;,status);</span><br><span class="line">       &#125;</span><br><span class="line">       String brandId = (String) params.get(&quot;brandId&quot;);</span><br><span class="line">       if (!StringUtils.isEmpty(brandId) &amp;&amp;  !&quot;0&quot;.equalsIgnoreCase(brandId))&#123;</span><br><span class="line">           wrapper.eq(&quot;brand_id&quot;,brandId);</span><br><span class="line">       &#125;</span><br><span class="line">       String catelogId = (String) params.get(&quot;catelogId&quot;);</span><br><span class="line">       if (!StringUtils.isEmpty(catelogId) &amp;&amp;  !&quot;0&quot;.equalsIgnoreCase(catelogId))&#123;</span><br><span class="line">           wrapper.eq(&quot;catalog_id&quot;,catelogId);</span><br><span class="line">       &#125;</span><br><span class="line">       IPage&lt;SpuInfoEntity&gt; page = this.page(</span><br><span class="line">               new Query&lt;SpuInfoEntity&gt;().getPage(params),</span><br><span class="line">               wrapper</span><br><span class="line">       );</span><br><span class="line">       return new PageUtils(page);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p><img src="image-20240411141404798.png" alt="image-20240411141404798"></p><p>前端显示时间格式化一下，product服务中的application.yml配置指定格式化</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">jackson:</span></span><br><span class="line">    <span class="attr">date-format:</span> <span class="string">yyyy-MM-dd</span> <span class="string">HH:mm:ss</span></span><br></pre></td></tr></table></figure><p><img src="image-20240411141648816.png" alt="image-20240411141648816"></p><h4 id="9-2sku检索"><a href="#9-2sku检索" class="headerlink" title="9.2sku检索"></a>9.2sku检索</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">GET   /product/skuinfo/list</span><br></pre></td></tr></table></figure><p>请求参数</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">        page<span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span><span class="comment">//当前页码</span></span><br><span class="line">        limit<span class="punctuation">:</span> <span class="number">10</span><span class="punctuation">,</span><span class="comment">//每页记录数</span></span><br><span class="line">        sidx<span class="punctuation">:</span> &#x27;id&#x27;<span class="punctuation">,</span><span class="comment">//排序字段</span></span><br><span class="line">        order<span class="punctuation">:</span> &#x27;asc/desc&#x27;<span class="punctuation">,</span><span class="comment">//排序方式</span></span><br><span class="line">        key<span class="punctuation">:</span> &#x27;华为&#x27;<span class="punctuation">,</span><span class="comment">//检索关键字</span></span><br><span class="line">        catelogId<span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">        brandId<span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">        min<span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">        max<span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line"><span class="punctuation">&#125;</span> </span><br></pre></td></tr></table></figure><p>分页数据</p><p>响应数据</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;msg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;success&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;page&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;totalCount&quot;</span><span class="punctuation">:</span> <span class="number">26</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;pageSize&quot;</span><span class="punctuation">:</span> <span class="number">10</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;totalPage&quot;</span><span class="punctuation">:</span> <span class="number">3</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;currPage&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;list&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;skuId&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;spuId&quot;</span><span class="punctuation">:</span> <span class="number">11</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;skuName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;华为 HUAWEI Mate 30 Pro 星河银 8GB+256GB&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;skuDesc&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;catalogId&quot;</span><span class="punctuation">:</span> <span class="number">225</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;brandId&quot;</span><span class="punctuation">:</span> <span class="number">9</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;skuDefaultImg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://gulimall-hello.oss-cn-beijing.aliyuncs.com/2019-11-26/60e65a44-f943-4ed5-87c8-8cf90f403018_d511faab82abb34b.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;skuTitle&quot;</span><span class="punctuation">:</span> <span class="string">&quot;华为 HUAWEI Mate 30 Pro 星河银 8GB+256GB麒麟990旗舰芯片OLED环幕屏双4000万徕卡电影四摄4G全网通手机&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;skuSubtitle&quot;</span><span class="punctuation">:</span> <span class="string">&quot;【现货抢购！享白条12期免息！】麒麟990，OLED环幕屏双4000万徕卡电影四摄；Mate30系列享12期免息》&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;price&quot;</span><span class="punctuation">:</span> <span class="number">6299.0000</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;saleCount&quot;</span><span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span> </span><br></pre></td></tr></table></figure><p>修改“com.atguigu.gulimall.product.controller.SkuInfoController”类，代码如下：</p><pre><code> @RequestMapping(&quot;/list&quot;)    public R list(@RequestParam Map&lt;String, Object&gt; params)&#123;        PageUtils page = skuInfoService.queryPageByCondition(params);         return R.ok().put(&quot;page&quot;, page);    &#125;</code></pre><p>修改“com.atguigu.gulimall.product.service.SkuInfoService”类，代码如下：</p><p>PageUtils queryPageByCondition(Map&lt;String, Object&gt; params);</p><p>修改“com.atguigu.gulimall.product.service.impl.SkuInfoServiceImpl”类，代码如下：</p><pre><code>@Override    public PageUtils queryPageByCondition(Map&lt;String, Object&gt; params) &#123;        QueryWrapper&lt;SkuInfoEntity&gt; queryWrapper = new QueryWrapper&lt;&gt;();                String key = (String) params.get(&quot;key&quot;);        if (!StringUtils.isEmpty(key))&#123;            queryWrapper.and((w)-&gt;&#123;                w.eq(&quot;sku_id&quot;,key).or().like(&quot;sku_name&quot;,key);            &#125;);        &#125;         String catelogId = (String) params.get(&quot;catelogId&quot;);        if (!StringUtils.isEmpty(catelogId) &amp;&amp; !&quot;0&quot;.equalsIgnoreCase(catelogId))&#123;            queryWrapper.eq(&quot;catalog_id&quot;,catelogId);        &#125;         String brandId = (String) params.get(&quot;brandId&quot;);        if (!StringUtils.isEmpty(brandId) &amp;&amp; !&quot;0&quot;.equalsIgnoreCase(brandId))&#123;            queryWrapper.eq(&quot;brand_id&quot;,brandId);        &#125;         String min = (String) params.get(&quot;min&quot;);        if (!StringUtils.isEmpty(min))&#123;            queryWrapper.ge(&quot;price&quot;,min);        &#125;         String max = (String) params.get(&quot;max&quot;);        if (!StringUtils.isEmpty(max))&#123;            try&#123;                BigDecimal bigDecimal = new BigDecimal(max);                if (bigDecimal.compareTo(new BigDecimal(&quot;0&quot;))==1)&#123;                    queryWrapper.le(&quot;price&quot;,max);                &#125;            &#125;catch (Exception e)&#123;             &#125;        &#125;         IPage&lt;SkuInfoEntity&gt; page = this.page(                new Query&lt;SkuInfoEntity&gt;().getPage(params),                queryWrapper        );        return new PageUtils(page);    &#125;</code></pre><h2 id="五、仓储服务"><a href="#五、仓储服务" class="headerlink" title="五、仓储服务"></a>五、仓储服务</h2><h3 id="1-仓库管理"><a href="#1-仓库管理" class="headerlink" title="1.仓库管理"></a>1.仓库管理</h3><h4 id="1-1启动仓库服务-获取仓库列表"><a href="#1-1启动仓库服务-获取仓库列表" class="headerlink" title="1.1启动仓库服务&amp;获取仓库列表"></a>1.1启动仓库服务&amp;获取仓库列表</h4><p>API :        GET       &#x2F;ware&#x2F;wareinfo&#x2F;list</p><p>请求参数</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">   page: 1,//当前页码</span><br><span class="line">   limit: 10,//每页记录数</span><br><span class="line">   sidx: &#x27;id&#x27;,//排序字段</span><br><span class="line">   order: &#x27;asc/desc&#x27;,//排序方式</span><br><span class="line">   key: &#x27;华为&#x27;//检索关键字</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>响应数据：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">&quot;msg&quot;: &quot;success&quot;,</span><br><span class="line">&quot;code&quot;: 0,</span><br><span class="line">&quot;page&quot;: &#123;</span><br><span class="line">&quot;totalCount&quot;: 0,</span><br><span class="line">&quot;pageSize&quot;: 10,</span><br><span class="line">&quot;totalPage&quot;: 0,</span><br><span class="line">&quot;currPage&quot;: 1,</span><br><span class="line">&quot;list&quot;: [&#123;</span><br><span class="line">&quot;id&quot;: 2,</span><br><span class="line">&quot;name&quot;: &quot;aa&quot;,</span><br><span class="line">&quot;address&quot;: &quot;bbb&quot;,</span><br><span class="line">&quot;areacode&quot;: &quot;124&quot;</span><br><span class="line">&#125;]</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>1.pom.xml</strong></p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.atguigu.gulimall<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>gulimall-common<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-bootstrap<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-loadbalancer<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>application.yml</strong></p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://8.138.99.194:3306/gulimall_wms?useSSL=false&amp;serverTimezone=UTC</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">discovery:</span></span><br><span class="line">        <span class="attr">server-addr:</span> <span class="string">localhost:8848</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">gulimall-ware</span></span><br><span class="line"></span><br><span class="line"><span class="attr">mybatis-plus:</span></span><br><span class="line">  <span class="attr">mapper-locations:</span> <span class="string">classpath:/mapper/**/*.xml</span></span><br><span class="line">  <span class="attr">global-config:</span></span><br><span class="line">    <span class="attr">db-config:</span></span><br><span class="line">      <span class="attr">id-type:</span> <span class="string">auto</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">11000</span></span><br><span class="line"></span><br><span class="line"><span class="attr">logging:</span></span><br><span class="line">  <span class="attr">level:</span></span><br><span class="line">    <span class="attr">com.atguigu:</span> <span class="string">debug</span></span><br></pre></td></tr></table></figure><p><strong>3.@EnableTransactionManagement启动类上加</strong></p><p><strong>4.gateway加</strong></p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">id:</span> <span class="string">ware_route</span></span><br><span class="line">  <span class="attr">uri:</span> <span class="string">lb://gulimall-ware</span></span><br><span class="line">  <span class="attr">predicates:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">Path=/api/ware/**</span></span><br><span class="line">  <span class="attr">filters:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">RewritePath=/api/(?&lt;segment&gt;.*),/$\&#123;segment&#125;</span></span><br></pre></td></tr></table></figure><p><strong>5.com.atguigu.gulimall.ware.controller.WareInfoController获取仓库列表</strong></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/list&quot;)</span></span><br><span class="line"><span class="comment">//@RequiresPermissions(&quot;ware:wareinfo:list&quot;)</span></span><br><span class="line"><span class="keyword">public</span> R <span class="title function_">list</span><span class="params">(<span class="meta">@RequestParam</span> Map&lt;String, Object&gt; params)</span>&#123;</span><br><span class="line">    <span class="type">PageUtils</span> <span class="variable">page</span> <span class="operator">=</span> wareInfoService.queryPage(params);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> R.ok().put(<span class="string">&quot;page&quot;</span>, page);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>6.com.atguigu.gulimall.ware.service.impl.WareInfoServiceImpl加入模糊查询</strong></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> PageUtils <span class="title function_">queryPage</span><span class="params">(Map&lt;String, Object&gt; params)</span> &#123;</span><br><span class="line">    QueryWrapper&lt;WareInfoEntity&gt; wrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">    <span class="type">String</span> <span class="variable">key</span> <span class="operator">=</span> (String) params.get(<span class="string">&quot;key&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (!StringUtils.isEmpty(key))&#123;</span><br><span class="line">        wrapper.and(w-&gt;&#123;</span><br><span class="line">            w.eq(<span class="string">&quot;id&quot;</span>,key).or().like(<span class="string">&quot;name&quot;</span>,key).or().like(<span class="string">&quot;address&quot;</span>,key)</span><br><span class="line">                    .or().eq(<span class="string">&quot;areacode&quot;</span>,key);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    IPage&lt;WareInfoEntity&gt; page = <span class="built_in">this</span>.page(</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Query</span>&lt;WareInfoEntity&gt;().getPage(params),</span><br><span class="line">            wrapper</span><br><span class="line">    );</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">PageUtils</span>(page);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1-2查询库存-查询采购需求"><a href="#1-2查询库存-查询采购需求" class="headerlink" title="1.2查询库存&amp;查询采购需求"></a>1.2查询库存&amp;查询采购需求</h4><p><strong>查询商品库存API</strong>：GET            &#x2F;ware&#x2F;waresku&#x2F;list</p><p>请求参数：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">   page: 1,//当前页码</span><br><span class="line">   limit: 10,//每页记录数</span><br><span class="line">   sidx: &#x27;id&#x27;,//排序字段</span><br><span class="line">   order: &#x27;asc/desc&#x27;,//排序方式</span><br><span class="line">   wareId: 123,//仓库id</span><br><span class="line">   skuId: 123//商品id</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>响应参数：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">&quot;msg&quot;: &quot;success&quot;,</span><br><span class="line">&quot;code&quot;: 0,</span><br><span class="line">&quot;page&quot;: &#123;</span><br><span class="line">&quot;totalCount&quot;: 0,</span><br><span class="line">&quot;pageSize&quot;: 10,</span><br><span class="line">&quot;totalPage&quot;: 0,</span><br><span class="line">&quot;currPage&quot;: 1,</span><br><span class="line">&quot;list&quot;: [&#123;</span><br><span class="line">&quot;id&quot;: 1,</span><br><span class="line">&quot;skuId&quot;: 1,</span><br><span class="line">&quot;wareId&quot;: 1,</span><br><span class="line">&quot;stock&quot;: 1,</span><br><span class="line">&quot;skuName&quot;: &quot;dd&quot;,</span><br><span class="line">&quot;stockLocked&quot;: 1</span><br><span class="line">&#125;]</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>1.com.atguigu.gulimall.ware.controller.WareSkuController</strong></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/list&quot;)</span></span><br><span class="line"><span class="comment">//@RequiresPermissions(&quot;ware:waresku:list&quot;)</span></span><br><span class="line"><span class="keyword">public</span> R <span class="title function_">list</span><span class="params">(<span class="meta">@RequestParam</span> Map&lt;String, Object&gt; params)</span>&#123;</span><br><span class="line">    <span class="type">PageUtils</span> <span class="variable">page</span> <span class="operator">=</span> wareSkuService.queryPage(params);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> R.ok().put(<span class="string">&quot;page&quot;</span>, page);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>2.com.atguigu.gulimall.ware.service.impl.WareSkuServiceImpl</strong></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> PageUtils <span class="title function_">queryPage</span><span class="params">(Map&lt;String, Object&gt; params)</span> &#123;</span><br><span class="line">    QueryWrapper&lt;WareSkuEntity&gt; wrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">    <span class="type">String</span> <span class="variable">skuId</span> <span class="operator">=</span> (String) params.get(<span class="string">&quot;skuId&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (!StringUtils.isEmpty(skuId))&#123;</span><br><span class="line">        wrapper.eq(<span class="string">&quot;sku_id&quot;</span>,skuId);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">String</span> <span class="variable">wareId</span> <span class="operator">=</span> (String) params.get(<span class="string">&quot;wareId&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (!StringUtils.isEmpty(wareId))&#123;</span><br><span class="line">        wrapper.eq(<span class="string">&quot;ware_id&quot;</span>,wareId);</span><br><span class="line">    &#125;</span><br><span class="line">    IPage&lt;WareSkuEntity&gt; page = <span class="built_in">this</span>.page(</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Query</span>&lt;WareSkuEntity&gt;().getPage(params),</span><br><span class="line">            wrapper</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">PageUtils</span>(page);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>查询采购需求</strong></p><p>API： GET    &#x2F;ware&#x2F;purchasedetail&#x2F;list</p><p><strong>请求参数</strong></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">   page: <span class="number">1</span>,<span class="comment">//当前页码</span></span><br><span class="line">   limit: <span class="number">10</span>,<span class="comment">//每页记录数</span></span><br><span class="line">   sidx: <span class="string">&#x27;id&#x27;</span>,<span class="comment">//排序字段</span></span><br><span class="line">   order: <span class="string">&#x27;asc/desc&#x27;</span>,<span class="comment">//排序方式</span></span><br><span class="line">   key: <span class="string">&#x27;华为&#x27;</span>,<span class="comment">//检索关键字</span></span><br><span class="line">   status: <span class="number">0</span>,<span class="comment">//状态    </span></span><br><span class="line">   wareId: <span class="number">1</span>,<span class="comment">//仓库id</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>响应数据</strong></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="string">&quot;msg&quot;</span>: <span class="string">&quot;success&quot;</span>,</span><br><span class="line"><span class="string">&quot;code&quot;</span>: <span class="number">0</span>,</span><br><span class="line"><span class="string">&quot;page&quot;</span>: &#123;</span><br><span class="line"><span class="string">&quot;totalCount&quot;</span>: <span class="number">0</span>,</span><br><span class="line"><span class="string">&quot;pageSize&quot;</span>: <span class="number">10</span>,</span><br><span class="line"><span class="string">&quot;totalPage&quot;</span>: <span class="number">0</span>,</span><br><span class="line"><span class="string">&quot;currPage&quot;</span>: <span class="number">1</span>,</span><br><span class="line"><span class="string">&quot;list&quot;</span>: [&#123;</span><br><span class="line"><span class="string">&quot;id&quot;</span>: <span class="number">2</span>,</span><br><span class="line"><span class="string">&quot;purchaseId&quot;</span>: <span class="number">1</span>,</span><br><span class="line"><span class="string">&quot;skuId&quot;</span>: <span class="number">1</span>,</span><br><span class="line"><span class="string">&quot;skuNum&quot;</span>: <span class="number">2</span>,</span><br><span class="line"><span class="string">&quot;skuPrice&quot;</span>: <span class="number">22.0000</span>,</span><br><span class="line"><span class="string">&quot;wareId&quot;</span>: <span class="number">1</span>,</span><br><span class="line"><span class="string">&quot;status&quot;</span>: <span class="number">1</span></span><br><span class="line">&#125;]</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>1.com.atguigu.gulimall.ware.controller.PurchaseDetailController</strong></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/list&quot;)</span></span><br><span class="line"><span class="comment">//@RequiresPermissions(&quot;ware:purchasedetail:list&quot;)</span></span><br><span class="line"><span class="keyword">public</span> R <span class="title function_">list</span><span class="params">(<span class="meta">@RequestParam</span> Map&lt;String, Object&gt; params)</span>&#123;</span><br><span class="line">    <span class="type">PageUtils</span> <span class="variable">page</span> <span class="operator">=</span> purchaseDetailService.queryPage(params);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> R.ok().put(<span class="string">&quot;page&quot;</span>, page);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>2.com.atguigu.gulimall.ware.service.impl.PurchaseDetailServiceImpl</strong></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> PageUtils <span class="title function_">queryPage</span><span class="params">(Map&lt;String, Object&gt; params)</span> &#123;</span><br><span class="line">    QueryWrapper&lt;PurchaseDetailEntity&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">    <span class="type">String</span> <span class="variable">key</span> <span class="operator">=</span> (String) params.get(<span class="string">&quot;key&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (!StringUtils.isEmpty(key))&#123;</span><br><span class="line">        queryWrapper.and(w-&gt;&#123;</span><br><span class="line">           w.eq(<span class="string">&quot;purchase_id&quot;</span>,key).or().eq(<span class="string">&quot;sku_id&quot;</span>,key);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">String</span> <span class="variable">status</span> <span class="operator">=</span> (String) params.get(<span class="string">&quot;status&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (!StringUtils.isEmpty(status))&#123;</span><br><span class="line">        queryWrapper.eq(<span class="string">&quot;status&quot;</span>,status);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">String</span> <span class="variable">wareId</span> <span class="operator">=</span> (String) params.get(<span class="string">&quot;wareId&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (!StringUtils.isEmpty(wareId))&#123;</span><br><span class="line">        queryWrapper.eq(<span class="string">&quot;ware_id&quot;</span>,wareId);</span><br><span class="line">    &#125;</span><br><span class="line">    IPage&lt;PurchaseDetailEntity&gt; page = <span class="built_in">this</span>.page(</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Query</span>&lt;PurchaseDetailEntity&gt;().getPage(params),</span><br><span class="line">            queryWrapper</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">PageUtils</span>(page);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1-3合并采购需求"><a href="#1-3合并采购需求" class="headerlink" title="1.3合并采购需求"></a>1.3合并采购需求</h4><p><img src="image-20240413175040574.png"></p><p><strong>1.点击合并整单先发送查询未领取采购单需求</strong></p><p><img src="image-20240413175324767.png" alt="image-20240413175324767"></p><p>GET   &#x2F;ware&#x2F;purchase&#x2F;unreceive&#x2F;list</p><p><strong>响应数据</strong></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="string">&quot;msg&quot;</span>: <span class="string">&quot;success&quot;</span>,</span><br><span class="line"><span class="string">&quot;code&quot;</span>: <span class="number">0</span>,</span><br><span class="line"><span class="string">&quot;page&quot;</span>: &#123;</span><br><span class="line"><span class="string">&quot;totalCount&quot;</span>: <span class="number">0</span>,</span><br><span class="line"><span class="string">&quot;pageSize&quot;</span>: <span class="number">10</span>,</span><br><span class="line"><span class="string">&quot;totalPage&quot;</span>: <span class="number">0</span>,</span><br><span class="line"><span class="string">&quot;currPage&quot;</span>: <span class="number">1</span>,</span><br><span class="line"><span class="string">&quot;list&quot;</span>: [&#123;</span><br><span class="line"><span class="string">&quot;id&quot;</span>: <span class="number">1</span>,</span><br><span class="line"><span class="string">&quot;assigneeId&quot;</span>: <span class="number">1</span>,</span><br><span class="line"><span class="string">&quot;assigneeName&quot;</span>: <span class="string">&quot;aa&quot;</span>,</span><br><span class="line"><span class="string">&quot;phone&quot;</span>: <span class="string">&quot;123&quot;</span>,</span><br><span class="line"><span class="string">&quot;priority&quot;</span>: <span class="number">1</span>,</span><br><span class="line"><span class="string">&quot;status&quot;</span>: <span class="number">1</span>,</span><br><span class="line"><span class="string">&quot;wareId&quot;</span>: <span class="number">1</span>,</span><br><span class="line"><span class="string">&quot;amount&quot;</span>: <span class="number">22.0000</span>,</span><br><span class="line"><span class="string">&quot;createTime&quot;</span>: <span class="string">&quot;2019-12-12&quot;</span>,</span><br><span class="line"><span class="string">&quot;updateTime&quot;</span>: <span class="string">&quot;2019-12-12&quot;</span></span><br><span class="line">&#125;]</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/unreceive/list&quot;)</span></span><br><span class="line"><span class="comment">//@RequiresPermissions(&quot;ware:purchase:list&quot;)</span></span><br><span class="line"><span class="keyword">public</span> R <span class="title function_">unreceiveList</span><span class="params">(<span class="meta">@RequestParam</span> Map&lt;String, Object&gt; params)</span>&#123;</span><br><span class="line">    <span class="type">PageUtils</span> <span class="variable">page</span> <span class="operator">=</span> purchaseService.queryPageUnreceivePurchase(params);</span><br><span class="line">    <span class="keyword">return</span> R.ok().put(<span class="string">&quot;page&quot;</span>, page);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> PageUtils <span class="title function_">queryPageUnreceivePurchase</span><span class="params">(Map&lt;String, Object&gt; params)</span> &#123;</span><br><span class="line">    IPage&lt;PurchaseEntity&gt; page = <span class="built_in">this</span>.page(</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Query</span>&lt;PurchaseEntity&gt;().getPage(params),</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;PurchaseEntity&gt;().eq(<span class="string">&quot;status&quot;</span>,<span class="number">0</span>).or().eq(<span class="string">&quot;status&quot;</span>,<span class="number">1</span>)<span class="comment">//0-新建 1 - 刚分配未领取</span></span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">PageUtils</span>(page);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以查出采购单了</p><p><strong>合并采购需求：</strong></p><p>POST         &#x2F;ware&#x2F;purchase&#x2F;merge</p><p><strong>请求参数</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  purchaseId: 1, //整单id</span><br><span class="line">  items:[1,2,3,4] //合并项集合</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>响应数据</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">&quot;msg&quot;: &quot;success&quot;,</span><br><span class="line">&quot;code&quot;: 0</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>1.定义MergeVo</strong></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MergeVo</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Long purchaseId;</span><br><span class="line">    <span class="keyword">private</span> List&lt;Long&gt; items;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>2.编写采购单状态和采购需求状态枚举</strong></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WareConstant</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">enum</span> <span class="title class_">PurchaseStatusEnum</span>&#123;</span><br><span class="line">        CREATED(<span class="number">0</span>,<span class="string">&quot;新建&quot;</span>),</span><br><span class="line">        ASSIGNED(<span class="number">1</span>,<span class="string">&quot;已分配&quot;</span>),</span><br><span class="line">        RECEIVE(<span class="number">2</span>,<span class="string">&quot;已领取&quot;</span>),</span><br><span class="line">        FINISH(<span class="number">3</span>,<span class="string">&quot;已完成&quot;</span>),</span><br><span class="line">        HASEERR(<span class="number">4</span>,<span class="string">&quot;有异常&quot;</span>);</span><br><span class="line">        <span class="keyword">private</span> <span class="type">int</span> code;</span><br><span class="line">        <span class="keyword">private</span> String msg;</span><br><span class="line">        PurchaseStatusEnum(<span class="type">int</span> code, String msg) &#123;</span><br><span class="line">            <span class="built_in">this</span>.code = code;</span><br><span class="line">            <span class="built_in">this</span>.msg = msg;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getCode</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> code;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">public</span> String <span class="title function_">getMsg</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> msg;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">enum</span> <span class="title class_">PurchaseDetailStatusEnum</span>&#123;</span><br><span class="line">        CREATED(<span class="number">0</span>,<span class="string">&quot;新建&quot;</span>),</span><br><span class="line">        ASSIGNED(<span class="number">1</span>,<span class="string">&quot;已分配&quot;</span>),</span><br><span class="line">        BUYING(<span class="number">2</span>,<span class="string">&quot;正在采购&quot;</span>),</span><br><span class="line">        FINISH(<span class="number">3</span>,<span class="string">&quot;已完成&quot;</span>),</span><br><span class="line">        HASEERR(<span class="number">4</span>,<span class="string">&quot;采购失败&quot;</span>);</span><br><span class="line">        <span class="keyword">private</span> <span class="type">int</span> code;</span><br><span class="line">        <span class="keyword">private</span> String msg;</span><br><span class="line">        PurchaseDetailStatusEnum(<span class="type">int</span> code, String msg) &#123;</span><br><span class="line">            <span class="built_in">this</span>.code = code;</span><br><span class="line">            <span class="built_in">this</span>.msg = msg;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getCode</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> code;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">public</span> String <span class="title function_">getMsg</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> msg;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>3.controller层com.atguigu.gulimall.ware.controller.PurchaseController</strong></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;merge&quot;)</span></span><br><span class="line"><span class="comment">//@RequiresPermissions(&quot;ware:purchase:list&quot;)</span></span><br><span class="line"><span class="keyword">public</span> R <span class="title function_">merge</span><span class="params">(<span class="meta">@RequestBody</span> MergeVo mergeVo)</span>&#123;</span><br><span class="line">    purchaseService.mergePurchase(mergeVo);</span><br><span class="line">    <span class="keyword">return</span> R.ok();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>4.service层com.atguigu.gulimall.ware.service.impl.PurchaseServiceImpl</strong></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Transactional</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">mergePurchase</span><span class="params">(MergeVo mergeVo)</span> &#123;</span><br><span class="line">    <span class="type">Long</span> <span class="variable">purchaseId</span> <span class="operator">=</span> mergeVo.getPurchaseId();</span><br><span class="line">    <span class="keyword">if</span> (purchaseId == <span class="literal">null</span>)&#123;</span><br><span class="line">        <span class="comment">//新建一个采购单</span></span><br><span class="line">        <span class="type">PurchaseEntity</span> <span class="variable">purchaseEntity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PurchaseEntity</span>();</span><br><span class="line">        purchaseEntity.setStatus(WareConstant.PurchaseStatusEnum.CREATED.getCode());</span><br><span class="line">        purchaseEntity.setCreateTime(<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">        purchaseEntity.setUpdateTime(<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">        <span class="built_in">this</span>.save(purchaseEntity);</span><br><span class="line">        purchaseId = purchaseEntity.getId();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//合并</span></span><br><span class="line">    List&lt;Long&gt; items = mergeVo.getItems();</span><br><span class="line">    <span class="type">Long</span> <span class="variable">finalPurchaseId</span> <span class="operator">=</span> purchaseId;</span><br><span class="line">    List&lt;PurchaseDetailEntity&gt; collect = items.stream().map(i -&gt; &#123;</span><br><span class="line">        <span class="type">PurchaseDetailEntity</span> <span class="variable">detailEntity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PurchaseDetailEntity</span>();</span><br><span class="line">        detailEntity.setPurchaseId(finalPurchaseId);</span><br><span class="line">        detailEntity.setStatus(WareConstant.PurchaseDetailStatusEnum.ASSIGNED.getCode());</span><br><span class="line">        detailEntity.setId(i);</span><br><span class="line">        <span class="keyword">return</span> detailEntity;</span><br><span class="line">    &#125;).collect(Collectors.toList());</span><br><span class="line">    purchaseDetailService.updateBatchById(collect);</span><br><span class="line">    <span class="comment">//更新采购单时间</span></span><br><span class="line">        <span class="type">PurchaseEntity</span> <span class="variable">purchaseEntity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PurchaseEntity</span>();</span><br><span class="line">        purchaseEntity.setId(purchaseId);</span><br><span class="line">        purchaseEntity.setUpdateTime(<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">        <span class="built_in">this</span>.updateById(purchaseEntity);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>5.测试</strong></p><p>两个采购需求</p><p><img src="image-20240413214210398.png" alt="image-20240413214210398"></p><p><img src="image-20240413214344034.png" alt="image-20240413214344034"></p><p><img src="image-20240413214451313.png" alt="image-20240413214451313"></p><p>如果不选择采购单id就会新建采购单</p><p><img src="image-20240413214521312.png" alt="image-20240413214521312"></p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#格式化日期</span></span><br><span class="line"><span class="attr">jackson:</span></span><br><span class="line">  <span class="attr">date-format:</span> <span class="string">yyyy-MM-dd</span> <span class="string">HH:mm:ss</span></span><br></pre></td></tr></table></figure><h4 id="1-4采购人员领取采购单"><a href="#1-4采购人员领取采购单" class="headerlink" title="1.4采购人员领取采购单"></a>1.4采购人员领取采购单</h4><p>POST</p><p>&#x2F;ware&#x2F;purchase&#x2F;received</p><h3 id="请求参数"><a href="#请求参数" class="headerlink" title="请求参数"></a>请求参数</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[1,2,3,4]//采购单id</span><br></pre></td></tr></table></figure><blockquote><p>分页数据</p></blockquote><h3 id="响应数据"><a href="#响应数据" class="headerlink" title="响应数据"></a>响应数据</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">&quot;msg&quot;: &quot;success&quot;,</span><br><span class="line">&quot;code&quot;: 0</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>集合源码</title>
      <link href="/2024/04/15/%E9%9B%86%E5%90%88%E6%BA%90%E7%A0%81/"/>
      <url>/2024/04/15/%E9%9B%86%E5%90%88%E6%BA%90%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<h2 id="Map"><a href="#Map" class="headerlink" title="Map"></a>Map</h2><h3 id="HashMap-jdk1-8"><a href="#HashMap-jdk1-8" class="headerlink" title="HashMap     jdk1.8"></a>HashMap     jdk1.8</h3><p>底层用的数组+链表&#x2F;红黑树</p><h4 id="1-新建无参的hashMap-—-new-HashMap"><a href="#1-新建无参的hashMap-—-new-HashMap" class="headerlink" title="1.新建无参的hashMap  —&gt;new HashMap&lt;&gt;()"></a>1.新建无参的hashMap  —&gt;new HashMap&lt;&gt;()</h4><p>如果不指定大小HashMap&lt;String ,String&gt; map &#x3D; new HashMap&lt;&gt;();</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//HashMap&lt;String ,String&gt; map = new HashMap&lt;&gt;()</span></span><br><span class="line"><span class="comment">//使用默认初始容量 （16） 和默认负载系数 （0.75） 构造一个空的 HashMap</span></span><br><span class="line"><span class="comment">//注意现在数组还没有创建出来，只有调用put方法时才会创建</span></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">HashMap</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.loadFactor = DEFAULT_LOAD_FACTOR;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="2-新建有参的hashMap传入13"><a href="#2-新建有参的hashMap传入13" class="headerlink" title="2.新建有参的hashMap传入13"></a>2.新建有参的hashMap传入13</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="title function_">HashMap</span><span class="params">(<span class="type">int</span> initialCapacity)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>(initialCapacity, DEFAULT_LOAD_FACTOR);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">HashMap</span><span class="params">(<span class="type">int</span> initialCapacity, <span class="type">float</span> loadFactor)</span> &#123;</span><br><span class="line">    <span class="comment">//此时initialCapacity = 13  initialCapacity – 初始容量 loadFactor – 负载因子</span></span><br><span class="line">    <span class="keyword">if</span> (initialCapacity &lt; <span class="number">0</span>)  </span><br><span class="line">        <span class="comment">//如果传入初始容量为负数，抛出异常</span></span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalArgumentException</span>(<span class="string">&quot;Illegal initial capacity: &quot;</span> + initialCapacity);</span><br><span class="line">    <span class="keyword">if</span> (initialCapacity &gt; MAXIMUM_CAPACITY) <span class="comment">//MAXIMUM_CAPACITY = 1 &lt;&lt; 30</span></span><br><span class="line">        initialCapacity = MAXIMUM_CAPACITY;</span><br><span class="line">    <span class="keyword">if</span> (loadFactor &lt;= <span class="number">0</span> || Float.isNaN(loadFactor)) <span class="comment">//loadFactor = DEFAULT_LOAD_FACTOR = 0.75f</span></span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalArgumentException</span>(<span class="string">&quot;Illegal load factor: &quot;</span> + loadFactor);</span><br><span class="line">    <span class="built_in">this</span>.loadFactor = loadFactor;<span class="comment">//this.loadFactor = 0.75f</span></span><br><span class="line">    <span class="built_in">this</span>.threshold = tableSizeFor(initialCapacity);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//返回一个大于等于cap的2^n数 13 -&gt; 16</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="title function_">tableSizeFor</span><span class="params">(<span class="type">int</span> cap)</span> &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> cap - <span class="number">1</span>;</span><br><span class="line">    n |= n &gt;&gt;&gt; <span class="number">1</span>;</span><br><span class="line">    n |= n &gt;&gt;&gt; <span class="number">2</span>;</span><br><span class="line">    n |= n &gt;&gt;&gt; <span class="number">4</span>;</span><br><span class="line">    n |= n &gt;&gt;&gt; <span class="number">8</span>;</span><br><span class="line">    n |= n &gt;&gt;&gt; <span class="number">16</span>;</span><br><span class="line">    <span class="keyword">return</span> (n &lt; <span class="number">0</span>) ? <span class="number">1</span> : (n &gt;= MAXIMUM_CAPACITY) ? MAXIMUM_CAPACITY : n + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-put-key-value-和hash-key"><a href="#3-put-key-value-和hash-key" class="headerlink" title="3.put(key,value)和hash(key)"></a>3.put(key,value)和hash(key)</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="keyword">public</span> V <span class="title function_">put</span><span class="params">(K key, V value)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> putVal(hash(key), key, value, <span class="literal">false</span>, <span class="literal">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//利用key的hashcode</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="title function_">hash</span><span class="params">(Object key)</span> &#123;</span><br><span class="line">    <span class="type">int</span> h;</span><br><span class="line">    <span class="keyword">return</span> (key == <span class="literal">null</span>) ? <span class="number">0</span> : (h = key.hashCode()) ^ (h &gt;&gt;&gt; <span class="number">16</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-putVal-hash-key-value-onlyIfAbsent-evict"><a href="#4-putVal-hash-key-value-onlyIfAbsent-evict" class="headerlink" title="4.putVal(hash, key, value, onlyIfAbsent, evict)"></a>4.putVal(hash, key, value, onlyIfAbsent, evict)</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">Node</span>&lt;K,V&gt; <span class="keyword">implements</span> <span class="title class_">Map</span>.Entry&lt;K,V&gt; &#123;</span><br><span class="line">        <span class="keyword">final</span> <span class="type">int</span> hash;</span><br><span class="line">        <span class="keyword">final</span> K key;</span><br><span class="line">        V value;</span><br><span class="line">        Node&lt;K,V&gt; next;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">final</span> V <span class="title function_">putVal</span><span class="params">(<span class="type">int</span> hash, K key, V value, <span class="type">boolean</span> onlyIfAbsent,<span class="type">boolean</span> evict)</span> &#123;</span><br><span class="line">        <span class="comment">//创建Node类型的数组tab和Node类型的参数p，注意：数组中其实存的是引用地址</span></span><br><span class="line">        Node&lt;K,V&gt;[] tab; Node&lt;K,V&gt; p; <span class="type">int</span> n, i;</span><br><span class="line">     <span class="comment">//transient Node&lt;K,V&gt;[] table;</span></span><br><span class="line">     <span class="comment">//如果tab = table为null或者tab长度为0，创建数组，并将数组长度赋给n</span></span><br><span class="line">        <span class="keyword">if</span> ((tab = table) == <span class="literal">null</span> || (n = tab.length) == <span class="number">0</span>)</span><br><span class="line">            n = (tab = resize()).length;</span><br><span class="line">     <span class="comment">/**如何确保计算出的下标i不会越界  i = (n-1) &amp; hash</span></span><br><span class="line"><span class="comment">     16:   0000 0000 0000 0000 0001 0000 --&gt;一共32位</span></span><br><span class="line"><span class="comment">     15:   0000 0000 0000 0000 0000 1111 --&gt;一共32位</span></span><br><span class="line"><span class="comment">     &amp; 按位与只有1 1才会为1，其余为0</span></span><br><span class="line"><span class="comment">     hash: 0110 0100 0000 0000 0110 1101 --&gt;一共32位</span></span><br><span class="line"><span class="comment">     结果： 0000 0000 0000 0000 0000 1101 --&gt;一共32位</span></span><br><span class="line"><span class="comment">     可知保证了不会越界</span></span><br><span class="line"><span class="comment">     这里最关键的点就是：用了15（2^4 - 1）这个数字，才可以确保低四位会运算出16种可能,因为15是 (n - 1)之后得到的，那么也就是说n = 16（初值为16），往后n的长度都为数组的长度，而数组的长度算出来是2^n。</span></span><br><span class="line"><span class="comment">     为什么这里不用%n（同样的效果）要用&amp;操作? ----&gt; %操作底层会进行很多次位运算，而&amp;操作只有一次效率更高</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">        <span class="keyword">if</span> ((p = tab[i = (n - <span class="number">1</span>) &amp; hash]) == <span class="literal">null</span>)</span><br><span class="line">            <span class="comment">//如果p = tab[i] = null，数组中没有元素，就吧元素放进去 --&gt;直接返回null</span></span><br><span class="line">            tab[i] = newNode(hash, key, value, <span class="literal">null</span>);</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//说明改下标的数组已有元素</span></span><br><span class="line">            Node&lt;K,V&gt; e; K k;</span><br><span class="line">            <span class="comment">//如果p的hash值和要插入的hash值相同并且p.key == key（两个key相同），把p赋给e</span></span><br><span class="line">            <span class="keyword">if</span> (p.hash == hash &amp;&amp;</span><br><span class="line">                ((k = p.key) == key || (key != <span class="literal">null</span> &amp;&amp; key.equals(k))))</span><br><span class="line">                e = p;</span><br><span class="line">            <span class="comment">//测试它左边的对象是否是它右边的类的实例，TreeNode是Node的子类，如果p是Node类的对象，返回false</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (p <span class="keyword">instanceof</span> TreeNode)</span><br><span class="line">                <span class="comment">//就是说如果我的数组上的是TreeNode类型的，就会进入这个方法--&gt;说明该节点已经树化</span></span><br><span class="line">                e = ((TreeNode&lt;K,V&gt;)p).putTreeVal(<span class="built_in">this</span>, tab, hash, key, value);</span><br><span class="line">            <span class="keyword">else</span> &#123;<span class="comment">//生成链表 -&gt;尾插法</span></span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">binCount</span> <span class="operator">=</span> <span class="number">0</span>; ; ++binCount) &#123;<span class="comment">//遍历链表</span></span><br><span class="line">                    <span class="keyword">if</span> ((e = p.next) == <span class="literal">null</span>) &#123;<span class="comment">//如果遍历到最后一个节点，将该元素插入到底部</span></span><br><span class="line">                        p.next = newNode(hash, key, value, <span class="literal">null</span>);</span><br><span class="line">                        <span class="comment">//TREEIFY_THRESHOLD - 1 = 8 - 1 = 7</span></span><br><span class="line">                        <span class="comment">//如果binCount = 7  --&gt; 此时链表上有9个节点（包含了新put的节点）</span></span><br><span class="line">                        <span class="keyword">if</span> (binCount &gt;= TREEIFY_THRESHOLD - <span class="number">1</span>) <span class="comment">// -1 for 1st</span></span><br><span class="line">                            <span class="comment">//转为红黑树</span></span><br><span class="line">                            treeifyBin(tab, hash);</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="comment">//遍历过程中如果key相等，直接break</span></span><br><span class="line">                    <span class="keyword">if</span> (e.hash == hash &amp;&amp;</span><br><span class="line">                        ((k = e.key) == key || (key != <span class="literal">null</span> &amp;&amp; key.equals(k))))</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    p = e;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//如果e不为空，说明存在key的</span></span><br><span class="line">            <span class="keyword">if</span> (e != <span class="literal">null</span>) &#123; <span class="comment">// existing mapping for key</span></span><br><span class="line">                <span class="comment">//原先已存在的值先赋值给oldValue</span></span><br><span class="line">                <span class="type">V</span> <span class="variable">oldValue</span> <span class="operator">=</span> e.value;</span><br><span class="line">                <span class="comment">/**已经put(&quot;k1&quot;,&quot;v1&quot;)</span></span><br><span class="line"><span class="comment">                如果调用put(&quot;k1&quot;,&quot;v2&quot;)方法onlyIfAbsent默认传过来为false取反为true，会覆盖</span></span><br><span class="line"><span class="comment">                但是如果调用putIfAbsent(&quot;k1&quot;,&quot;v2&quot;) onlyIfAbsent默认传过来为true取反为false，然后看oldvalue是否为空，为空覆盖，不为空不会覆盖，本例不会覆盖：因为k1已经有v1了</span></span><br><span class="line"><span class="comment">                map.put(&quot;k1&quot;, null);</span></span><br><span class="line"><span class="comment">        map.putIfAbsent(&quot;k1&quot;,&quot;v2&quot;);</span></span><br><span class="line"><span class="comment">        System.out.println(map.get(&quot;k1&quot;));输出v2，覆盖了</span></span><br><span class="line"><span class="comment">                */</span></span><br><span class="line">                <span class="keyword">if</span> (!onlyIfAbsent || oldValue == <span class="literal">null</span>)</span><br><span class="line">                    <span class="comment">//value：新put的值 </span></span><br><span class="line">                    <span class="comment">//e.value: 原来的值 被覆盖</span></span><br><span class="line">                    e.value = value;</span><br><span class="line">                afterNodeAccess(e);  <span class="comment">//-》void afterNodeAccess(Node&lt;K,V&gt; p) &#123; &#125;</span></span><br><span class="line">                <span class="comment">//</span></span><br><span class="line">                <span class="keyword">return</span> oldValue;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        ++modCount;</span><br><span class="line">        <span class="keyword">if</span> (++size &gt; threshold)<span class="comment">//size表示整个map有多少元素，threshold = 16 * 0.75 = 12</span></span><br><span class="line">            <span class="comment">//如果size大于12，就进行数组扩容</span></span><br><span class="line">            resize();</span><br><span class="line">        afterNodeInsertion(evict);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="5-数组扩容"><a href="#5-数组扩容" class="headerlink" title="5.数组扩容"></a>5.数组扩容</h4><p><strong>扩容前</strong>                                                                                           </p><p>15：                0000 0000 0000 1111                 15：                0000 0000 0000 1111</p><p>hash：            0100 0000 1001 0101                 hash：            0100 0000 1000 0101 &#x2F;&#x2F;假如hash的第五未变成了0</p><p>&amp;：                  0000 0000 0000 0101                 &amp;：                  0000 0000 0000 0101</p><p><strong>扩容后</strong></p><p>31:                   0000 0000 0001 1111                 31:                   0000 0000 0001 1111</p><p>hash:               0100 0000 1001 0101                 hash:               0100 0000 1000 0101</p><p>&amp;:                     0000 0000 0001 0101                 &amp;:                     0000 0000 0000 0101 &#x2F;&#x2F;等于原数组</p><p>可以得出以下规律</p><p>新数组下标 &#x3D; 老下标 + 老数组的长度 (当)</p><p>新数组下标 &#x3D; 老下标</p><p>该源码用到了一个简便判断方法： hash &amp; oldCap(原来数组的长度) 如果等于0，就在低位，否则就在高位。</p><p><strong>链表的转移—-&gt;之前</strong></p><p><img src="image-20240414230631114.png" alt="image-20240414230631114"></p><p><strong>链表的转移—-&gt;判断出每个节点是在低位还是高位</strong></p><p><img src="image-20240414230908487.png" alt="image-20240414230908487"></p><p><strong>链表的转移—-&gt;判断出每个节点是在低位还是高位，尾指针移动</strong></p><p><img src="image-20240414231135510.png" alt="image-20240414231135510"></p><p><strong>链表的转移—-&gt;判断出每个节点是在低位还是高位，断开尾指针指向节点的next</strong></p><p><img src="image-20240414231537410.png" alt="image-20240414231537410"></p><p><strong>链表的转移—-&gt;转移</strong></p><p><img src="image-20240414231816835.png" alt="image-20240414231816835"></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">final</span> Node&lt;K,V&gt;[] resize() &#123;</span><br><span class="line">    Node&lt;K,V&gt;[] oldTab = table;</span><br><span class="line">    <span class="type">int</span> <span class="variable">oldCap</span> <span class="operator">=</span> (oldTab == <span class="literal">null</span>) ? <span class="number">0</span> : oldTab.length;</span><br><span class="line">    <span class="type">int</span> <span class="variable">oldThr</span> <span class="operator">=</span> threshold;</span><br><span class="line">    <span class="type">int</span> newCap, newThr = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (oldCap &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (oldCap &gt;= MAXIMUM_CAPACITY) &#123;</span><br><span class="line">            threshold = Integer.MAX_VALUE;</span><br><span class="line">            <span class="keyword">return</span> oldTab;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//新数组的长度等于老数组长度*2，新数组的负载因子等于老数组负载因子*2</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> ((newCap = oldCap &lt;&lt; <span class="number">1</span>) &lt; MAXIMUM_CAPACITY &amp;&amp;</span><br><span class="line">                 oldCap &gt;= DEFAULT_INITIAL_CAPACITY)</span><br><span class="line">            newThr = oldThr &lt;&lt; <span class="number">1</span>; <span class="comment">// double threshold</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (oldThr &gt; <span class="number">0</span>) <span class="comment">// initial capacity was placed in threshold</span></span><br><span class="line">        newCap = oldThr;</span><br><span class="line">    <span class="keyword">else</span> &#123;               <span class="comment">// zero initial threshold signifies using defaults</span></span><br><span class="line">        newCap = DEFAULT_INITIAL_CAPACITY;</span><br><span class="line">        newThr = (<span class="type">int</span>)(DEFAULT_LOAD_FACTOR * DEFAULT_INITIAL_CAPACITY);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (newThr == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="type">float</span> <span class="variable">ft</span> <span class="operator">=</span> (<span class="type">float</span>)newCap * loadFactor;</span><br><span class="line">        newThr = (newCap &lt; MAXIMUM_CAPACITY &amp;&amp; ft &lt; (<span class="type">float</span>)MAXIMUM_CAPACITY ?</span><br><span class="line">                  (<span class="type">int</span>)ft : Integer.MAX_VALUE);</span><br><span class="line">    &#125;</span><br><span class="line">    threshold = newThr;</span><br><span class="line">    <span class="meta">@SuppressWarnings(&#123;&quot;rawtypes&quot;,&quot;unchecked&quot;&#125;)</span></span><br><span class="line">        Node&lt;K,V&gt;[] newTab = (Node&lt;K,V&gt;[])<span class="keyword">new</span> <span class="title class_">Node</span>[newCap];</span><br><span class="line">    table = newTab;</span><br><span class="line">    <span class="comment">//将老数组的元素转移到新数组上来</span></span><br><span class="line">    <span class="keyword">if</span> (oldTab != <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; oldCap; ++j) &#123;<span class="comment">//遍历原来的数组</span></span><br><span class="line">            Node&lt;K,V&gt; e;</span><br><span class="line">            <span class="keyword">if</span> ((e = oldTab[j]) != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="comment">//如果数组中有元素才进行下面的操作</span></span><br><span class="line">                oldTab[j] = <span class="literal">null</span>;</span><br><span class="line">                <span class="keyword">if</span> (e.next == <span class="literal">null</span>)<span class="comment">//说明该位置只有一个元素</span></span><br><span class="line">                    <span class="comment">//转移到新数组</span></span><br><span class="line">                    <span class="comment">/**</span></span><br><span class="line"><span class="comment">                    e.hash              0000 0010 0001   </span></span><br><span class="line"><span class="comment">                    &amp;</span></span><br><span class="line"><span class="comment">                    newCap - 1 比如是31  0000 0001 1111</span></span><br><span class="line"><span class="comment">                    那么算出来的索引就在 0 - 31 之间了</span></span><br><span class="line"><span class="comment">                    */</span></span><br><span class="line">                    newTab[e.hash &amp; (newCap - <span class="number">1</span>)] = e;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (e <span class="keyword">instanceof</span> TreeNode)<span class="comment">//说明该位置是树的引用地址</span></span><br><span class="line">                    ((TreeNode&lt;K,V&gt;)e).split(<span class="built_in">this</span>, newTab, j, oldCap);</span><br><span class="line">                <span class="keyword">else</span> &#123; <span class="comment">// 说明该位置是链表</span></span><br><span class="line">                    Node&lt;K,V&gt; loHead = <span class="literal">null</span>, loTail = <span class="literal">null</span>; <span class="comment">//低位链表的头尾指针 原来的下标</span></span><br><span class="line">                    Node&lt;K,V&gt; hiHead = <span class="literal">null</span>, hiTail = <span class="literal">null</span>; <span class="comment">//高位链表的头尾指针 原来的下标 + 原来数组的长度</span></span><br><span class="line">                    Node&lt;K,V&gt; next;</span><br><span class="line">                    <span class="keyword">do</span> &#123;</span><br><span class="line">                        next = e.next;</span><br><span class="line">                        <span class="comment">/** e.hash  : 0000 0101</span></span><br><span class="line"><span class="comment">                        oldCap    16: 0001 0000</span></span><br><span class="line"><span class="comment">                        &amp;       : 0000 0000</span></span><br><span class="line"><span class="comment">                            说明在低位 就是原来数组的位置</span></span><br><span class="line"><span class="comment">                            如果</span></span><br><span class="line"><span class="comment">                            e.hash  : 0001 0101</span></span><br><span class="line"><span class="comment">                        oldCap    16: 0001 0000</span></span><br><span class="line"><span class="comment">                        &amp;       : 0001 0000</span></span><br><span class="line"><span class="comment">                        说明在高位 就是老下标+16位置</span></span><br><span class="line"><span class="comment">                        */</span></span><br><span class="line">                        <span class="keyword">if</span> ((e.hash &amp; oldCap) == <span class="number">0</span>) &#123;</span><br><span class="line">                            <span class="keyword">if</span> (loTail == <span class="literal">null</span>)</span><br><span class="line">                                loHead = e;</span><br><span class="line">                            <span class="keyword">else</span></span><br><span class="line">                                loTail.next = e;</span><br><span class="line">                            loTail = e;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">else</span> &#123;</span><br><span class="line">                            <span class="keyword">if</span> (hiTail == <span class="literal">null</span>)</span><br><span class="line">                                hiHead = e;</span><br><span class="line">                            <span class="keyword">else</span></span><br><span class="line">                                hiTail.next = e;</span><br><span class="line">                            hiTail = e;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125; <span class="keyword">while</span> ((e = next) != <span class="literal">null</span>);</span><br><span class="line">                    <span class="keyword">if</span> (loTail != <span class="literal">null</span>) &#123;</span><br><span class="line">                        loTail.next = <span class="literal">null</span>;</span><br><span class="line">                        newTab[j] = loHead;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> (hiTail != <span class="literal">null</span>) &#123;</span><br><span class="line">                        hiTail.next = <span class="literal">null</span>;</span><br><span class="line">                        newTab[j + oldCap] = hiHead;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> newTab;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//红黑树的拆分 -&gt;类似，额外统计低位和高位的节点数 这里会有树的退化（只有还剩6个节点才会退化成链表）比如拆分后有7个节点，但是还是数不会变成链表</span></span><br><span class="line"><span class="keyword">final</span> <span class="keyword">void</span> <span class="title function_">split</span><span class="params">(HashMap&lt;K,V&gt; map, Node&lt;K,V&gt;[] tab, <span class="type">int</span> index, <span class="type">int</span> bit)</span> &#123;</span><br><span class="line">            TreeNode&lt;K,V&gt; b = <span class="built_in">this</span>;</span><br><span class="line">            <span class="comment">// Relink into lo and hi lists, preserving order</span></span><br><span class="line">            TreeNode&lt;K,V&gt; loHead = <span class="literal">null</span>, loTail = <span class="literal">null</span>;</span><br><span class="line">            TreeNode&lt;K,V&gt; hiHead = <span class="literal">null</span>, hiTail = <span class="literal">null</span>;</span><br><span class="line">            <span class="type">int</span> <span class="variable">lc</span> <span class="operator">=</span> <span class="number">0</span>, hc = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (TreeNode&lt;K,V&gt; e = b, next; e != <span class="literal">null</span>; e = next) &#123;</span><br><span class="line">                next = (TreeNode&lt;K,V&gt;)e.next;</span><br><span class="line">                e.next = <span class="literal">null</span>;</span><br><span class="line">                <span class="keyword">if</span> ((e.hash &amp; bit) == <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="keyword">if</span> ((e.prev = loTail) == <span class="literal">null</span>)</span><br><span class="line">                        loHead = e;</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                        loTail.next = e;</span><br><span class="line">                    loTail = e;</span><br><span class="line">                    ++lc;<span class="comment">//统计节点</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> ((e.prev = hiTail) == <span class="literal">null</span>)</span><br><span class="line">                        hiHead = e;</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                        hiTail.next = e;</span><br><span class="line">                    hiTail = e;</span><br><span class="line">                    ++hc; <span class="comment">//统计节点</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (loHead != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (lc &lt;= UNTREEIFY_THRESHOLD) <span class="comment">//UNTREEIFY_THRESHOLD = 6 </span></span><br><span class="line">                    <span class="comment">//退化为链表</span></span><br><span class="line">                    tab[index] = loHead.untreeify(map);</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    tab[index] = loHead;</span><br><span class="line">                    <span class="keyword">if</span> (hiHead != <span class="literal">null</span>) <span class="comment">// (else is already treeified)</span></span><br><span class="line">                        loHead.treeify(tab);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (hiHead != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (hc &lt;= UNTREEIFY_THRESHOLD)</span><br><span class="line">                    tab[index + bit] = hiHead.untreeify(map);</span><br><span class="line">                <span class="keyword">else</span> &#123;<span class="comment">//如果lohead == null说明节点全部在低位，高位没有 就会直接把树的头结点的引用地址给这个数组低位 -&gt;相当于直接把红黑树放到了低位</span></span><br><span class="line">                    tab[index + bit] = hiHead;</span><br><span class="line">                    <span class="keyword">if</span> (loHead != <span class="literal">null</span>)</span><br><span class="line">                        hiHead.treeify(tab);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="6-链表树化（既是红黑树又是双向链表）"><a href="#6-链表树化（既是红黑树又是双向链表）" class="headerlink" title="6.链表树化（既是红黑树又是双向链表）"></a>6.链表树化（既是红黑树又是双向链表）</h4><p>双向链表更加方便删除节点</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">final</span> <span class="keyword">void</span> <span class="title function_">treeifyBin</span><span class="params">(Node&lt;K,V&gt;[] tab, <span class="type">int</span> hash)</span> &#123;</span><br><span class="line">    <span class="type">int</span> n, index; Node&lt;K,V&gt; e;</span><br><span class="line">    <span class="comment">//先判断是否要改成红黑树，比如长16的数组，只有一个节点下面挂着长链表，就不会改为红黑树</span></span><br><span class="line">    <span class="keyword">if</span> (tab == <span class="literal">null</span> || (n = tab.length) &lt; MIN_TREEIFY_CAPACITY)</span><br><span class="line">        <span class="comment">//如果当前数组的长度小于64 -&gt; 扩容（一定程度上会解决长链表问题）</span></span><br><span class="line">        resize();</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> ((e = tab[index = (n - <span class="number">1</span>) &amp; hash]) != <span class="literal">null</span>) &#123;</span><br><span class="line">        TreeNode&lt;K,V&gt; hd = <span class="literal">null</span>, tl = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            TreeNode&lt;K,V&gt; p = replacementTreeNode(e, <span class="literal">null</span>);</span><br><span class="line">            <span class="keyword">if</span> (tl == <span class="literal">null</span>)</span><br><span class="line">                hd = p;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">//转化的TreeNode也是双向链表</span></span><br><span class="line">                p.prev = tl;</span><br><span class="line">                tl.next = p;</span><br><span class="line">            &#125;</span><br><span class="line">            tl = p;</span><br><span class="line">        &#125; <span class="keyword">while</span> ((e = e.next) != <span class="literal">null</span>);</span><br><span class="line">        <span class="keyword">if</span> ((tab[index] = hd) != <span class="literal">null</span>)</span><br><span class="line">            hd.treeify(tab);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="7-如果放入元素时发现Node数组上，是TreeNode类型的节点就调用putTreeVal方法"><a href="#7-如果放入元素时发现Node数组上，是TreeNode类型的节点就调用putTreeVal方法" class="headerlink" title="7.如果放入元素时发现Node数组上，是TreeNode类型的节点就调用putTreeVal方法"></a>7.如果放入元素时发现Node数组上，是TreeNode类型的节点就调用putTreeVal方法</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">final</span> TreeNode&lt;K,V&gt; <span class="title function_">putTreeVal</span><span class="params">(HashMap&lt;K,V&gt; map, Node&lt;K,V&gt;[] tab,</span></span><br><span class="line"><span class="params">                               <span class="type">int</span> h, K k, V v)</span> &#123;</span><br><span class="line">    Class&lt;?&gt; kc = <span class="literal">null</span>;</span><br><span class="line">    <span class="type">boolean</span> <span class="variable">searched</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">    TreeNode&lt;K,V&gt; root = (parent != <span class="literal">null</span>) ? root() : <span class="built_in">this</span>;</span><br><span class="line">    <span class="keyword">for</span> (TreeNode&lt;K,V&gt; p = root;;) &#123;</span><br><span class="line">        <span class="type">int</span> dir, ph; K pk;</span><br><span class="line">        <span class="keyword">if</span> ((ph = p.hash) &gt; h)</span><br><span class="line">            dir = -<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (ph &lt; h)</span><br><span class="line">            dir = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> ((pk = p.key) == k || (k != <span class="literal">null</span> &amp;&amp; k.equals(pk)))</span><br><span class="line">            <span class="keyword">return</span> p;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> ((kc == <span class="literal">null</span> &amp;&amp;</span><br><span class="line">                  (kc = comparableClassFor(k)) == <span class="literal">null</span>) ||</span><br><span class="line">                 (dir = compareComparables(kc, k, pk)) == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!searched) &#123;</span><br><span class="line">                TreeNode&lt;K,V&gt; q, ch;</span><br><span class="line">                searched = <span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">if</span> (((ch = p.left) != <span class="literal">null</span> &amp;&amp;</span><br><span class="line">                     (q = ch.find(h, k, kc)) != <span class="literal">null</span>) ||</span><br><span class="line">                    ((ch = p.right) != <span class="literal">null</span> &amp;&amp;</span><br><span class="line">                     (q = ch.find(h, k, kc)) != <span class="literal">null</span>))</span><br><span class="line">                    <span class="keyword">return</span> q;</span><br><span class="line">            &#125;</span><br><span class="line">            dir = tieBreakOrder(k, pk);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        TreeNode&lt;K,V&gt; xp = p;</span><br><span class="line">        <span class="keyword">if</span> ((p = (dir &lt;= <span class="number">0</span>) ? p.left : p.right) == <span class="literal">null</span>) &#123;</span><br><span class="line">            Node&lt;K,V&gt; xpn = xp.next;</span><br><span class="line">            TreeNode&lt;K,V&gt; x = map.newTreeNode(h, k, v, xpn);</span><br><span class="line">            <span class="keyword">if</span> (dir &lt;= <span class="number">0</span>)</span><br><span class="line">                xp.left = x;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                xp.right = x;</span><br><span class="line">            xp.next = x;</span><br><span class="line">            x.parent = x.prev = xp;</span><br><span class="line">            <span class="keyword">if</span> (xpn != <span class="literal">null</span>)</span><br><span class="line">                ((TreeNode&lt;K,V&gt;)xpn).prev = x;</span><br><span class="line">            moveRootToFront(tab, balanceInsertion(root, x));</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
